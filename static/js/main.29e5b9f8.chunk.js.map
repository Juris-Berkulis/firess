{"version":3,"sources":["data/consts.js","data/navigation.js","styles/StyleConsts.js","styles/Style.js","ui_components/HeaderUI.jsx","firebase/firebase.js","store/AppSwitches/Action.js","helper/forMocks/functions.js","helper/helper.js","store/MobileMenuStatus/Selectors.js","store/MobileMenuStatus/Action.js","hooks/hooks.js","routes/Header/Header.js","TECHNICAL/TECHNICAL_CONSTS.js","ui_components/HomeUI.jsx","img/logo/logoRectangle.png","img/logo/logoCircle.png","img/logo/logoEnvelope.png","store/AppSwitches/Selectors.js","routes/Home/Home.js","store/Profile/Action.js","store/Profile/Selectors.js","ui_components/ProfileUI.jsx","routes/Profile/Profile.js","store/ChatList/Action.js","store/ChatsList/Action.js","store/ChatsList/Selectors.js","ui_components/ChangeChatsListUI.jsx","routes/ChatsList/ChangeChatsList/ChangeChatsList.js","ui_components/ChatsListUI.jsx","store/BigChatStatus/Selectors.js","store/BigChatStatus/Action.js","routes/ChatsList/ChatsList.js","store/ChatList/Selectors.js","ui_components/ChatListUI.jsx","routes/Chat/ChatList/ChatList.js","ui_components/ChatFormUI.jsx","routes/Chat/ChatForm/ChatForm.js","ui_components/ChatControlPanelUI.jsx","ui_components/PopUpWindowUI.jsx","ui_components/PopUpWindowForChangeChatPasswordUI.jsx","routes/Chat/ChatControlPanel/ChatControlPanel.js","ui_components/YouAreDeniedAccessToTheChatUI.jsx","routes/Chat/YouAreDeniedAccessToTheChat/YouAreDeniedAccessToTheChat.js","ui_components/ChatUI.jsx","routes/Chat/Chat.js","routes/Error404/Error404.js","store/ApiUsers/AcRedSelFactory.js","store/ApiUsers/NewUsersApi.js","ui_components/ApiUsersUI.jsx","ui_components/UsersLoaderUI.jsx","img/preloader.gif","routes/ApiUsers/UsersLoader/UsersLoader.js","ui_components/UsersErrorUI.jsx","routes/ApiUsers/UsersError/UsersError.js","ui_components/UsersListUI.jsx","routes/ApiUsers/UsersList/UsersList.js","routes/ApiUsers/ApiUsers.js","ui_components/SignupUI.jsx","routes/Signup/Signup.js","ui_components/LoginUI.jsx","routes/Login/Login.js","store/Profile/Reducer.js","store/ChatList/Reducer.js","store/ChatsList/Reducer.js","data/chat list.js","store/MobileMenuStatus/Reducer.js","store/BigChatStatus/Reducer.js","store/AppSwitches/Reducer.js","store/Store.js","hocs/PrivateRoute.js","hocs/PublicRoute.js","ui_components/PreloaderUI.jsx","components/Preloader.js","ui_components/AquariumUI.jsx","img/fish/goldFish.gif","routes/ChatsList/Aquarium/Aquarium.js","ui_components/StartingScreensaverUI.jsx","routes/StartingScreensaver/StartingScreensaver.js","ui_components/DeviceOnTheNetworkUI.jsx","routes/DeviceOnTheNetwork/DeviceOnTheNetwork.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["appTitle","allAppComponentsWithPageTitle","home","pageTitle","displayTitle","path","pathCheck","profile","messenger","usersApi","signup","login","logout","preloader","error404","openChat","chatId","APP_THEMES_NAMES","theme_1","nameEn","nameRu","theme_2","theme_3","theme_4","getTime","hour","minute","appThemesSchedule","themeNameEn","themeNameRu","themeStartAt","NAVIGATION","name","href","styleConsts","mainColor1","mainColor1DarkTheme","mainColor1GreyTheme","mainColor1SunnyTheme","mainColor2","mainColor2DarkTheme","mainColor2GreyTheme","mainColor2SunnyTheme","openChatColor","openChatColorDarkTheme","openChatColorGreyTheme","openChatColorSunnyTheme","popUpWindowBtnColor","popUpWindowBtnColorDarkTheme","popUpWindowBtnColorGreyTheme","popUpWindowBtnColorSunnyTheme","chatsListColor","chatsListColorDarkTheme","chatsListColorGreyTheme","chatsListColorSunnyTheme","favoriteIconColor","favoriteIconColorDarkTheme","favoriteIconColorGreyTheme","favoriteIconColorSunnyTheme","homeAppNameColor","homeAppNameColorDarkTheme","homeAppNameColorGreyTheme","homeAppNameColorSunnyTheme","useStyles","makeStyles","center","padding","main","position","height","backgroundColor","main_darkTheme","filter","main_greyTheme","main_sunnyTheme","preloader__field","width","display","justifyContent","alignItems","zIndex","preloader__center","flexDirection","preloader__title","marginBottom","fontSize","color","preloader__description","preloader__img","universalPreloaderCenter","userSelect","universalPreloaderImg","pointerEvents","field","overflow","field_mobileMenuOpen","field_mobileDevice","SigLogWrapper","border","borderRadius","SigLogField","SigLogForm","margin","SigLogDescription","textAlign","SigLogArea","SigLogInput","SigLogInputMobileDevice","SigLogEmailInput","SigLogActionErrorArea","SigLogActionErrorText","SigLogActionButtons","flexWrap","SigLogActionBtn","cursor","SigLogActionWaiting","SigLogTitle","SigLogActionWaitingText","SigLogActionWaitingText_countdown","SigLogActionPreloader","SigLogInfoDescription","SigLogInfoLink","headerNav","minHeight","headerNavMobileOpen","top","left","paddingTop","headerNavItem","headerNavItemMobile","chatsListActionResaltInfo_attention","chatsListActionResaltInfo_success","changeContactNameForm","changeContactNameInfo","borderBottomLeftRadius","borderBottomRightRadius","changeContactNameInput","outline","changeChatsSearchMode","changeChatsSearchMode_success","changeChatsSearchMode_attention","changeContactNameButtons","borderBottom","changeContactNameButtons_darkTheme","changeContactNameButtons_greyTheme","changeContactNameButtons_sunnyTheme","changeContactNameIcon","changeContactNameIcon_darkTheme","changeContactNameIcon_greyTheme","changeContactNameIcon_sunnyTheme","allChatsListItem","allChatsListItem_openChat","allChatsListItem_darkTheme","allChatsListItem_greyTheme","allChatsListItem_sunnyTheme","allChatsListItem_chatNameWrapper","whiteSpace","allChatsListItem_wrapperSymbols","allChatsListItem_privatChatIcon","allChatsListItem_favoriteIcon","lineHeight","marginLeft","fontWeight","allChatsListItem_favoriteIcon_darkTheme","allChatsListItem_favoriteIcon_greyTheme","allChatsListItem_favoriteIcon_sunnyTheme","chat","chat_darkTheme","chat_greyTheme","chat_sunnyTheme","chatMobileDevice","chatUpPart","chatDownPart","maxHeight","form","marginTop","input","flexGrow","background","resize","input_mobileDevice","imgInInput","imgBtnWrapper","imgBtnText","transform","imgError","right","bottom","imgBtn","opacity","chatsList","paddingRight","chatList","chatListItem","chatListItemMe","chatListItemSomebody","chatListItemMessage","wordBreak","minWidth","maxWidth","chatListItemMessageMe","chatListItemMessageSomebody","chatListItemMessageSomebody_greyTheme","chatListItemMessageAuthor","chatListItemMessageAuthorMobileDevice","chatListItemMessageImgWrapper","chatListItemMessageImg","chatListItemMessageText","chatListItemMessageTextMobileDevice","chatListItemMessageDateAndTime","chatListItemMessageDateAndTimeMobileDevice","chatControlPanel","chatControlPanelLeftPart","marginRight","paddingLeft","chatControlPanelLeftPart_mobileDevice","chatControlPanelIconsWrapper","chatControlPanelIPrivatChatIcon","chatControlPanelName","chatControlPanelName_mobileDevice","chatControlPanelRightPart","chatControlPanelMenu","chatControlPanelBtn","chatControlPanelBtn_mobileDevice","chatControlPanelBtn__changeChatPassword","popUpWindow","popUpWindow_mobileDevice","popUpWindowQuestion","popUpWindowQuestion_mobileDevice","popUpWindowAction","popUpWindowBtn","popUpWindowBtn_darkTheme","popUpWindowBtn_greyTheme","popUpWindowBtn_sunnyTheme","popUpWindowBtn_mobileDevice","popUpWindowForChangeChatPasswor_input","popUpWindowForChangeChatPasswor_input_mobileDevice","popUpWindowForChangeChatPasswor_errorWrapper","popUpWindowForChangeChatPasswor_errorText","aquarium","aquarium_mobileDevice","aquariumIsOpen","aquariumIsOpen_darkTheme","aquariumIsOpen_greyTheme","aquariumIsOpen_sunnyTheme","aquariumIsClose","aquariumField","aquariumFish","aquariumFish_greyTheme","youAreDeniedAccessToTheChat_field","youAreDeniedAccessToTheChat_wrapper","youAreDeniedAccessToTheChat_wrapperInfo","youAreDeniedAccessToTheChat_textInfo","youAreDeniedAccessToTheChat_textInfo__first","youAreDeniedAccessToTheChat_input","youAreDeniedAccessToTheChat_wrapper_input_mobileDevice","youAreDeniedAccessToTheChat_errorWrapper","youAreDeniedAccessToTheChat_errorText","youAreDeniedAccessToTheChat_btn","api_users__title","api_users__btn","users_list__wrapper","users_list__items","listStyle","users_list__items__screen_height_less_than_450","users_list__item","users_list__name","users_list__name__mobile_device","users_list__additionally","users_list__additionally__mobile_device","users_loader__field","paddingBottom","users_loader__center","users_loader__text","users_loader__img","users_loader__img__mobile_device","users_error__field","users_error__wrapper_text","users_error__text","page__fieldWrapper","page__fieldWrapper_mobileDevice","page__field","page__field_darkTheme","page__field_greyTheme","page__field_sunnyTheme","page__field_mobileDevice","page__title","home__appNameWrapper","home__appName","home__appName_darkTheme","home__appName_greyTheme","home__appName_sunnyTheme","home__appDescriptionWrapper","home__descriptionParagraphWrapper","home__descriptionParagraph","home__descriptionTitle","textTransform","home__benefitsWrapper","home__benefitsParagraph","home__benefitName","home__benefitsList","listStyleType","home__benefitsListItem","home__descriptionMiniTitle","home__logoWrapper","home__logoImg","deviceOnTheNetwork__wrapper","deviceOnTheNetwork__lamp","deviceOnTheNetwork__lamp_connectNetwork_1","animation","deviceOnTheNetwork__lamp_connectNetwork_2","deviceOnTheNetwork__lamp_connectNetwork_3","deviceOnTheNetwork__lamp_disconnectNetwork","HeaderUI","props","Toolbar","className","classes","mobileMenuOpen","component","showBurgerMenuProps","navigationForProps","showLogOutBtnForProps","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","database","connectedRef","ref","chatsRef","messagesRef","chatAccessRef","analytics","emailVerificationConfirmationWaitingIsTrue","emailVerificationConfirmationWaitingIsFalse","countdownForLetterRequest","lastAuthorization","valueInChatsListInput","aquariumStatus","appTheme","onlySelectedChats","chatsCount","eventForPWAInstallation","deviceOnTheNetworkAction","isStrictSearchAction","functionsForMocks","email","password","createUserWithEmailAndPassword","currentUser","sendEmailVerification","reload","signInWithEmailAndPassword","getWindowDimensions","window","innerWidth","innerHeight","isMobileDevice","userVerificationWaiting","verificationWaitingBoolean","push","timerId","setInterval","a","emailVerified","waiting","clear","clearInterval","instantUserVerificationChecking","isLoading","confirmSendingOfTheVerificationLetter","myEmail","success","error","requestTheLetter","infoMessage","countdownForLetterRequestWithLink","dispatch","startValueForTimer","counter","intervalId","type","payload","clearTimeout","isNumberOrString","value","valueStr","validNumber","String","toLowerCase","getElementWidth","current","clientWidth","getElementHeight","clientHeight","getKeyForTheChat","chatsListChatsKindOfDictRed","findValue","keyInValueOfDict","key","getKeyForTheChatByChatId","getMobileMenuIsOpenSelector","state","mobileMenu","getMobileMenuRootSelector","isMobileMenuOpen","toggleMobileMenuStatus","closeMobileMenuStatus","useChangeEmailVerificationStatus","location","useState","verified","setVerified","useEffect","unsubscribe","onIdTokenChanged","user","useUserVerificationWaiting","useDispatch","onAuthStateChanged","useAutomaticStartOfTheCountdownTimer","Header","useLocation","isMobileDeviceProps","myUID","uid","useSelector","emailVerificationStatus","navigation","item","map","Button","to","Link","logoutUser","signOut","showMobileMenu","onClick","HomeUI","isMobileDeviceBoolean","appThemeSel","style","src","logoEnvelope","alt","logoRectangle","logoCircle","getStatusesInTheAppRootSelector","statusesInTheApp","getStatusesInTheAppIsEmailVerificationConfirmationWaitingSelector","isEmailVerificationConfirmationWaiting","getStatusesInTheAppCountdownForLetterRequestIsNumberSelector","countdownForLetterRequestIsNumber","getStatusesInTheAppLastAuthorizationDateAndTimeSelector","lastAuthorizationDateAndTime","getStatusesInTheAppValueInChatsListInputIsSelector","valueInChatsListInputIs","getStatusesInTheAppIsAquariumOpenSelector","isAquariumOpen","getStatusesInTheAppappThemeIsSelector","appThemeIs","getStatusesInTheAppOnlySelectedChatsBooleanSelector","onlySelectedChatsBoolean","getStatusesInTheAppChatsCountSelectedSelector","chatsCountSelected","getStatusesInTheAppEventForPWAInstallationSelector","eventForPWAInstallationCase","getAppSwitchesDeviceOnTheNetworkSelector","deviceOnTheNetworkCase","getStatusesInTheAppIsStrictSearchSelector","isStrictSearchCase","Home","toggleCheckedProfile","getProfileCheckedSelector","getProfileRootSelector","checked","ProfileUI","componentTitle","isChecked","onChange","toggleChecked","myEmailForProps","eventForPWAInstallationSel","id","installApp","Profile","prompt","userChoice","CHANGE_MESSAGES_LIST","DROP_MESSAGES_IN_STATE","dropMessagesInStateAction","changeMessagesList","openChatKey","snapshot","snapshotVal","val","removeAllMessagesInDeleteChatWithThunkAction","child","remove","CHANGE_CHATS_LIST","DROP_CHATS_LIST_IN_STATE","removeFromChatsListWithThunkAction","chatKey","changeChatsList","onTrackingChangeValueInChatsListWithThunkAction","on","offTrackingChangeValueInChatsListWithThunkAction","off","deleteSecretIntoAboutDeletedChatWithThunkAction","getChatsListChatsKindOfDictSelector","chatsListReducer","getChatsListRootSelector","chats","getChatsListChatsKindOfListSelector","Object","values","ChangeChatsListUI","Box","onSubmit","placeholder","label","onSaveNameFromInput","valueName","refInput","isStrictSearchForProps","errorForProps","successForProps","IconButton","PersonAdd","deliteContact","DeleteForever","changeStatusOnAllChatsOrOnlySelectedChats","onlySelectedChatsSel","Star","StarBorder","openAquarium","AccessTime","ChangeChatsList","setValueName","setError","setSuccess","chatsListActionResaltInfo","chatsListRed","chatsCountSelectedSel","isStrictSearchSel","useRef","showSimilarChatsCount","useCallback","resetValue","addContact","newName","now","Date","newContactId","chatAuthor","focus","setTimeout","event","preventDefault","maxLength","length","chatName","test","validCharactersInTheChatName","validStartOfString","validEndOfString","newValueName","replace","removeSpacesAtTheBeginningAndAtTheEndOfTheString","combineSameCharacters","find","newContact","target","delChatsListRedKey","getKeyForTheChatByChatName","ChatsListUI","List","newChatsListRed","getBigChatIsOpenSelector","bigChat","getBigChatRootSelector","isBigChatOpen","bigChatOpen","bigChatClose","ChatsList","sort","b","num1","num2","chatNameA","chatNameB","valueInChatsListInputLowerCase","theyLikeThisChat","chatNameLowerCase","includes","chatNameIndex","i","foundLetterIndex","indexOf","searchForEnteredValue","ListItem","button","chatIsPrivate","theyCanReadThisChat","itemUID","useLayoutEffect","getChatListMessagesSelector","chatListReducer","getChatListRootSelector","messages","getChatListChatKindOfListById","getChatListChatKindOfDictById","ChatListUI","refOpenChat","chatListRedForProps","ChatList","useParams","chatListRed","scrollHeight","Math","max","offsetHeight","scrollTo","scrollDown","onTrackingChangeValueInMessagesListFromOpenChatWithThunkAction","offTrackingChangeValueInMessagesListFromOpenChatWithThunkAction","localTimezone","getTimezoneOffset","getLocalDateAndTime","utcDateAndTime","monthString","utcDateAndTimeList","split","localYear","localMonth","localNumber","localHour","localMinute","localSecond","parseUTCDataAndTimeString","validDateAndTime","toString","getValidLocalDateAndTime","validDateAndTimeList","validLocalYear","validLocalMonth","validLocalNumber","validLocalHour","validLocalMinute","validLocalSecond","parseLocalDataAndTimeString","convertStringLinksToWorkingLinks","text","regExp","match","textString","e","join","author","chatListItemMessageSomebody_darkTheme","chatListItemMessageSomebody_sunnyTheme","imgSrc","dangerouslySetInnerHTML","__html","messageUTCDateAndTime","ChartFormUI","inputHeight","onSaveValueFromInput","imgSrcForSendMessage","resetAttachPicture","attachPictures","refImgBtn","inputMinHeight","Send","ChartForm","maxImgSizeForMessage","setValue","setInputHeight","setImgSrcForSendMessage","setImgError","openContact","chatListMessagesRed","resetInputHeight","toUTCString","newMessage","inputText","textWithoutForbiddenTags","replaceAll","destroyAllTags","textWithHighlightTags","createTagsToHighlightTheEnteredText","autoEditInputText","contactKey","contactName","contactId","addMessageInChatListWithThunkAction","attachImages","files","attachImage","fileType","size","fileReader","FileReader","onload","result","readAsDataURL","toFixed","ChatControlPanelUI","chatControlPanelIcon","openPopUpWindow","openPopUpWindowForChangeChatPassword","changeChatStatusAsFavorite","closeChat","PopUpWindowUI","deleteChat","closePopUpWindow","PopUpWindowForChangeChatPasswordUI","chatPassword","popUpWindowInput","inputref","onSavePasswordValueFromInput","passwordValue","errorPassword","changeChatPassword","closePopUpWindowForChangeChatPassword","ChatControlPanel","popUpWindowIsOpen","setPopUpWindowIsOpen","popUpWindowForChangeChatPasswordIsOpen","setPopUpWindowForChangeChatPasswordIsOpen","setPasswordValue","setErrorPassword","setChatPassword","useHistory","get","then","exists","userUID","update","addTheUserWhoLikesThisChatWithThunkAction","chatIsPublic","validLength","newPassword","validLengthOfTheNewPassword","validCharacters","validCharactersInTheNewPassword","chatAuthorUID","set","changeChatPasswordWithThunkAction","makeTheChatPrivateWithThunkAction","YouAreDeniedAccessToTheChatUI","registerToChat","resetPasswordInInput","YouAreDeniedAccessToTheChat","addUserIntoChatWithThunkAction","ChatUI","privateChat","canIReadThisChatBoolean","Chat","usersUID","Error404","initialState","isError","data","newUsers","dataName","apiUrl","actionTypes","SET_ERROS","SET_LOADING","SET_DATA","actions","status","setLoading","setData","users","getDataWithThunk","fetch","response","ok","Error","json","console","getRootSelector","reducer","action","selectors","getFromStore","getData","getLoading","getError","usersApiFactory","ApiUsersUI","dataForProps","isLoadingForProps","isErrorForProps","UsersLoaderUI","ismobileDeviceProps","UsersLoader","UsersErrorUI","UsersError","UsersListUI","screenHeightLessThan450","dataUI","UsersList","users_list__phone","phone","users_list__delimiter","users_list__email","ApiUsers","screenHeight","SignupUI","iAmGoingToSignup","Signup","setEmail","setPassword","setInfoMessage","timeLeftBeforeRequesting","userLanguage","navigator","languages","language","systemLanguage","substr","handleSubmit","languageCode","message","changeInfoMessage","SigLogEmailArea","SigLogPasswordArea","SigLogPasswordInput","SigLogActionArea","SigLogInfoText","LoginUI","Login","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","USERS","persistConfig","storage","blacklist","persistedReduser","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","PrivateRoute","authenticated","rest","PublicRoute","PreloaderUI","Preloader","AquariumUI","isAquariumStatus","refAquariumField","changeAquariumStatus","isPreloader","preloaderDimensions","moveOy","moveOx","transition","fishDuration","fishTimingFunction","fishDelay","rotateImg","goldFish","fishWidth","Aquarium","transitionTimingFunctionRef","fishWidthRef","floor","random","moveOxBeginRef","setIsPreloader","setPreloaderDimensions","setMoveOx","setMoveOy","setRotateImg","setFishDuration","setFishTimingFunction","setFishDelay","openPreloader","AquariumFieldWidth","AquariumFieldHeight","getPreloaderDimensions","addEventListener","attachEvent","fishHeight","moveOxLast","fishMoving","ratioOfWidthToHeight","moveOxNext","removeEventListener","detachEvent","StartingScreensaverUI","StartingScreensaver","DeviceOnTheNetworkUI","title","deviceOnTheNetworkSel","DeviceOnTheNetwork","App","windowDimensions","setWindowDimensions","handleResize","useWindowDimensions","pathname","objectRegExp","getPageTitle","fullPageTitle","makeFullPageTitle","document","booleanForChangeTheme","setBooleanForChangeTheme","changeThemeInApp","newDate","timeLocal","getHours","getMinutes","getSeconds","getMilliseconds","appThemesScheduleSort","appThemesWere","theme","appThemesWill","appThemeNow","meta","querySelector","setAttribute","timeUntilNextThemeChanging","getTimeBeforeThemeChanging","saveEventForfurtherPWAInstallation","reportAboutPWAInstallationSuccess","period","loading","exact","bgcolor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","origin","headers","contentType","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.29e5b9f8.chunk.js","sourcesContent":["export const appTitle = {\r\n    name: 'ℱírεss ℳεssεngεr',\r\n    delimiter: '. ',\r\n};\r\n\r\nexport const mobileScreenWidth = 1000;\r\n\r\nexport const allAppComponentsWithPageTitle = {\r\n    home: {\r\n        pageTitle: 'Домашняя страница',\r\n        displayTitle: 'Дом',\r\n        path: '/',\r\n        pathCheck: /^$/,\r\n    },\r\n    profile: {\r\n        pageTitle: 'Профиль',\r\n        displayTitle: 'Профиль',\r\n        path: '/profile',\r\n        pathCheck: /^$/,\r\n    },\r\n    messenger: {\r\n        pageTitle: 'Список чатов',\r\n        displayTitle: 'Мессенджер',\r\n        path: '/messenger',\r\n        pathCheck: /^$/,\r\n    },\r\n    usersApi: {\r\n        pageTitle: 'Юзеры по API',\r\n        displayTitle: 'Юзеры по API',\r\n        path: '/usersapi',\r\n        pathCheck: /^$/,\r\n    },\r\n    signup: {\r\n        pageTitle: 'Регистрация',\r\n        displayTitle: 'Регистрация',\r\n        path: '/signup',\r\n        pathCheck: /^$/,\r\n    },\r\n    login: {\r\n        pageTitle: 'Вход',\r\n        displayTitle: 'Вход',\r\n        path: '/login',\r\n        pathCheck: /^$/,\r\n    },\r\n    logout: {\r\n        pageTitle: '',\r\n        displayTitle: 'Выход',\r\n        path: '',\r\n        pathCheck: /^$/,\r\n    },\r\n    preloader: {\r\n        pageTitle: 'Загрузка сайта...',\r\n        displayTitle: '',\r\n        path: '',\r\n        pathCheck: /^$/,\r\n    },\r\n    error404: {\r\n        pageTitle: '404: Чат не найден',\r\n        displayTitle: '',\r\n        path: '/messenger/error404',\r\n        pathCheck: /^$/,\r\n    },\r\n    openChat: {\r\n        pageTitle: (chatId) => {\r\n            return `Чат: ${chatId}`\r\n        },\r\n        displayTitle: '',\r\n        path: '/messenger/:chatId',\r\n        pathCheck: /^\\/messenger\\/\\d{13}$/,\r\n    },\r\n};\r\n\r\nexport const startValueForTimer = 91;\r\n\r\nexport const MAXIMUM_NUMBER_OF_CHARACTERS_FOR_A_CHAT_NAME = 50;\r\n\r\nexport const APP_THEMES_NAMES = {\r\n    theme_1: {\r\n        nameEn: 'lightTheme',\r\n        nameRu: 'Светлая',\r\n    },\r\n    theme_2: {\r\n        nameEn: 'dartTheme',\r\n        nameRu: 'Темная',\r\n    },\r\n    theme_3: {\r\n        nameEn: 'greyTheme',\r\n        nameRu: 'Серая',\r\n    },\r\n    theme_4: {\r\n        nameEn: 'sunnyTheme',\r\n        nameRu: 'Солнечно',\r\n    },\r\n};\r\n\r\nconst getTime =(hour, minute) => {\r\n    return +hour * 60 * 60 * 1000 + +minute * 60 * 1000\r\n};\r\n\r\nexport const appThemesSchedule = [\r\n    {\r\n        themeNameEn: APP_THEMES_NAMES.theme_3.nameEn,\r\n        themeNameRu: APP_THEMES_NAMES.theme_3.nameRu,\r\n        themeStartAt: getTime(0, 0),\r\n    },\r\n    {\r\n        themeNameEn: APP_THEMES_NAMES.theme_2.nameEn,\r\n        themeNameRu: APP_THEMES_NAMES.theme_2.nameRu,\r\n        themeStartAt: getTime(6, 0),\r\n    },\r\n    {\r\n        themeNameEn: APP_THEMES_NAMES.theme_1.nameEn,\r\n        themeNameRu: APP_THEMES_NAMES.theme_1.nameRu,\r\n        themeStartAt: getTime(8, 30),\r\n    },\r\n    {\r\n        themeNameEn: APP_THEMES_NAMES.theme_4.nameEn,\r\n        themeNameRu: APP_THEMES_NAMES.theme_4.nameRu,\r\n        themeStartAt: getTime(12, 0),\r\n    },\r\n    {\r\n        themeNameEn: APP_THEMES_NAMES.theme_1.nameEn,\r\n        themeNameRu: APP_THEMES_NAMES.theme_1.nameRu,\r\n        themeStartAt: getTime(12, 5),\r\n    },\r\n    {\r\n        themeNameEn: APP_THEMES_NAMES.theme_2.nameEn,\r\n        themeNameRu: APP_THEMES_NAMES.theme_2.nameRu,\r\n        themeStartAt: getTime(20, 30),\r\n    },\r\n];\r\n","import { allAppComponentsWithPageTitle } from \"./consts\";\r\n\r\nexport const NAVIGATION = [\r\n    {\r\n        name: allAppComponentsWithPageTitle.home.displayTitle,\r\n        href: allAppComponentsWithPageTitle.home.path,\r\n    },\r\n    {\r\n        name: allAppComponentsWithPageTitle.profile.displayTitle,\r\n        href: allAppComponentsWithPageTitle.profile.path,\r\n    },\r\n    {\r\n        name: allAppComponentsWithPageTitle.messenger.displayTitle,\r\n        href: allAppComponentsWithPageTitle.messenger.path,\r\n    },\r\n    {\r\n        name: allAppComponentsWithPageTitle.usersApi.displayTitle,\r\n        href: allAppComponentsWithPageTitle.usersApi.path,\r\n    },\r\n];\r\n","export const styleConsts = {\r\n    backgroundColor: {\r\n        mainColor1: '#4b44b4',\r\n        mainColor1DarkTheme: '#2d296c',\r\n        mainColor1GreyTheme: '#4e4e4e',\r\n        mainColor1SunnyTheme: '#4631ff',\r\n        mainColor2: '#ccccff',\r\n        mainColor2DarkTheme: '#4444aa',\r\n        mainColor2GreyTheme: '#2b6d2b',\r\n        mainColor2SunnyTheme: '#2b6d2b',\r\n        openChatColor: '#b5c6f4',\r\n        openChatColorDarkTheme: '#88bbdd',\r\n        openChatColorGreyTheme: '#88bbdd',\r\n        openChatColorSunnyTheme: '#88bbdd',\r\n        popUpWindowBtnColor: '#2b6d2b',\r\n        popUpWindowBtnColorDarkTheme: '#2b6d2b',\r\n        popUpWindowBtnColorGreyTheme: '#888888',\r\n        popUpWindowBtnColorSunnyTheme: '#2b6d2b',\r\n    },\r\n    color: {\r\n        chatsListColor: '#444444',\r\n        chatsListColorDarkTheme: '#dddddd',\r\n        chatsListColorGreyTheme: '#dddddd',\r\n        chatsListColorSunnyTheme: '#dddddd',\r\n        favoriteIconColor: '#b79c00',\r\n        favoriteIconColorDarkTheme: '#ffd700',\r\n        favoriteIconColorGreyTheme: '#ffd700',\r\n        favoriteIconColorSunnyTheme: '#ffd700',\r\n        homeAppNameColor: '#4b44b4',\r\n        homeAppNameColorDarkTheme: '#ffffff',\r\n        homeAppNameColorGreyTheme: '#ffffff',\r\n        homeAppNameColorSunnyTheme: '#ffffff',\r\n    },\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { styleConsts } from './StyleConsts';\r\n\r\nexport const useStyles = makeStyles({\r\n  center: {\r\n    padding: '0 calc((100% - 90vw) / 2)',\r\n  },\r\n  main: {\r\n    position: 'relative',\r\n    height: '100vh',\r\n    backgroundColor: styleConsts.backgroundColor.mainColor2,\r\n    padding: '0',\r\n  },\r\n  main_darkTheme: {\r\n    backgroundColor: styleConsts.backgroundColor.mainColor2DarkTheme,\r\n    filter: 'brightness(0.6)',\r\n  },\r\n  main_greyTheme: {\r\n    backgroundColor: styleConsts.backgroundColor.mainColor2GreyTheme,\r\n    filter: 'grayscale(1)',\r\n  },\r\n  main_sunnyTheme: {\r\n    backgroundColor: styleConsts.backgroundColor.mainColor2SunnyTheme,\r\n    filter: 'saturate(3)',\r\n  },\r\n  preloader__field: {\r\n    height: '90vh',\r\n    width: '100vw',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: '999',\r\n  },\r\n  preloader__center: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  preloader__title: {\r\n    marginBottom: '0.1vh',\r\n    fontSize: '36px',\r\n    color: '#eeeeee'\r\n  },\r\n  preloader__description: {\r\n    marginBottom: '5vh',\r\n    fontSize: '24px',\r\n    color: '#eeeeee'\r\n  },\r\n  preloader__img: {\r\n    width: '250px',\r\n  },\r\n  universalPreloaderCenter: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    userSelect: 'none',\r\n  },\r\n  universalPreloaderImg: {\r\n    pointerEvents: 'none',\r\n  },\r\n  field: {\r\n    height: '90vh !important',\r\n    padding: '5vh 10vw !important',\r\n    overflow: 'hidden !important',\r\n  },\r\n  field_mobileMenuOpen: {\r\n    display: 'none !important',\r\n  },\r\n  field_mobileDevice: {\r\n    padding: '2vh 2vw 10vh !important',\r\n  },\r\n  SigLogWrapper: {\r\n    height: '100%',\r\n    width: '100%',\r\n    backgroundColor: styleConsts.backgroundColor.mainColor1,\r\n    border: '3px solid #cccccc',\r\n    borderRadius: '20px',\r\n    padding: '0 20px',\r\n    color: '#eeeeee',\r\n    fontSize: '16px',\r\n  },\r\n  SigLogField: {\r\n    height: '100%',\r\n    width: '100%',\r\n    padding: '5vh 5vw',\r\n    overflow: 'auto',\r\n  },\r\n  SigLogForm: {\r\n    margin: '0 auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  SigLogDescription: {\r\n    fontSize: '1em',\r\n    marginBottom: '3vh',\r\n    textAlign: 'center',\r\n  },\r\n  SigLogArea: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  SigLogInput: {\r\n    width: '40%',\r\n    marginBottom: '3vh',\r\n    border: '1px solid #cccccc',\r\n    borderRadius: '0.8em',\r\n    padding: '0.3em 0.6em',\r\n    fontSize: '1em',\r\n  },\r\n  SigLogInputMobileDevice: {\r\n    width: '100%',\r\n  },\r\n  SigLogEmailInput: {\r\n    marginBottom: '1.5vh',\r\n  },\r\n  SigLogActionErrorArea: {\r\n    width: '80%',\r\n    backgroundColor: '#ffcccc',\r\n    padding: '1em',\r\n    marginBottom: '3vh',\r\n    borderRadius: '1.5em',\r\n  },\r\n  SigLogActionErrorText: {\r\n    textAlign: 'center',\r\n    color: '#ff0000',\r\n    fontSize: '1em',\r\n  },\r\n  SigLogActionButtons: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n  },\r\n  SigLogActionBtn: {\r\n    fontSize: '1em',\r\n    margin: '0 10px 1vh',\r\n    padding: '0.3em 0.6em',\r\n    borderRadius: '0.8em',\r\n    border: '1.5px solid #cccccc',\r\n    backgroundColor: '#2b6d2b',\r\n    color: '#eeeeee',\r\n    cursor: 'pointer',\r\n  },\r\n  SigLogActionWaiting: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  SigLogTitle: {\r\n    fontSize: '1.5em',\r\n    marginBottom: '1vh',\r\n    textAlign: 'center',\r\n  },\r\n  SigLogActionWaitingText: {\r\n    fontSize: '1em',\r\n    marginBottom: '3vh',\r\n    textAlign: 'center',\r\n  },\r\n  SigLogActionWaitingText_countdown: {\r\n    marginBottom: '1vh',\r\n  },\r\n  SigLogActionPreloader: {\r\n    width: '25vw',\r\n    marginBottom: '3vh',\r\n  },\r\n  SigLogInfoDescription: {\r\n    fontSize: '0.9em',\r\n  },\r\n  SigLogInfoLink: {\r\n    color: '#88ff88',\r\n  },\r\n  headerNav: {\r\n    height: '10vh !important',\r\n    minHeight : '10vh !important',\r\n    backgroundColor: styleConsts.backgroundColor.mainColor1,\r\n  },\r\n  headerNavMobileOpen: {\r\n    position: 'fixed',\r\n    top: '0',\r\n    left: '0',\r\n    width: '100vw',\r\n    height: '100vh !important',\r\n    minHeight : '100vh !important',\r\n    display: 'flex !important',\r\n    flexDirection: 'column',\r\n    paddingTop: '10vh !important',\r\n    zIndex: '9',\r\n    overflow: 'auto',\r\n  },\r\n  headerNavItem: {\r\n    color: '#ffffee'\r\n  },\r\n  headerNavItemMobile: {\r\n    display: 'none',\r\n  },\r\n  chatsListActionResaltInfo_attention: {\r\n    color: '#ff0000',\r\n  },\r\n  chatsListActionResaltInfo_success: {\r\n    color: '#33aa33',\r\n  },\r\n  changeContactNameForm: {\r\n    width: '100%',\r\n    padding: '0 5px',\r\n  },\r\n  changeContactNameInfo: {\r\n    textAlign: 'center',\r\n    backgroundColor: '#eeeeee',\r\n    margin: '0 2.5vw',\r\n    padding: '0 2.5vw',\r\n    borderBottomLeftRadius: '2.5vw',\r\n    borderBottomRightRadius: '2.5vw',\r\n  },\r\n  changeContactNameInput: {\r\n    width: '100%',\r\n    backgroundColor: '#eeeeee',\r\n    padding: '10px 2.5vw',\r\n    borderRadius: '2.5vw',\r\n    border: 'none',\r\n    '&:focus': {\r\n      outline: 'none',\r\n    }\r\n  },\r\n  changeChatsSearchMode: {\r\n    width: '100%',\r\n    marginBottom: '5px',\r\n    padding: '5px',\r\n    backgroundColor: '#dddddd',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: '#cccccc',\r\n    }\r\n  },\r\n  changeChatsSearchMode_success: {\r\n    color: '#33aa33',\r\n  },\r\n  changeChatsSearchMode_attention: {\r\n    color: '#ff0000',\r\n  },\r\n  changeContactNameButtons: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    borderBottom: `1px solid ${styleConsts.color.chatsListColor}`,\r\n  },\r\n  changeContactNameButtons_darkTheme: {\r\n    borderBottom: `1px solid ${styleConsts.color.chatsListColorDarkTheme}`,\r\n  },\r\n  changeContactNameButtons_greyTheme: {\r\n    borderBottom: `1px solid ${styleConsts.color.chatsListColorGreyTheme}`,\r\n  },\r\n  changeContactNameButtons_sunnyTheme: {\r\n    borderBottom: `1px solid ${styleConsts.color.chatsListColorSunnyTheme}`,\r\n  },\r\n  changeContactNameIcon: {\r\n    color: styleConsts.color.chatsListColor,\r\n  },\r\n  changeContactNameIcon_darkTheme: {\r\n    color: styleConsts.color.chatsListColorDarkTheme,\r\n  },\r\n  changeContactNameIcon_greyTheme: {\r\n    color: styleConsts.color.chatsListColorGreyTheme,\r\n  },\r\n  changeContactNameIcon_sunnyTheme: {\r\n    color: styleConsts.color.chatsListColorSunnyTheme,\r\n  },\r\n  allChatsListItem: {\r\n    marginBottom: '0.1vh',\r\n    color: styleConsts.color.chatsListColor,\r\n    fontSize: '20px',\r\n    display: 'flex !important',\r\n    justifyContent: 'space-between !important',\r\n    alignItems: 'center !important',\r\n    padding: '8px 5px 8px 16px !important',\r\n    '&:hover': {\r\n      backgroundColor: '#aaaaee',\r\n    },\r\n  },\r\n  allChatsListItem_openChat: {\r\n    backgroundColor: '#bbbbee',\r\n  },\r\n  allChatsListItem_darkTheme: {\r\n    color: styleConsts.color.chatsListColorDarkTheme,\r\n  },\r\n  allChatsListItem_greyTheme: {\r\n    color: styleConsts.color.chatsListColorGreyTheme,\r\n  },\r\n  allChatsListItem_sunnyTheme: {\r\n    color: styleConsts.color.chatsListColorSunnyTheme,\r\n  },\r\n  allChatsListItem_chatNameWrapper: {\r\n    overflow: 'auto',\r\n    whiteSpace: 'pre', //* - It is preferable to use \"nowrap\" instead of \"pre\", but in this case it will be difficult to delete the chat from the database.\r\n  },\r\n  allChatsListItem_wrapperSymbols: {\r\n    display: 'flex',\r\n    flexWrap: 'nowrap',\r\n    alignItems: 'center',\r\n  },\r\n  allChatsListItem_privatChatIcon: {\r\n    fontSize: '60%',\r\n  },\r\n  allChatsListItem_favoriteIcon: {\r\n    fontSize: '100%',\r\n    lineHeight: '80%',\r\n    color: styleConsts.color.favoriteIconColor,\r\n    marginLeft: '5px',\r\n    fontWeight: '500',\r\n  },\r\n  allChatsListItem_favoriteIcon_darkTheme: {\r\n    color: styleConsts.color.favoriteIconColorDarkTheme,\r\n  },\r\n  allChatsListItem_favoriteIcon_greyTheme: {\r\n    color: styleConsts.color.favoriteIconColorGreyTheme,\r\n  },\r\n  allChatsListItem_favoriteIcon_sunnyTheme: {\r\n    color: styleConsts.color.favoriteIconColorSunnyTheme,\r\n  },\r\n  chat: {\r\n    width: '60vw',\r\n    height: '100%',\r\n    margin: '0',\r\n    backgroundColor: styleConsts.backgroundColor.openChatColor,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: '5vh 5vw',\r\n    borderRadius: '5vw',\r\n  },\r\n  chat_darkTheme: {\r\n    backgroundColor: styleConsts.backgroundColor.openChatColorDarkTheme,\r\n  },\r\n  chat_greyTheme: {\r\n    backgroundColor: styleConsts.backgroundColor.openChatColorGreyTheme,\r\n    filter: 'grayscale(1) invert(1)',\r\n  },\r\n  chat_sunnyTheme: {\r\n    backgroundColor: styleConsts.backgroundColor.openChatColorSunnyTheme,\r\n  },\r\n  chatMobileDevice: {\r\n    width: '100%',\r\n  },\r\n  chatUpPart: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    marginBottom: '2vh',\r\n  },\r\n  chatDownPart: {\r\n    width: '100%',\r\n    maxHeight: '90%',\r\n    minHeight: '50%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  form: {\r\n    height: '32px',\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'flex-end',\r\n    borderBottom: '1px solid #333333',\r\n    marginTop: '4px',\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n    background: 'transparent',\r\n    border: 'none',\r\n    borderRadius: '12px',\r\n    padding: '6px 1vw',\r\n    fontSize: '20px',\r\n    lineHeight: '100%',\r\n    outline: 'none',\r\n    resize: 'none',\r\n  },\r\n  input_mobileDevice: {\r\n    fontSize: '14px',\r\n    padding: '9px 1vw',\r\n  },\r\n  imgInInput: {\r\n    margin: '0 5px',\r\n    height: '100%',\r\n    cursor: 'no-drop',\r\n  },\r\n  imgBtnWrapper: {\r\n    position: 'relative',\r\n    display: 'inline-block',\r\n    height: '32px',\r\n    width: '32px',\r\n    borderRadius: '8px',\r\n    textAlign: 'center',\r\n    color: '#333333',\r\n    backgroundColor: 'transparent',\r\n    '&:hover': {\r\n      backgroundColor: '#99999922',\r\n    },\r\n  },\r\n  imgBtnText: {\r\n    fontSize: '16px',\r\n    lineHeight: '32px',\r\n    transform: 'rotateZ(30deg)',\r\n  },\r\n  imgError: {\r\n    position: 'absolute',\r\n    right: '0',\r\n    bottom: '100%',\r\n    width: '150px',\r\n    padding: '5px',\r\n    borderRadius: '5px',\r\n    backgroundColor: '#ffcccc',\r\n    cursor: 'no-drop',\r\n  },\r\n  imgBtn: {\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '0',\r\n    height: '100%',\r\n    width: '100%',\r\n    opacity: '0',\r\n  },\r\n  chatsList: {\r\n    height: '55vh',\r\n    overflow: 'auto',\r\n    paddingRight: '2vw !important',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexGrow: '1',\r\n  },\r\n  chatList: {\r\n    width: '100%',\r\n    overflow: 'auto',\r\n  },\r\n  chatListItem: {\r\n    width: '100% !important',\r\n    padding: '0 !important',\r\n    display: 'flex !important',\r\n  },\r\n  chatListItemMe: {\r\n    justifyContent: 'flex-end !important',\r\n  },\r\n  chatListItemSomebody: {\r\n    justifyContent: 'flex-start !important',\r\n  },\r\n  chatListItemMessage: {\r\n    color: '#555555',\r\n    display: 'inline-block',\r\n    borderRadius: '15px',\r\n    wordBreak: 'break-word',\r\n    minWidth: '50%',\r\n    maxWidth: '85%',\r\n    padding: '8px 16px',\r\n  },\r\n  chatListItemMessageMe: {\r\n    textAlign: 'left !important',\r\n    margin: '0 2% 1vh 0',\r\n    backgroundColor: '#a4e8be',\r\n  },\r\n  chatListItemMessageSomebody: {\r\n    textAlign: 'left !important',\r\n    margin: '0 0 1vh 2%',\r\n    backgroundColor: '#e1abbe',\r\n  },\r\n  chatListItemMessageSomebody_greyTheme: {\r\n    backgroundColor: '#ddcccc',\r\n  },\r\n  chatListItemMessageAuthor: {\r\n    color: '#777777',\r\n    fontSize: '16px',\r\n    marginBottom: '2px',\r\n  },\r\n  chatListItemMessageAuthorMobileDevice: {\r\n    fontSize: '10px',\r\n  },\r\n  chatListItemMessageImgWrapper: {\r\n    maxWidth: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  chatListItemMessageImg: {\r\n    maxWidth: '100%',\r\n  },\r\n  chatListItemMessageText: {\r\n    marginBottom: '5px',\r\n    fontSize: '20px',\r\n    whiteSpace: 'pre-line',\r\n  },\r\n  chatListItemMessageTextMobileDevice: {\r\n    marginBottom: '2px',\r\n    fontSize: '14px',\r\n  },\r\n  chatListItemMessageDateAndTime: {\r\n    color: '#777777',\r\n    fontSize: '14px',\r\n  },\r\n  chatListItemMessageDateAndTimeMobileDevice: {\r\n    fontSize: '10px',\r\n  },\r\n  chatControlPanel: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    backgroundColor: '#ddddddcc',\r\n    borderRadius: '5px',\r\n  },\r\n  chatControlPanelLeftPart: {\r\n    width: '60%',\r\n    marginRight: '5%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    paddingLeft: '10px',\r\n  },\r\n  chatControlPanelLeftPart_mobileDevice: {\r\n    paddingLeft: '5px',\r\n  },\r\n  chatControlPanelIconsWrapper: {\r\n    marginRight: '5px',\r\n  },\r\n  chatControlPanelIPrivatChatIcon: {\r\n    fontSize: '80%',\r\n  },\r\n  chatControlPanelName: {\r\n    width: '100%',\r\n    overflow: 'auto',\r\n    whiteSpace: 'nowrap',\r\n    color: '#555555',\r\n    fontSize: '18px',\r\n    paddingLeft: '5px',\r\n  },\r\n  chatControlPanelName_mobileDevice: {\r\n    fontSize: '12px',\r\n  },\r\n  chatControlPanelRightPart: {\r\n    width: '35%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n  chatControlPanelMenu: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n  chatControlPanelBtn: {\r\n    padding: '10px',\r\n    marginLeft: '10px',\r\n    cursor: 'pointer',\r\n    color: 'white',\r\n    backgroundColor: '#aaadb3',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    fontSize: '18px',\r\n    lineHeight: '18px',\r\n  },\r\n  chatControlPanelBtn_mobileDevice: {\r\n    padding: '5px',\r\n    marginLeft: '5px',\r\n    fontSize: '12px',\r\n    lineHeight: '12px',\r\n  },\r\n  chatControlPanelBtn__changeChatPassword: {\r\n    transform: 'rotateY(180deg)',\r\n  },\r\n  popUpWindow: {\r\n    width: '50vw',\r\n    minHeight: '20vh',\r\n    maxHeight: '70vh',\r\n    position: 'fixed',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: styleConsts.backgroundColor.mainColor1,\r\n    zIndex: '2',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '5vh 5vw',\r\n    overflow: 'auto',\r\n    border: 'solid 2px #555555',\r\n    borderRadius: '15px',\r\n  },\r\n  popUpWindow_mobileDevice: {\r\n    width: '90vw',\r\n  },\r\n  popUpWindowQuestion: {\r\n    fontSize: '18px',\r\n    lineHeight: '20px',\r\n    marginBottom: '5vh',\r\n    color: '#dddddd',\r\n    overflow: 'auto',\r\n    textAlign: 'center',\r\n  },\r\n  popUpWindowQuestion_mobileDevice: {\r\n    fontSize: '12px',\r\n    lineHeight: '16px',\r\n  },\r\n  popUpWindowAction: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n  },\r\n  popUpWindowBtn: {\r\n    fontSize: '14px',\r\n    lineHeight: '14px',\r\n    padding: '10px 16px',\r\n    margin: '0 2vw',\r\n    cursor: 'pointer',\r\n    backgroundColor: styleConsts.backgroundColor.popUpWindowBtnColor,\r\n    color: '#dddddd',\r\n    border: 'solid 1px #555555',\r\n    borderRadius: '10px',\r\n  },\r\n  popUpWindowBtn_darkTheme: {\r\n    backgroundColor: styleConsts.backgroundColor.popUpWindowBtnColorDarkTheme,\r\n  },\r\n  popUpWindowBtn_greyTheme: {\r\n    backgroundColor: styleConsts.backgroundColor.popUpWindowBtnColorGreyTheme,\r\n  },\r\n  popUpWindowBtn_sunnyTheme: {\r\n    backgroundColor: styleConsts.backgroundColor.popUpWindowBtnColorSunnyTheme,\r\n  },\r\n  popUpWindowBtn_mobileDevice: {\r\n    fontSize: '10px',\r\n    lineHeight: '10px',\r\n  },\r\n  popUpWindowForChangeChatPasswor_input: {\r\n    width: '80%',\r\n    marginBottom: '2.5vh',\r\n    border: '1px solid #cccccc',\r\n    borderRadius: '0.8em',\r\n    padding: '0.3em 0.6em',\r\n    fontSize: '1em',\r\n  },\r\n  popUpWindowForChangeChatPasswor_input_mobileDevice: {\r\n    fontSize: '0.7em',\r\n  },\r\n  popUpWindowForChangeChatPasswor_errorWrapper: {\r\n    width: '80%',\r\n    backgroundColor: '#ffcccc',\r\n    padding: '1em',\r\n    marginBottom: '2.5vh',\r\n    borderRadius: '1.5em',\r\n  },\r\n  popUpWindowForChangeChatPasswor_errorText: {\r\n    textAlign: 'center',\r\n    color: '#ff0000',\r\n    fontSize: '1em',\r\n  },\r\n  aquarium: {\r\n    width: '60vw',\r\n    height: '100%',\r\n    margin: '0',\r\n    padding: '5vh 5vw',\r\n    borderRadius: '5vw',\r\n    cursor: 'pointer',\r\n    userSelect: 'none',\r\n  },\r\n  aquarium_mobileDevice: {\r\n    width: '100vw',\r\n  },\r\n  aquariumIsOpen: {\r\n    backgroundColor: styleConsts.backgroundColor.openChatColor,\r\n  },\r\n  aquariumIsOpen_darkTheme: {\r\n    backgroundColor: styleConsts.backgroundColor.openChatColorDarkTheme,\r\n  },\r\n  aquariumIsOpen_greyTheme: {\r\n    backgroundColor: styleConsts.backgroundColor.openChatColorGreyTheme,\r\n    filter: 'grayscale(1) invert(1)',\r\n  },\r\n  aquariumIsOpen_sunnyTheme: {\r\n    backgroundColor: styleConsts.backgroundColor.openChatColorSunnyTheme,\r\n  },\r\n  aquariumIsClose: {\r\n    backgroundColor: 'transparent',\r\n  },\r\n  aquariumField: {\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  aquariumFish: {\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n  },\r\n  aquariumFish_greyTheme: {\r\n    filter: 'brightness(0.8) opacity(0.5)',\r\n  },\r\n  youAreDeniedAccessToTheChat_field: {\r\n    overflow: 'auto',\r\n    width: '100%',\r\n  },\r\n  youAreDeniedAccessToTheChat_wrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    fontSize: '14px',\r\n  },\r\n  youAreDeniedAccessToTheChat_wrapperInfo: {\r\n    width: '90%',\r\n  },\r\n  youAreDeniedAccessToTheChat_textInfo: {\r\n    marginBottom: '2.5vh',\r\n    color: '#eeeeee',\r\n    fontSize: '1.5em',\r\n    lineHeight: '1.2em',\r\n  },\r\n  youAreDeniedAccessToTheChat_textInfo__first: {\r\n    marginBottom: '0',\r\n  },\r\n  youAreDeniedAccessToTheChat_input: {\r\n    width: '80%',\r\n    marginBottom: '2.5vh',\r\n    border: '1px solid #cccccc',\r\n    borderRadius: '0.8em',\r\n    padding: '0.3em 0.6em',\r\n    fontSize: '1em',\r\n  },\r\n  youAreDeniedAccessToTheChat_wrapper_input_mobileDevice: {\r\n    width: '100%',\r\n  },\r\n  youAreDeniedAccessToTheChat_errorWrapper: {\r\n    width: '80%',\r\n    backgroundColor: '#ffcccc',\r\n    padding: '1em',\r\n    marginBottom: '2.5vh',\r\n    borderRadius: '1.5em',\r\n  },\r\n  youAreDeniedAccessToTheChat_errorText: {\r\n    textAlign: 'center',\r\n    color: '#ff0000',\r\n    fontSize: '1em',\r\n  },\r\n  youAreDeniedAccessToTheChat_btn: {\r\n    color: '#eeeeee',\r\n  },\r\n  api_users__title: {\r\n    color: '#eeeeee',\r\n    marginBottom: '5vh',\r\n  },\r\n  api_users__btn: {\r\n    padding: '10px',\r\n    borderRadius: '10px',\r\n    backgroundColor: '#ffff88',\r\n    color: '#333333',\r\n    marginBottom: '5vh',\r\n    cursor: 'pointer',\r\n  },\r\n  users_list__wrapper: {\r\n    backgroundColor: '#aaaaaa',\r\n    borderRadius: '15px',\r\n  },\r\n  users_list__items: {\r\n    listStyle: 'none',\r\n    padding: '1vw',\r\n    overflow: 'auto',\r\n    height: '55vh',\r\n  },\r\n  users_list__items__screen_height_less_than_450: {\r\n    height: '45vh',\r\n  },\r\n  users_list__item: {\r\n    color: '#333333',\r\n    margin: '0 2vh 1vw',\r\n    padding: '15px',\r\n    backgroundColor: '#aaaaff',\r\n    borderRadius: '15px',\r\n  },\r\n  users_list__name: {\r\n    marginBottom: '1vh',\r\n    fontSize: '28px',\r\n  },\r\n  users_list__name__mobile_device: {\r\n    fontSize: '16px',\r\n  },\r\n  users_list__additionally: {\r\n    fontSize: '20px',\r\n  },\r\n  users_list__additionally__mobile_device: {\r\n    fontSize: '12px',\r\n  },\r\n  users_loader__field: {\r\n    height: '100%',\r\n    width: '100%',\r\n    paddingBottom: '10vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n  },\r\n  users_loader__center: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  users_loader__text: {\r\n    marginBottom: '10vh',\r\n  },\r\n  users_loader__img: {\r\n    width: '250px',\r\n  },\r\n  users_loader__img__mobile_device: {\r\n    height: '20vh',\r\n    width: 'auto',\r\n  },\r\n  users_error__field: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n  },\r\n  users_error__wrapper_text: {\r\n    width: '100%',\r\n    padding: '20px',\r\n    backgroundColor: '#ffbbdd'\r\n  },\r\n  users_error__text: {\r\n    color: '#333333'\r\n  },\r\n  page__fieldWrapper: {\r\n    height: '100%',\r\n    width: '100%',\r\n    paddingBottom: '0',\r\n  },\r\n  page__fieldWrapper_mobileDevice: {\r\n    paddingBottom: '5vh',\r\n  },\r\n  page__field: {\r\n    height: '100%',\r\n    width: '100%',\r\n    overflow: 'auto',\r\n    color: styleConsts.color.chatsListColor,\r\n    fontSize: '48px',\r\n    lineHeight: '48px',\r\n    padding: '0 2vw 0 1vw',\r\n    textAlign: 'justify',\r\n  },\r\n  page__field_darkTheme: {\r\n    color: styleConsts.color.chatsListColorDarkTheme,\r\n  },\r\n  page__field_greyTheme: {\r\n    color: styleConsts.color.chatsListColorGreyTheme,\r\n  },\r\n  page__field_sunnyTheme: {\r\n    color: styleConsts.color.chatsListColorSunnyTheme,\r\n  },\r\n  page__field_mobileDevice: {\r\n    fontSize: '24px',\r\n    lineHeight: '24px',\r\n  },\r\n  page__title: {\r\n    fontSize: 'calc(1em / 48 * 48)',\r\n    lineHeight: 'calc(1em * 1)',\r\n    marginBottom: '2vh',\r\n  },\r\n  home__appNameWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  home__appName: {\r\n    fontSize: 'calc(1em / 48 * 60)',\r\n    lineHeight: 'calc(1em * 1)',\r\n    marginBottom: '2vh',\r\n    color: styleConsts.color.homeAppNameColor,\r\n    textAlign: 'center',\r\n  },\r\n  home__appName_darkTheme: {\r\n    color: styleConsts.color.homeAppNameColorDarkTheme,\r\n  },\r\n  home__appName_greyTheme: {\r\n    color: styleConsts.color.homeAppNameColorGreyTheme,\r\n  },\r\n  home__appName_sunnyTheme: {\r\n    color: styleConsts.color.homeAppNameColorSunnyTheme,\r\n  },\r\n  home__appDescriptionWrapper: {\r\n    marginBottom: '2vh',\r\n  },\r\n  home__descriptionParagraphWrapper: {\r\n    fontSize: 'calc(1em / 48 * 28)',\r\n    lineHeight: 'calc(1em * 1.25)',\r\n  },\r\n  home__descriptionParagraph: {\r\n    fontSize: 'calc(1em / 48 * 28)',\r\n    lineHeight: 'calc(1em * 1.25)',\r\n    marginBottom: '1vh',\r\n  },\r\n  home__descriptionTitle: {\r\n    fontSize: 'calc(1em / 48 * 36)',\r\n    lineHeight: 'calc(1em * 1)',\r\n    margin: '2vh 0 1vh',\r\n    textAlign: 'center',\r\n    textTransform: 'uppercase',\r\n  },\r\n  home__benefitsWrapper: {\r\n    marginBottom: '1vh',\r\n  },\r\n  home__benefitsParagraph: {\r\n    fontSize: 'calc(1em / 48 * 28)',\r\n    lineHeight: 'calc(1em * 1.25)',\r\n  },\r\n  home__benefitName: {\r\n    fontWeight: '700',\r\n    textTransform: 'uppercase',\r\n  },\r\n  home__benefitsList: {\r\n    fontSize: 'calc(1em / 48 * 28)',\r\n    lineHeight: 'calc(1em * 1.25)',\r\n    listStyle: 'inside',\r\n    listStyleType: 'disclosure-closed',\r\n    marginBottom: '2vh',\r\n  },\r\n  home__benefitsListItem: {\r\n    margin: '0.3vh 0',\r\n  },\r\n  home__descriptionMiniTitle: {\r\n    fontSize: 'calc(1em / 48 * 32)',\r\n    lineHeight: 'calc(1em * 1)',\r\n    margin: '2vh 0 1vh',\r\n  },\r\n  home__logoWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    marginBottom: '2vh',\r\n  },\r\n  home__logoImg: {\r\n    height: '10vw',\r\n    width: 'auto',\r\n    margin: '2vh 2vw',\r\n  },\r\n  deviceOnTheNetwork__wrapper: {\r\n    position: 'absolute',\r\n    top: '2vh',\r\n    right: '2vw',\r\n    height: '6vh',\r\n    width: '6vh',\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    cursor: 'help',\r\n    zIndex: '1',\r\n  },\r\n  deviceOnTheNetwork__lamp: {\r\n    height: '1vh',\r\n    width: '1vh',\r\n    border: 'solid 0.2vh #111111',\r\n    borderRadius: '50%',\r\n    backgroundColor: '#cccccc',\r\n  },\r\n  deviceOnTheNetwork__lamp_connectNetwork_1: {\r\n    animation: \"$pulseConnectNetwork 5s linear infinite 0.1s\"\r\n  },\r\n  deviceOnTheNetwork__lamp_connectNetwork_2: {\r\n    animation: \"$pulseConnectNetwork 5s linear infinite 0.35s\"\r\n  },\r\n  deviceOnTheNetwork__lamp_connectNetwork_3: {\r\n    animation: \"$pulseConnectNetwork 5s linear infinite 0.6s\"\r\n  },\r\n  \"@keyframes pulseConnectNetwork\": {\r\n    \"0%\": {\r\n      backgroundColor: '#cccccc',\r\n    },\r\n    \"47%\": {\r\n      backgroundColor: '#cccccc',\r\n    },\r\n    \"47.5%\": {\r\n      backgroundColor: '#00cc00',\r\n    },\r\n    \"52.5%\": {\r\n      backgroundColor: '#00cc00',\r\n    },\r\n    \"53%\": {\r\n      backgroundColor: '#cccccc',\r\n    },\r\n    \"100%\": {\r\n      backgroundColor: '#cccccc',\r\n    },\r\n  },\r\n  deviceOnTheNetwork__lamp_disconnectNetwork: {\r\n    animation: \"$pulseDisconnectNetwork 1s linear infinite 0.1s\"\r\n  },\r\n  \"@keyframes pulseDisconnectNetwork\": {\r\n    \"0%\": {\r\n      backgroundColor: '#cccccc',\r\n    },\r\n    \"24%\": {\r\n      backgroundColor: '#cccccc',\r\n    },\r\n    \"25%\": {\r\n      backgroundColor: '#cc0000',\r\n    },\r\n    \"74%\": {\r\n      backgroundColor: '#cc0000',\r\n    },\r\n    \"75%\": {\r\n      backgroundColor: '#cccccc',\r\n    },\r\n    \"100%\": {\r\n      backgroundColor: '#cccccc',\r\n    },\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\nexport const HeaderUI = (props) => {\r\n    return (\r\n        <Toolbar className={`${props.classes.headerNav} ${props.mobileMenuOpen ? props.classes.headerNavMobileOpen : null}`} component=\"nav\">\r\n            {props.showBurgerMenuProps}\r\n            {props.navigationForProps}\r\n            {props.showLogOutBtnForProps}\r\n        </Toolbar>\r\n    )\r\n};\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n//* - You can simply use 'import firebase from \"firebase\";' instead of the lines written above, and the application behavior will not change from this, but then a help message will appear in the browser with a recommendation to change the import.\r\nimport 'firebase/analytics';\r\n\r\n//* Your web app's Firebase configuration:\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDqSy9piTRngpO142FO9R3S_lnWkJAjmfs\",\r\n    authDomain: \"messenger-fireactbase-211015.firebaseapp.com\",\r\n    databaseURL: \"https://messenger-fireactbase-211015-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"messenger-fireactbase-211015\",\r\n    storageBucket: \"messenger-fireactbase-211015.appspot.com\",\r\n    messagingSenderId: \"1041822403889\",\r\n    appId: \"1:1041822403889:web:38065ae1a6020278de7410\",\r\n    measurementId: \"G-9DLJ8XX7KS\"\r\n};\r\n\r\n//* Initialize Firebase\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.database();\r\n\r\nexport const connectedRef = db.ref('.info/connected');\r\nexport const profileRef = db.ref('profile');\r\nexport const chatsRef = db.ref('chats');\r\nexport const messagesRef = db.ref('messages');\r\nexport const chatAccessRef = db.ref('chatAccess');\r\n\r\nfirebase.analytics(app);\r\n","const EMAIL_VERIFICATION_CONFIRMATION_WAITING_IS_TRUE = 'EMAIL_VERIFICATION_CONFIRMATION_WAITING_IS_TRUE';\r\nconst EMAIL_VERIFICATION_CONFIRMATION_WAITING_IS_FALSE = 'EMAIL_VERIFICATION_CONFIRMATION_WAITING_IS_FALSE';\r\nconst COUNTDOWN_FOR_LETTER_REQUEST = 'COUNTDOWN_FOR_LETTER_REQUEST';\r\nconst LAST_AUTHORIZATION = 'LAST_AUTHORIZATION';\r\nconst VALUE_IN_CHATSLIST_INPUT = 'VALUE_IN_CHATSLIST_INPUT';\r\nconst AQUARIUM_STATUS = 'AQUARIUM_STATUS';\r\nconst APP_THEME = 'APP_THEME';\r\nconst ONLY_SELECTED_CHATS = 'ONLY_SELECTED_CHATS';\r\nconst CHATS_COUNT = 'CHATS_COUNT';\r\nconst EVENT_FOR_PWA_INSTALLATION = 'EVENT_FOR_PWA_INSTALLATION';\r\nconst DEVICE_ON_THE_NETWORK_ACTION = 'DEVICE_ON_THE_NETWORK_ACTION';\r\nconst IS_STRICT_SEARCH_ACTION = 'IS_STRICT_SEARCH_ACTION';\r\n\r\nexport const emailVerificationConfirmationWaitingIsTrue = {\r\n    type: EMAIL_VERIFICATION_CONFIRMATION_WAITING_IS_TRUE,\r\n};\r\n\r\nexport const emailVerificationConfirmationWaitingIsFalse = {\r\n    type: EMAIL_VERIFICATION_CONFIRMATION_WAITING_IS_FALSE,\r\n};\r\n\r\nexport const countdownForLetterRequest = {\r\n    type: COUNTDOWN_FOR_LETTER_REQUEST,\r\n};\r\n\r\nexport const lastAuthorization = {\r\n    type: LAST_AUTHORIZATION,\r\n};\r\n\r\nexport const valueInChatsListInput = {\r\n    type: VALUE_IN_CHATSLIST_INPUT,\r\n};\r\n\r\nexport const aquariumStatus = {\r\n    type: AQUARIUM_STATUS,\r\n};\r\n\r\nexport const appTheme = {\r\n    type: APP_THEME,\r\n};\r\n\r\nexport const onlySelectedChats = {\r\n    type: ONLY_SELECTED_CHATS,\r\n};\r\n\r\nexport const chatsCount = {\r\n    type: CHATS_COUNT,\r\n};\r\n\r\nexport const eventForPWAInstallation = {\r\n    type: EVENT_FOR_PWA_INSTALLATION,\r\n};\r\n\r\nexport const deviceOnTheNetworkAction = {\r\n    type: DEVICE_ON_THE_NETWORK_ACTION,\r\n};\r\n\r\nexport const isStrictSearchAction = {\r\n    type: IS_STRICT_SEARCH_ACTION,\r\n};\r\n","import { auth } from \"../../firebase/firebase\";\r\n\r\nexport const functionsForMocks = {\r\n    registration: (email, password) => auth.createUserWithEmailAndPassword(email, password),\r\n    checkEmail: () => auth.currentUser.sendEmailVerification(),\r\n    userReload: () => auth.currentUser.reload(),\r\n    login: (email, password) => auth.signInWithEmailAndPassword(email, password),\r\n};\r\n","import { allAppComponentsWithPageTitle, appTitle, mobileScreenWidth } from \"../data/consts\";\r\nimport { auth } from \"../firebase/firebase\";\r\nimport { countdownForLetterRequest } from \"../store/AppSwitches/Action\";\r\nimport { functionsForMocks } from \"./forMocks/functions\";\r\n\r\nexport const sendMessage = (author, text, chatId) => {\r\n    const somebodyMessage = {\r\n        message: {author: author, text: text},\r\n        chatId: chatId,\r\n    };\r\n    return somebodyMessage\r\n};\r\n\r\n//* This feature is no longer used, but not removed just in case:\r\nexport const mapChatSnapshotToChat = (snapshot) => ({\r\n    ...snapshot.val(),\r\n    key: snapshot.key,\r\n});\r\n\r\n//* This feature is no longer used, but not removed just in case:\r\nexport const mapMessageSnapshotToMessage = (snapshot) => ({\r\n    ...snapshot.val(),\r\n    messageKey: snapshot.key,\r\n});\r\n\r\nexport const getPageTitle = (location) => {\r\n    for (let key in allAppComponentsWithPageTitle) {\r\n        if (allAppComponentsWithPageTitle[key].path === location.pathname) {\r\n        return allAppComponentsWithPageTitle[key].pageTitle\r\n        } else {\r\n            const objectRegExp = location.pathname.match(allAppComponentsWithPageTitle[key].pathCheck);\r\n\r\n            if (objectRegExp !== null && objectRegExp.input === location.pathname) {\r\n                return allAppComponentsWithPageTitle[key].pageTitle(location.pathname.split('/')[2])\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nexport const makeFullPageTitle = (pageTitle) => {\r\n    return `${appTitle.name}${appTitle.delimiter}${pageTitle}`\r\n};\r\n\r\nexport const giveTitleForPage = (title) => {\r\n    return title ? (document.title = title) : (document.title = appTitle.name);\r\n};\r\n\r\nexport const getWindowDimensions = () => {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n\r\n    const screenDimensions = {width: width, height: height};\r\n    return screenDimensions\r\n};\r\n\r\nexport const isMobileDevice = () => {\r\n    if (getWindowDimensions().width < mobileScreenWidth) {\r\n        return true\r\n    } else {\r\n        return false\r\n    };\r\n};\r\n\r\nexport const screenHeightLessThan = (screenHeight) => {\r\n    if (getWindowDimensions().height < screenHeight) {\r\n        return true\r\n    } else {\r\n        return false\r\n    };\r\n};\r\n\r\nexport const userVerificationWaiting = (verificationWaitingBoolean, push) => {\r\n    const timerId = setInterval(async () => {\r\n        if (auth.currentUser) {\r\n            await functionsForMocks.userReload();\r\n\r\n            if (auth.currentUser && auth.currentUser.emailVerified) {\r\n                push(allAppComponentsWithPageTitle.profile.path);\r\n                verificationWaitingBoolean = false;\r\n\r\n                return {waiting: verificationWaitingBoolean, clear: clearInterval(timerId)}\r\n            }\r\n        } else {\r\n            verificationWaitingBoolean = false;\r\n\r\n            return {waiting: verificationWaitingBoolean, clear: clearInterval(timerId)}\r\n        }\r\n    }, 5000);\r\n};\r\n\r\nexport const instantUserVerificationChecking = async (verificationWaitingBoolean, push) => {\r\n    if (auth.currentUser) {\r\n        verificationWaitingBoolean = false;\r\n        await functionsForMocks.userReload();\r\n        if (auth.currentUser && auth.currentUser.emailVerified) {\r\n            push(allAppComponentsWithPageTitle.profile.path);\r\n\r\n            return verificationWaitingBoolean\r\n        } else if (auth.currentUser && !auth.currentUser.emailVerified) {\r\n            verificationWaitingBoolean = true;\r\n            const isLoading = userVerificationWaiting(verificationWaitingBoolean, push);\r\n            const waiting = (isLoading && isLoading.waiting ? isLoading.waiting : null);\r\n            if (isLoading && isLoading.clear) {\r\n                isLoading.clear();\r\n            }\r\n\r\n            if (waiting === false) {\r\n                verificationWaitingBoolean = false;\r\n            }\r\n\r\n            return verificationWaitingBoolean\r\n        }\r\n    }\r\n};\r\n\r\nexport const confirmSendingOfTheVerificationLetter = (myEmail) => {\r\n    return {\r\n        success: `Письмо отправлено${myEmail ? (' на ' + myEmail) : null}. Перейдите по ссылке в письме, чтобы завершить процесс регистрации.`, \r\n        error: `Выполните вход!`,\r\n    }\r\n};\r\n\r\nexport const requestTheLetter = async (myEmail) => {\r\n    if (auth.currentUser) {\r\n        await functionsForMocks.checkEmail();\r\n        const infoMessage = confirmSendingOfTheVerificationLetter(myEmail).success;\r\n\r\n        return infoMessage\r\n    } else if (!auth.currentUser) {\r\n        const error = confirmSendingOfTheVerificationLetter(myEmail).error;\r\n\r\n        return error\r\n    }\r\n};\r\n\r\nexport const countdownForLetterRequestWithLink = (dispatch, startValueForTimer) => {\r\n    let counter = startValueForTimer;\r\n\r\n    const intervalId = setInterval(() => {\r\n        dispatch({\r\n            type: countdownForLetterRequest.type,\r\n            payload: counter,\r\n        });\r\n        if (counter <= 0) {\r\n            dispatch({\r\n                type: countdownForLetterRequest.type,\r\n                payload: 0,\r\n            });\r\n\r\n            return clearTimeout(intervalId)\r\n        }\r\n        counter--;\r\n    }, 1000);\r\n};\r\n\r\nexport const allowedPeriodInsideTheApp = (\r\n    years, \r\n    weeks, \r\n    days, \r\n    hours, \r\n    minutes, \r\n    seconds, \r\n    milliseconds\r\n) => {\r\n    const period = (\r\n        milliseconds \r\n        + seconds * 1000 \r\n        + minutes * 60 * 1000 \r\n        + hours * 60 * 60 * 1000 \r\n        + days * 24 * 60 * 60 * 1000 \r\n        + weeks * 7 * 24 * 60 * 60 * 1000 \r\n        + years * 365 * 24 * 60 * 60 * 1000\r\n    );\r\n\r\n    return period\r\n};\r\n\r\nexport const isValidNumber = (valueStr) => {\r\n    if (valueStr[0] === '+') {\r\n        return false\r\n    } else if (valueStr[0] === '0' && valueStr[1] && valueStr[1] !== '.') {\r\n        return false\r\n    } else if (valueStr[0] === '-' && valueStr[1] && valueStr[1] === '0' && (!valueStr[2] || (valueStr[2] && valueStr[2] !== '.'))) {\r\n        return false\r\n    }\r\n    return true\r\n};\r\n\r\nexport const isNumberOrString = (value) => {\r\n    const validNumber = isValidNumber(String(value));\r\n\r\n    const item = (\r\n        (\r\n                value === '0' \r\n                || \r\n                value === 0 \r\n                || \r\n                (\r\n                    +value \r\n                    && \r\n                    validNumber\r\n                ) \r\n        ) \r\n        ? \r\n        +value \r\n        : \r\n        value.toLowerCase()\r\n    );\r\n\r\n    return item\r\n};\r\n\r\nexport const sortingConditions = (num1, num2) => {\r\n    if (num1 === num2) {\r\n        return 0\r\n    } else if (typeof(num1) === 'number' && typeof(num2) === 'string') {\r\n        return -1\r\n    } else if (typeof(num2) === 'number' && typeof(num1) === 'string') {\r\n        return 1\r\n    } else {\r\n        if (num1 < num2) {\r\n            return -1\r\n        } else if (num1 > num2) {\r\n            return 1\r\n        } else {\r\n            return 0\r\n        };\r\n    };\r\n};\r\n\r\nexport const getElementWidth = (ref) => {\r\n    if (ref.current) {\r\n        const refWidth = ref.current.clientWidth;\r\n        return refWidth\r\n    }\r\n    return null\r\n};\r\n\r\nexport const getElementHeight = (ref) => {\r\n    if (ref.current) {\r\n        const refHeight = ref.current.clientHeight;\r\n        return refHeight\r\n    }\r\n    return null\r\n};\r\n\r\nconst getKeyForTheChat = (chatsListChatsKindOfDictRed, findValue, keyInValueOfDict) => {\r\n    for (let key in chatsListChatsKindOfDictRed) {\r\n        if (chatsListChatsKindOfDictRed[key][keyInValueOfDict] === findValue) {\r\n            return key\r\n        }\r\n    }\r\n    return null\r\n};\r\n\r\nexport const getKeyForTheChatByChatName = (chatsListChatsKindOfDictRed, findValue) => {\r\n    const key = getKeyForTheChat(chatsListChatsKindOfDictRed, findValue, 'name');\r\n    return key\r\n};\r\n\r\nexport const getKeyForTheChatByChatId = (chatsListChatsKindOfDictRed, findValue) => {\r\n    const key = getKeyForTheChat(chatsListChatsKindOfDictRed, findValue, 'id');\r\n    return key\r\n};\r\n\r\nexport const destroyAllTags = (inputText) => {\r\n    const newInputText = inputText\r\n        .replaceAll('<', '&lt;')\r\n        .replaceAll('>', '&gt;')\r\n\r\n    return newInputText\r\n};\r\n\r\nexport const createTagsToHighlightTheEnteredText = (inputText, classes) => {\r\n    const newInputText = inputText\r\n        .replaceAll('*,,', '<strong>')\r\n        .replaceAll(',,*', '</strong>')\r\n        .replaceAll('/,,', '<em>')\r\n        .replaceAll(',,/', '</em>')\r\n        .replaceAll('_,,', '<ins>')\r\n        .replaceAll(',,_', '</ins>')\r\n        .replaceAll('-,,', '<s>')\r\n        .replaceAll(',,-', '</s>')\r\n        .replaceAll('+,,', '<mark style=\"background-color: #cccccc;\">')\r\n        .replaceAll(',,+', '</mark>')\r\n        .replaceAll('=,,', '<br>')\r\n        .replaceAll(',,=', '')\r\n        .replaceAll('(,,', `<p style=\"margin: 1vh 0;\">`)\r\n        .replaceAll(',,)', '</p>');\r\n\r\n    return newInputText\r\n};\r\n\r\nexport const autoEditInputText = (inputText, classes) => {\r\n    const textWithoutForbiddenTags = destroyAllTags(inputText);\r\n    const textWithHighlightTags = createTagsToHighlightTheEnteredText(textWithoutForbiddenTags, classes);\r\n\r\n    return textWithHighlightTags\r\n};\r\n","export const getMobileMenuRootSelector = (state) => state.mobileMenu;\r\nexport const getMobileMenuIsOpenSelector = (state) => getMobileMenuRootSelector(state).isMobileMenuOpen;\r\n","const TOGGLE_MOBILE_MENU_STATUS = 'TOGGLE_MOBILE_MENU_STATUS';\r\nconst CLOSE_MOBILE_MENU_STATUS = 'CLOSE_MOBILE_MENU_STATUS';\r\n\r\nexport const toggleMobileMenuStatus = {\r\n    type: TOGGLE_MOBILE_MENU_STATUS,\r\n};\r\n\r\nexport const closeMobileMenuStatus = {\r\n    type: CLOSE_MOBILE_MENU_STATUS,\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { auth } from \"../firebase/firebase\";\r\nimport { getWindowDimensions, userVerificationWaiting } from \"../helper/helper\";\r\nimport { \r\n    countdownForLetterRequest, \r\n    emailVerificationConfirmationWaitingIsFalse, \r\n    emailVerificationConfirmationWaitingIsTrue \r\n} from \"../store/AppSwitches/Action\";\r\n\r\nexport const useWindowDimensions = () => {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n        setWindowDimensions(getWindowDimensions());\r\n        };\r\n\r\n        //* Метод addEventListener() присоединяет обработчик события к определенному DOM-элементу:\r\n        if (window.addEventListener) { //* - для всех основных браузеров.\r\n            window.addEventListener('resize', handleResize);\r\n            return () => window.removeEventListener('resize', handleResize);\r\n        } else if (window.attachEvent) { //* - для IE 8 и более ранних версий, а также Opera 6.0 и более ранних версий.\r\n            window.attachEvent('resize', handleResize);\r\n            return () => window.detachEvent('resize', handleResize);\r\n        }\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n};\r\n\r\nexport const useChangeEmailVerificationStatus = (location) => {\r\n    const [verified, setVerified] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onIdTokenChanged((user) => {\r\n            if (user && user.emailVerified) {\r\n                setVerified(true); //? - On verification after registration, it always redirects to the address specified in \"Redirect\" in \"PublicRouter\".\r\n            } else {\r\n                unsubscribe(); //* - The \"unsubscribe()\" function unsubscribes the \"auth.onIdTokenChanged()\" function.\r\n                setVerified(false);\r\n            }\r\n        });\r\n    }, [location]);\r\n\r\n    return verified\r\n};\r\n\r\nexport const useUserVerificationWaiting = (verificationWaitingBoolean, push) => { //* - The \"useUserVerificationWaiting ()\" function requires the \"verificationWaitingBoolean\" argument (although it is highlighted as unused), otherwise \"useEffect\" is looped. The useEffect also requires a verificationWaitingBoolean argument.\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect((verificationWaitingBoolean) => {\r\n        const unsubscribe = auth.onAuthStateChanged((user) => {\r\n            dispatch({\r\n                type: emailVerificationConfirmationWaitingIsFalse.type,\r\n            });\r\n\r\n            if (auth.currentUser) {\r\n                auth.currentUser.reload();\r\n            }\r\n\r\n            if (user && !user.emailVerified) {\r\n                dispatch({\r\n                    type: emailVerificationConfirmationWaitingIsTrue.type,\r\n                });\r\n        \r\n                const isLoading = userVerificationWaiting(verificationWaitingBoolean, push);\r\n                const waiting = (isLoading && isLoading.waiting ? isLoading.waiting : null);\r\n                if (isLoading && isLoading.clear) {\r\n                    isLoading.clear();\r\n                }\r\n\r\n                if (waiting === false) {\r\n                    dispatch({\r\n                        type: emailVerificationConfirmationWaitingIsFalse.type,\r\n                    });\r\n                }\r\n            } else {\r\n                unsubscribe(); //* - The \"unsubscribe()\" function unsubscribes the \"auth.onIdTokenChanged()\" function.\r\n            }\r\n        });\r\n    }, [push, dispatch]);\r\n};\r\n\r\nexport const useAutomaticStartOfTheCountdownTimer = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: countdownForLetterRequest.type,\r\n            payload: 0,\r\n        });\r\n    }, [dispatch])\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { NAVIGATION as navigation } from '../../data/navigation';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport { useStyles } from '../../styles/Style';\r\nimport { HeaderUI } from '../../ui_components/HeaderUI.jsx';\r\nimport { auth } from '../../firebase/firebase';\r\nimport { allAppComponentsWithPageTitle } from '../../data/consts';\r\nimport { isMobileDevice } from '../../helper/helper';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMobileMenuIsOpenSelector } from '../../store/MobileMenuStatus/Selectors';\r\nimport { closeMobileMenuStatus, toggleMobileMenuStatus } from '../../store/MobileMenuStatus/Action';\r\nimport { useChangeEmailVerificationStatus } from '../../hooks/hooks';\r\nimport { functionsForMocks } from '../../helper/forMocks/functions';\r\nimport { TECHNICAL_UID } from '../../TECHNICAL/TECHNICAL_CONSTS';\r\n\r\nexport const Header = () => {\r\n    const classes = useStyles();\r\n\r\n    const location = useLocation();\r\n\r\n    const isMobileDeviceProps = isMobileDevice();\r\n\r\n    const myUID = auth.currentUser !== null ? auth.currentUser.uid : null;\r\n\r\n    const dispatch = useDispatch();\r\n    const mobileMenuOpen = useSelector(getMobileMenuIsOpenSelector);\r\n    \r\n    const emailVerificationStatus = useChangeEmailVerificationStatus(location);\r\n\r\n    const navigationForProps = (\r\n        emailVerificationStatus \r\n        ? \r\n        (\r\n            myUID === TECHNICAL_UID \r\n            ? navigation \r\n            : \r\n            navigation.filter((item) => item.name !== allAppComponentsWithPageTitle.usersApi.displayTitle)\r\n        ).map((item) => <Button className={`${classes.headerNavItem} ${isMobileDeviceProps && !mobileMenuOpen ? classes.headerNavItemMobile : null}`} to={item.href} component={Link} key={item.name}>{item.name}</Button>) \r\n        : \r\n        null\r\n    );\r\n\r\n    const logoutUser = async () => {\r\n        auth.signOut();\r\n        if (auth.currentUser) {\r\n            await functionsForMocks.userReload();\r\n        }\r\n    };\r\n\r\n    const showMobileMenu = () => {\r\n        dispatch({\r\n            type: toggleMobileMenuStatus.type,\r\n        })\r\n    };\r\n\r\n    const showBurgerMenuProps = (\r\n        isMobileDeviceProps\r\n        ?\r\n        (\r\n            !mobileMenuOpen \r\n            ? \r\n            <Button className={`${classes.headerNavItem}`} onClick={showMobileMenu}>Меню</Button> \r\n            : \r\n            <Button className={`${classes.headerNavItem}`} onClick={showMobileMenu}>Закрыть</Button>\r\n        )\r\n        :\r\n        null\r\n    );\r\n\r\n    const showLogOutBtnForProps = (\r\n        emailVerificationStatus \r\n        ? \r\n        <Button className={classes.headerNavItem} onClick={logoutUser}>{allAppComponentsWithPageTitle.logout.displayTitle}</Button> \r\n        : \r\n        <>\r\n            <Button className={classes.headerNavItem} to={allAppComponentsWithPageTitle.login.path} component={Link}>{allAppComponentsWithPageTitle.login.displayTitle}</Button>\r\n            <Button className={classes.headerNavItem} to={allAppComponentsWithPageTitle.signup.path} component={Link}>{allAppComponentsWithPageTitle.signup.displayTitle}</Button>\r\n        </>\r\n    );\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: closeMobileMenuStatus.type,\r\n        })\r\n    }, [location, dispatch]);\r\n\r\n    return (\r\n        <HeaderUI classes={classes} navigationForProps={navigationForProps} showLogOutBtnForProps={showLogOutBtnForProps} showBurgerMenuProps={showBurgerMenuProps} mobileMenuOpen={mobileMenuOpen}></HeaderUI>\r\n    )\r\n};\r\n","export const TECHNICAL_UID = 'TlXaYM9HQ2UoeD5SzMRpUzi5oAk1';\r\n","import React from 'react';\r\n\r\nexport const HomeUI = (props) => {\r\n    return (\r\n        <div  className={`${props.classes.page__fieldWrapper} ${props.isMobileDeviceBoolean ? props.classes.page__fieldWrapper_mobileDevice : null}`}>\r\n            <div className={`${props.classes.page__field} ${props.isMobileDeviceBoolean ? props.classes.page__field_mobileDevice : null} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.page__field_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.page__field_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.page__field_sunnyTheme : null) : null}`}>\r\n                <div className={props.classes.home__appNameWrapper}>\r\n                    <h1 className={`${props.classes.home__appName} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.home__appName_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.home__appName_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.home__appName_sunnyTheme : null) : null}`}>&#8497;i&#769;r&#949;ss &#8499;&#949;ss&#949;ng&#949;r</h1>\r\n                </div>\r\n                <div className={props.classes.home__appDescriptionWrapper}>\r\n                    <p className={props.classes.home__descriptionParagraph}>Firess - легковесное, лаконичное, быстрое и полностью бесплатное приложение с отзывчивым дизайном, доступное и как web-сайт, и как отдельное приложение для смартфонов и компьютеров, и предназначенное для обмена текстовыми сообщениями между пользователями со всего мира.</p>\r\n                    <p className={props.classes.home__descriptionParagraph}>Firess использует подключение вашего устройства к Интернету (4G/3G/2G/EDGE, домашний интернет или Wi-Fi, если он доступен) для обмена сообщениями. Перейдите с SMS на Firess и обменивайтесь текстовыми сообщениями абсолютно бесплатно, не тратя денег на SMS, - нужен лишь включенный Интернет.</p>\r\n                    <p className={props.classes.home__descriptionParagraph}>Создавайте чаты с неограниченным количеством участников! Бесплатный мессенджер Firess позволяет легко создавать и вступать в групповые чаты, будь то чат с родителями, чаты с друзьями или с вовсе незнакомыми Вам людьми из других городов и стран.</p>\r\n                    <p className={props.classes.home__descriptionParagraph}>В Firess пользователи могут общаться друг с другом, создавая публичные чаты, которые доступны всем пользователям, и приватные чаты, доступные только группе пользователей. В публичные чаты могут заходить другие пользователи и полноценно общаться друг с другом, в приватных чатах могут общаться лишь пользователи, имеющие к ним доступ. Помимо этого, в Firess есть возможность создавать неограниченное количество чатов с самим собой.</p>\r\n                    <h3 className={props.classes.home__descriptionTitle}>ПОЧЕМУ FIRESS:</h3>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>МАЛЫЙ РАЗМЕР. </span>Благодаря своему крохотному размеру, который намного меньше 1МБ (размер приложения Firess в тысячи раз меньше остальных популярных мессенджеров), Firess является отличным дополнением к арсеналу приложений на Вашем устройстве. У Вас даже получится установить его на смартфон, на который любые другие мессенджеры уже не скачать из-за недостатка места.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>УДОБСТВО. </span>Бесплатно переписываться с пользователями со всего мира одинаково удобно:</p>\r\n                        <ul className={props.classes.home__benefitsList}>\r\n                            <li className={props.classes.home__benefitsListItem}>компьютер / смартфон;</li>\r\n                            <li className={props.classes.home__benefitsListItem}>web-сайт / приложение Firess;</li>\r\n                            <li className={props.classes.home__benefitsListItem}>ландшафтный / портретный режимы.</li>\r\n                        </ul>\r\n                        <p className={props.classes.home__benefitsParagraph}>В Firess отправлять и получать сообщения Вы можете как на сайте прямо в браузере своего смартфона или компьютера, так и через приложение, доступное к установке и на смартфоны, и на компьютеры.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>СКОРОСТЬ. </span>Мгновенная доставка сообщений.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>СИНХРОНИЗАЦИЯ. </span>Отправлять и получать сообщения, просматривать историю переписки и пользоваться всем остальным функционалом Firess можно с нескольких устройств одновременно, включая компьютеры, планшеты и смартфоны. Все данные останутся с Вами, даже если Вы купите новый смартфон или потеряете старый.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>ОТСУТСТВИЕ ОГРАНИЧЕНИЙ. </span>Вся история переписки хранится на сервере и не занимает почти никакого места на Ваших устройствах.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>ШИРОКИЕ ВОЗМОЖНОСТИ. </span>Каждая группа в чатах Firess может вмещать неограниченное количество участников. Firess идеально подходит для создания личной переписки, онлайн-форума, онлайн-сообществ по интересам и организации рабочих процессов.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>НАДЁЖНОСТЬ. </span>Вы сможете отправлять и получать сообщения даже на самых слабых соединениях.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>ПРОСТОТА. </span>Приложение Firess - простое и понятное. Благодаря минималистичному дизайну освоить Firess легко, независимо от уровня Вашей технической грамотности.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>БЕСПЛАТНЫЙ СЕРВИС. </span>Приложение Firess полностью бесплатно, без каких-либо платных подписок и назойливой рекламы. Firess использует подключение вашего устройства к Интернету (4G/3G/2G/EDGE, домашний интернет или Wi-Fi, если он доступен) для обмена сообщениями, поэтому вам не нужно оплачивать каждое новое сообщение.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>БЕЗ МЕЖДУНАРОДНЫХ ТАРИФОВ. </span>Firess не берёт дополнительную плату за отправку сообщений за рубеж. Общайтесь с людьми по всему миру и не переплачивайте за международные SMS. Все сообщения в Firess абсолютно бесплатны.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>СПОКОЙСТВИЕ. </span>Вам никогда напрямую не напишут посторонние люди с целью навязывания своих услуг, продвижения своих продуктов, вымогания денег и прочими предложениями - ведь Вы общаетесь в чатах, которые посещаете сами по своему желанию.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>ГРУППОВЫЕ ЧАТЫ. </span>Групповые чаты помогают вам с лёгкостью оставаться на связи как с друзьями и родственниками, так и с вовсе незнакомыми Вам людьми, у которых схожие с Вами интересы.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>ЧАТЫ БЕЗ ОГРАНИЕЧЕНИЙ. </span>Зачем ограничиваться одним чатом с другом или любым другим человеком? В Firess Вы можете создать неограниченное количество чатов с каждым человеком, группой людей, а также с самим собой. Это удобно, например, если Вы хотите, чтобы диалог не выглядел одной сплошной лентой. Вы можете создать с собеседником или группой собеседников несколько чатов, разделенных, например, по тематике,</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>НЕ ОСТАВЛЯЙТЕ СЛЕДОВ В СЕТИ. </span>В случае, если Вы не хотите, чтобы сообщения оставались в сети Интернет или Вы отправляете секретные данные, которые не должны попасть третьим лицам, или же Вы просто боитесь, что диалог может прочитать кто-то другой, тогда Вы можете создать с собеседником или с группой собеседников отдельный чат и удалить его после общения. При удалении чата вместе с ним со всех устройств всех участников чата и со всех серверов безвозвратно удаляются все сообщения этого чата, таким образом нигде не остается вообще никаких следов переписки.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>СОХРАНЕНИЕ СООБЩЕНИЙ, ПОКА ВЫ НЕ В СЕТИ. </span>Даже если Вы закроете сайт, выключите приложение или полностью выключите смартфон, Firess доставит сообщения, когда Вы снова откроете приложение или зайдете на сайт.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>НЕОГРАНИЧЕННАЯ ДЛИНА СООБЩЕНИЙ. </span>Делитесь длинными сообщениями и печатными произведениями, не задумываясь об ограничении символов и о формате отображаемого текста.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>ОФОРМЛЕНИЕ ТЕКСТА. </span>Ваш собеседник ничего не пропустит. В Firess всем пользователям доступен специальный синтаксис для оформления текста. Выделяйте в сообщениях особо важные слова, предложения и абзацы. Варианты оформления: курсив, жирный, подчеркнутый, зачеркнутый, с фоном и любые комбинации перечисленных вариантов, а также - отделение абзацев друг от друга при помощи увеличенного отступа.</p>\r\n                    </div>\r\n                    <div className={props.classes.home__benefitsWrapper}>\r\n                        <p className={props.classes.home__benefitsParagraph}><span className={props.classes.home__benefitName}>КОМФОРТ. </span>Ваши глаза не устанут и не будут болеть. В Firess существует несколько тем, переключающихся автоматически в зависимости от времени суток.</p>\r\n                    </div>\r\n                    <h3 className={props.classes.home__descriptionTitle}>ФУНКЦИОНАЛ ПРИЛОЖЕНИЯ:</h3>\r\n                    <ul className={props.classes.home__benefitsList}>\r\n                        <li className={props.classes.home__benefitsListItem}>создание публичных, приватных и индивидуальных чатов;</li>\r\n                        <li className={props.classes.home__benefitsListItem}>удаление собственных чатов и всех сообщений в них со всех устройств;</li>\r\n                        <li className={props.classes.home__benefitsListItem}>перевод своих публичных чатов в приватные и обратно;</li>\r\n                        <li className={props.classes.home__benefitsListItem}>добавление любимых чатов в избранные;</li>\r\n                        <li className={props.classes.home__benefitsListItem}>отправка и получение сообщений в реальном времени;</li>\r\n                        <li className={props.classes.home__benefitsListItem}>специальный синтаксис для выделения пользователями важных фрагментов текста в отправляемых сообщениях;</li>\r\n                        <li className={props.classes.home__benefitsListItem}>автоматическая смена нескольких тем приложения в зависимости от времени суток;</li>\r\n                        <li className={props.classes.home__benefitsListItem}>прочий функционал.</li>\r\n                    </ul>\r\n                    <p className={props.classes.home__descriptionParagraph}>Благодаря децентрализации приложения, в случае закрытия основного сайта по каким-либо причинам (например, из-за санкций), Вы сможете продолжить общение на запасных сайтах Firess. Все данные сохранятся.</p>\r\n                    <h3 className={props.classes.home__descriptionTitle}>СИНТАКСИС ОФОРМЛЕНИЯ ТЕКСТА В СООБЩЕНИЯХ</h3>\r\n                    <p className={props.classes.home__descriptionParagraph}>Для выделения фрагмента текста в сообщении в начале и в конце выделяемого фрагмента поставьте специальные символы:</p>\r\n                    <ul className={props.classes.home__benefitsList}>\r\n                        <li className={props.classes.home__benefitsListItem}>*,, и ,,* - для выделения <strong>жирным</strong> шрифтом</li>\r\n                        <li className={props.classes.home__benefitsListItem}>/,, и ,,/ - для выделения <em>курсивным</em> шрифтом</li>\r\n                        <li className={props.classes.home__benefitsListItem}>_,, и ,,_ - для выделения <ins>подчеркнутым</ins> шрифтом</li>\r\n                        <li className={props.classes.home__benefitsListItem}>-,, и ,,- - для выделения <s>зачеркнутым</s> шрифтом</li>\r\n                        <li className={props.classes.home__benefitsListItem}>+,, и ,,+ - для выделения текста <mark style={{backgroundColor: '#cccccc'}}>фоном</mark></li>\r\n                        <li className={props.classes.home__benefitsListItem}>=,, и ,,= - для написания текста с новой строки</li>\r\n                        <li className={props.classes.home__benefitsListItem}>(,, и ,,) - для отделения абзацев друг от друга</li>\r\n                    </ul>\r\n                    <p className={props.classes.home__descriptionParagraph}>Для комбинированного оформления фрагментов текста рекомендуется ставить пробел между текстовыделителями.</p>\r\n                    <h4 className={props.classes.home__descriptionMiniTitle}>Пример:</h4>\r\n                    <p className={props.classes.home__descriptionParagraph}>(,,Открывающаяся скобка показывает, что начался абзац, а закрывающая - что абзац закончился.,,)(,,Поэтому здесь начнется второй абзац, а текст пойдет со следующей строки и с дополнительным вертикальным отступом.,,)(,,В третьем абзаце выделим текст /,,курсивом,,/, *,,жирным,,*, _,,подчеркнутым,,_, -,,зачеркнутым,,- шрифтом и +,,фоном,,+.,,)(,,В четвертом абзаце применим *,, _,,комбинации,,_ ,,* +,, /,,разных,,/ -,, *,,вариантов,,* ,,- _,,оформления,,_ текста,,+.,,)(,,В пятом абзаце напишем текст с новой строки. =,,При этом новая строка начнется без дополнительного вертикального отступа.,,= ,,)</p>\r\n                    <h4 className={props.classes.home__descriptionMiniTitle}>Результат:</h4>\r\n                    <div className={props.classes.home__descriptionParagraphWrapper}><p style={{margin: '1vh 0'}}>Открывающаяся скобка показывает, что начался абзац, а закрывающая - что абзац закончился.</p><p style={{margin: '1vh 0'}}>Поэтому здесь начнется второй абзац, а текст пойдет со следующей строки и с дополнительным вертикальным отступом.</p><p style={{margin: '1vh 0'}}>В третьем абзаце выделим текст <em>курсивом</em>, <strong>жирным</strong>, <ins>подчеркнутым</ins>, <s>зачеркнутым</s> шрифтом и <mark style={{backgroundColor: '#cccccc'}}>фоном</mark>.</p><p style={{margin: '1vh 0'}}>В четвертом абзаце применим <strong> <ins>комбинации</ins> </strong> <mark style={{backgroundColor: '#cccccc'}}> <em>разных</em> <s> <strong>вариантов</strong> </s> <ins>оформления</ins> текста</mark>.</p><p style={{margin: '1vh 0'}}>В пятом абзаце напишем текст с новой строки. <br/>При этом новая строка начнется без дополнительного вертикального отступа.</p></div>\r\n                </div>\r\n                <div className={props.classes.home__logoWrapper}>\r\n                    <img className={props.classes.home__logoImg} src={props.logoEnvelope} alt='logo' height='50px' />\r\n                    <img className={props.classes.home__logoImg} src={props.logoRectangle} alt='logo' height='50px' />\r\n                    <img className={props.classes.home__logoImg} src={props.logoCircle} alt='logo' height='50px' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logoRectangle.bca65173.png\";","export default __webpack_public_path__ + \"static/media/logoCircle.e6456ece.png\";","export default __webpack_public_path__ + \"static/media/logoEnvelope.fb7bae3c.png\";","export const getStatusesInTheAppRootSelector = (state) => state.statusesInTheApp;\r\nexport const getStatusesInTheAppIsEmailVerificationConfirmationWaitingSelector = (state) => getStatusesInTheAppRootSelector(state).isEmailVerificationConfirmationWaiting || null;\r\nexport const getStatusesInTheAppCountdownForLetterRequestIsNumberSelector = (state) => getStatusesInTheAppRootSelector(state).countdownForLetterRequestIsNumber || null;\r\nexport const getStatusesInTheAppLastAuthorizationDateAndTimeSelector = (state) => getStatusesInTheAppRootSelector(state).lastAuthorizationDateAndTime || null;\r\nexport const getStatusesInTheAppValueInChatsListInputIsSelector = (state) => getStatusesInTheAppRootSelector(state).valueInChatsListInputIs || '';\r\nexport const getStatusesInTheAppIsAquariumOpenSelector = (state) => getStatusesInTheAppRootSelector(state).isAquariumOpen || null;\r\nexport const getStatusesInTheAppappThemeIsSelector = (state) => getStatusesInTheAppRootSelector(state).appThemeIs;\r\nexport const getStatusesInTheAppOnlySelectedChatsBooleanSelector = (state) => getStatusesInTheAppRootSelector(state).onlySelectedChatsBoolean || false;\r\nexport const getStatusesInTheAppChatsCountSelectedSelector = (state) => getStatusesInTheAppRootSelector(state).chatsCountSelected;\r\nexport const getStatusesInTheAppEventForPWAInstallationSelector = (state) => getStatusesInTheAppRootSelector(state).eventForPWAInstallationCase || null;\r\nexport const getAppSwitchesDeviceOnTheNetworkSelector = (state) => getStatusesInTheAppRootSelector(state).deviceOnTheNetworkCase || false;\r\nexport const getStatusesInTheAppIsStrictSearchSelector = (state) => getStatusesInTheAppRootSelector(state).isStrictSearchCase || false;\r\n","import React from 'react';\r\nimport { APP_THEMES_NAMES } from '../../data/consts';\r\nimport { isMobileDevice } from '../../helper/helper';\r\nimport { useStyles } from '../../styles/Style';\r\nimport { HomeUI } from '../../ui_components/HomeUI';\r\nimport logoRectangle from '../../img/logo/logoRectangle.png';\r\nimport logoCircle from '../../img/logo/logoCircle.png';\r\nimport logoEnvelope from '../../img/logo/logoEnvelope.png';\r\nimport { useSelector } from 'react-redux';\r\nimport { getStatusesInTheAppappThemeIsSelector } from '../../store/AppSwitches/Selectors';\r\n\r\nexport const Home = () => {\r\n    const classes = useStyles();\r\n\r\n    const appThemeSel = useSelector(getStatusesInTheAppappThemeIsSelector);\r\n\r\n    const isMobileDeviceBoolean = isMobileDevice();\r\n\r\n    return (\r\n        <HomeUI classes={classes} isMobileDeviceBoolean={isMobileDeviceBoolean} APP_THEMES_NAMES={APP_THEMES_NAMES} logoRectangle={logoRectangle} logoCircle={logoCircle} logoEnvelope={logoEnvelope} appThemeSel={appThemeSel}></HomeUI>\r\n    )\r\n};\r\n","const TOGGLE_CHECKED_PROFILE = 'TOGLEE_CHECKED_PROFILE';\r\n\r\nexport const toggleCheckedProfile = {\r\n    type: TOGGLE_CHECKED_PROFILE,\r\n};\r\n","export const getProfileRootSelector = (state) => state.profile;\r\nexport const getProfileCheckedSelector = (state) => getProfileRootSelector(state).checked;\r\n","import React from 'react';\r\n\r\nexport const ProfileUI = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>{props.componentTitle}</h1>\r\n            <input type='checkbox' checked={props.isChecked} onChange={props.toggleChecked} />\r\n            <p>\r\n                <span>Мой Email: </span>\r\n                {props.myEmailForProps}\r\n            </p>\r\n            <p>Страница еще не готова! Развитие этой страницы предполагается в дальнейшем.</p>\r\n            {\r\n                props.eventForPWAInstallationSel \r\n                ? \r\n                <div id=\"installContainer\">\r\n                    <button id=\"butInstall\" type=\"button\" onClick={props.installApp}>Установить</button>\r\n                </div>\r\n                : \r\n                null\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { auth } from '../../firebase/firebase';\r\nimport { eventForPWAInstallation } from '../../store/AppSwitches/Action';\r\nimport { getStatusesInTheAppEventForPWAInstallationSelector } from '../../store/AppSwitches/Selectors';\r\nimport { toggleCheckedProfile } from '../../store/Profile/Action';\r\nimport { getProfileCheckedSelector } from '../../store/Profile/Selectors';\r\nimport { ProfileUI } from '../../ui_components/ProfileUI.jsx';\r\n\r\nexport const Profile = () => {\r\n    const componentTitle = 'Профиль';\r\n    const dispatch = useDispatch();\r\n    const isChecked = useSelector(getProfileCheckedSelector);\r\n    const eventForPWAInstallationSel = useSelector(getStatusesInTheAppEventForPWAInstallationSelector);\r\n\r\n    const myEmail = (auth.currentUser !== null ? auth.currentUser.email : null);\r\n\r\n    const myEmailForProps = isChecked ? <span>{myEmail}</span> : <span>Скрыто</span>;\r\n\r\n    const toggleChecked = () => {\r\n        dispatch({\r\n            type: toggleCheckedProfile.type,\r\n        })\r\n    };\r\n\r\n    const installApp = async () => {\r\n        if (eventForPWAInstallationSel) {\r\n            //* Show the install prompt:\r\n            eventForPWAInstallationSel.prompt();\r\n            //* Wait for the user to respond to the prompt (You can optionally return an object that has an \"outcome\" method that displays the user's response from the \"prompt\" modal window):\r\n            await eventForPWAInstallationSel.userChoice;\r\n            //* 1. Hide the app-provided install promp ; 2. We've used the instalation prompt, and we don't need in it more:\r\n            dispatch({\r\n                type: eventForPWAInstallation.type,\r\n                payload: null,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ProfileUI componentTitle={componentTitle} isChecked={isChecked} toggleChecked={toggleChecked} myEmailForProps={myEmailForProps} installApp={installApp} eventForPWAInstallationSel={eventForPWAInstallationSel}></ProfileUI>\r\n    )\r\n};\r\n","import { messagesRef } from '../../firebase/firebase';\r\n\r\nexport const CHANGE_MESSAGES_LIST = 'CHANGE_MESSAGES_LIST';\r\n\r\nexport const changeMessagesListAction = (payload) => ({\r\n    type: CHANGE_MESSAGES_LIST,\r\n    payload: payload,\r\n});\r\n\r\nexport const DROP_MESSAGES_IN_STATE = 'DROP_MESSAGES_IN_STATE';\r\n\r\nexport const dropMessagesInStateAction = {\r\n    type: DROP_MESSAGES_IN_STATE,\r\n};\r\n\r\nexport const addMessageInChatListWithThunkAction = (contactKey, contactName, contactId, text, imgSrc, author, messageUTCDateAndTime) => () => {\r\n    messagesRef.child(contactKey).push({contactKey, contactName, contactId, text, imgSrc, author, messageUTCDateAndTime});\r\n};\r\n\r\nconst changeMessagesList = (dispatch, openChatKey) => {\r\n    return (snapshot) => {\r\n        dispatch(changeMessagesListAction({\r\n            openChatKey: openChatKey, \r\n            snapshotVal: snapshot.val(),\r\n        }));\r\n    }\r\n};\r\n\r\nexport const onTrackingChangeValueInMessagesListFromOpenChatWithThunkAction = (openChatKey) => (dispatch) => {\r\n    messagesRef.child(openChatKey).on('value', changeMessagesList(dispatch, openChatKey));\r\n};\r\n\r\nexport const offTrackingChangeValueInMessagesListFromOpenChatWithThunkAction = (openChatKey) => (dispatch) => {\r\n    messagesRef.child(openChatKey).off('value', changeMessagesList(dispatch, openChatKey));\r\n};\r\n\r\nexport const removeAllMessagesInDeleteChatWithThunkAction = (openChatKey) => (dispatch) => {\r\n    messagesRef.child(openChatKey).remove();\r\n    dispatch({\r\n        type: dropMessagesInStateAction.type,\r\n    });\r\n};\r\n","import { chatAccessRef, chatsRef } from \"../../firebase/firebase\";\r\n\r\nexport const CHANGE_CHATS_LIST = 'CHANGE_CHATS_LIST';\r\n\r\nexport const changeChatsListAction = (snapshotVal) => ({\r\n    type: CHANGE_CHATS_LIST,\r\n    payload: snapshotVal,\r\n});\r\n\r\nexport const DROP_CHATS_LIST_IN_STATE = 'DROP_CHATS_LIST_IN_STATE';\r\n\r\nexport const dropChatsListInStateAction = {\r\n    type: DROP_CHATS_LIST_IN_STATE,\r\n};\r\n\r\nexport const addInChatsListWithThunkAction = (chat) => () => {\r\n    chatsRef.push(chat);\r\n};\r\n\r\nexport const removeFromChatsListWithThunkAction = (chatKey) => () => {\r\n    chatsRef.child(chatKey).remove();\r\n};\r\n\r\nconst changeChatsList = (dispatch) => {\r\n    return (snapshot) => {\r\n        dispatch(changeChatsListAction(snapshot.val()));\r\n    }\r\n};\r\n\r\nexport const onTrackingChangeValueInChatsListWithThunkAction = (dispatch) => {\r\n    chatsRef.on('value', changeChatsList(dispatch));\r\n};\r\n\r\nexport const offTrackingChangeValueInChatsListWithThunkAction = (dispatch) => {\r\n    chatsRef.off('value', changeChatsList(dispatch));\r\n};\r\n\r\nexport const changeChatPasswordWithThunkAction = (chatKey, chatId, password, chatAuthorUID) => () => {\r\n    chatsRef.child(chatKey).child('theyCanReadThisChat').set('');\r\n    chatsRef.child(chatKey).child('theyCanReadThisChat').push(chatAuthorUID);\r\n    chatAccessRef.update({\r\n        [chatId]: '',\r\n    });\r\n    chatAccessRef.child(chatId).child('chatPassword').set(password);\r\n    chatAccessRef.child(chatId).child('theyCanReadThisChat').set('');\r\n    chatAccessRef.child(chatId).child('theyCanReadThisChat').push(chatAuthorUID);\r\n};\r\n\r\nexport const addUserIntoChatWithThunkAction = (chatKey, chatId, userUID) => () => {\r\n    chatsRef.child(chatKey).child('theyCanReadThisChat').push(userUID);\r\n    chatAccessRef.child(chatId).child('theyCanReadThisChat').push(userUID);\r\n};\r\n\r\nexport const deleteSecretIntoAboutDeletedChatWithThunkAction = (chatId) => () => {\r\n    if (chatAccessRef.child(chatId)) {\r\n        chatAccessRef.child(chatId).remove();\r\n    }\r\n};\r\n\r\nexport const makeTheChatPublicWithThunkAction = (chatKey) => () => {\r\n    chatsRef.child(chatKey).update({\r\n        chatIsPrivate: false,\r\n    });\r\n};\r\n\r\nexport const makeTheChatPrivateWithThunkAction = (chatKey) => () => {\r\n    chatsRef.child(chatKey).update({\r\n        chatIsPrivate: true,\r\n    });\r\n};\r\n\r\nexport const addTheUserWhoLikesThisChatWithThunkAction = (chatKey, userUID) => () => {\r\n    chatsRef.child(chatKey).child('theyLikeThisChat').update({\r\n        [userUID]: userUID,\r\n    });\r\n};\r\n\r\nexport const deleteTheUserWhoDoesNotLikeThisChatWithThunkAction = (chatKey, userUID) => () => {\r\n    chatsRef.child(chatKey).child('theyLikeThisChat').child(userUID).remove();\r\n};\r\n","export const getChatsListRootSelector = (state) => state.chatsListReducer;\r\nexport const getChatsListChatsKindOfDictSelector = (state) => getChatsListRootSelector(state).chats || {};\r\nexport const getChatsListChatsKindOfListSelector = (state) => Object.values(getChatsListChatsKindOfDictSelector(state));\r\n","import React from 'react';\r\nimport { Box, IconButton } from '@material-ui/core';\r\nimport { PersonAdd, DeleteForever, AccessTime, Star, StarBorder } from '@material-ui/icons';\r\n\r\nexport const ChangeChatsListUI = (props) => {\r\n    return (\r\n        <Box className={props.classes.changeContactNameForm} component='form' onSubmit={props.onSubmit}>\r\n            <input className={props.classes.changeContactNameInput} placeholder=\"Название чата\" label=\"Название чата\" type=\"text\" onChange={props.onSaveNameFromInput} value={props.valueName} ref={props.refInput} />\r\n            <div className={props.classes.changeContactNameInfo}>\r\n                {props.isStrictSearchForProps}\r\n                {props.errorForProps}\r\n                {props.successForProps}\r\n            </div>\r\n            <div className={`${props.classes.changeContactNameButtons} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.changeContactNameButtons_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.changeContactNameButtons_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.changeContactNameButtons_sunnyTheme : null) : null}`}>\r\n                <IconButton type='submit'>\r\n                    <PersonAdd className={`${props.classes.changeContactNameIcon} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.changeContactNameIcon_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.changeContactNameIcon_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.changeContactNameIcon_sunnyTheme : null) : null}`} />\r\n                </IconButton>\r\n                <IconButton onClick={props.deliteContact}>\r\n                    <DeleteForever className={`${props.classes.changeContactNameIcon} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.changeContactNameIcon_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.changeContactNameIcon_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.changeContactNameIcon_sunnyTheme : null) : null}`} />\r\n                </IconButton>\r\n                <IconButton onClick={props.changeStatusOnAllChatsOrOnlySelectedChats}>\r\n                    {\r\n                        props.onlySelectedChatsSel \r\n                        ? \r\n                        <Star className={`${props.classes.changeContactNameIcon} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.changeContactNameIcon_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.changeContactNameIcon_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.changeContactNameIcon_sunnyTheme : null) : null}`} />\r\n                        : \r\n                        <StarBorder className={`${props.classes.changeContactNameIcon} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.changeContactNameIcon_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.changeContactNameIcon_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.changeContactNameIcon_sunnyTheme : null) : null}`} />\r\n                    }\r\n                </IconButton>\r\n                {\r\n                    props.isMobileDeviceBoolean \r\n                    ? \r\n                    <IconButton onClick={props.openAquarium}>\r\n                        <AccessTime className={`${props.classes.changeContactNameIcon} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.changeContactNameIcon_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.changeContactNameIcon_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.changeContactNameIcon_sunnyTheme : null) : null}`} />\r\n                    </IconButton>\r\n                    : \r\n                    null\r\n                }\r\n            </div>\r\n        </Box>\r\n    )\r\n};\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { APP_THEMES_NAMES, MAXIMUM_NUMBER_OF_CHARACTERS_FOR_A_CHAT_NAME } from '../../../data/consts';\r\nimport { auth } from '../../../firebase/firebase';\r\nimport { getKeyForTheChatByChatName, isMobileDevice } from '../../../helper/helper';\r\nimport { aquariumStatus, isStrictSearchAction, onlySelectedChats, valueInChatsListInput } from '../../../store/AppSwitches/Action';\r\nimport { getStatusesInTheAppappThemeIsSelector, getStatusesInTheAppChatsCountSelectedSelector, getStatusesInTheAppIsStrictSearchSelector, getStatusesInTheAppOnlySelectedChatsBooleanSelector } from '../../../store/AppSwitches/Selectors';\r\nimport { removeAllMessagesInDeleteChatWithThunkAction } from '../../../store/ChatList/Action';\r\nimport { addInChatsListWithThunkAction, deleteSecretIntoAboutDeletedChatWithThunkAction, removeFromChatsListWithThunkAction } from '../../../store/ChatsList/Action';\r\nimport { getChatsListChatsKindOfDictSelector, getChatsListChatsKindOfListSelector } from '../../../store/ChatsList/Selectors';\r\nimport { useStyles } from '../../../styles/Style';\r\nimport { ChangeChatsListUI } from '../../../ui_components/ChangeChatsListUI.jsx';\r\n\r\nexport const ChangeChatsList = () => {\r\n  const classes = useStyles();\r\n  const [valueName, setValueName] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const errorForProps = error ? <p className={`${classes.chatsListActionResaltInfo} ${classes.chatsListActionResaltInfo_attention}`}>{error}</p> : null\r\n  const successForProps = success ? <p className={`${classes.chatsListActionResaltInfo} ${classes.chatsListActionResaltInfo_success}`}>{success}</p> : null\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const chatsListChatsKindOfDictRed = useSelector(getChatsListChatsKindOfDictSelector);\r\n  const chatsListRed = useSelector(getChatsListChatsKindOfListSelector);\r\n  const appThemeSel = useSelector(getStatusesInTheAppappThemeIsSelector);\r\n  const onlySelectedChatsSel = useSelector(getStatusesInTheAppOnlySelectedChatsBooleanSelector);\r\n  const chatsCountSelectedSel = useSelector(getStatusesInTheAppChatsCountSelectedSelector);\r\n  const isStrictSearchSel = useSelector(getStatusesInTheAppIsStrictSearchSelector);\r\n\r\n  const isMobileDeviceBoolean = isMobileDevice();\r\n\r\n  const refInput = useRef(null);\r\n\r\n  const showSimilarChatsCount = useCallback(() => {\r\n    if (chatsCountSelectedSel === 0) {\r\n      setError('Нет похожих чатов');\r\n    } else if (chatsCountSelectedSel !== 0) {\r\n      setSuccess(`Совпадений: ${chatsCountSelectedSel}`);\r\n    }\r\n  }, [chatsCountSelectedSel]);\r\n\r\n  const onSaveNameFromInput = (event) => {\r\n    setValueName(event.target.value);\r\n    setError(false);\r\n    setSuccess(false);\r\n\r\n    if (event.target.value !== '') {\r\n      showSimilarChatsCount();\r\n    }\r\n  };\r\n\r\n  const resetValue = () => {\r\n    setValueName('');\r\n  };\r\n\r\n  const newContactId = () => {\r\n    const now = new Date().getTime();\r\n    const nowString = String(now);\r\n    return nowString\r\n  };\r\n\r\n  const addContact = (newName) => {\r\n    const now = newContactId();\r\n    const chatAuthor = auth.currentUser !== null ? auth.currentUser.uid : null;\r\n    const newContact = {\r\n      id: now,\r\n      chatAuthor: chatAuthor,\r\n      name: newName,\r\n    };\r\n    return newContact\r\n  };\r\n\r\n  const validChatNameLength = (chatName, maxLength) => {\r\n    if (chatName.length <= maxLength) {\r\n      return true\r\n    }\r\n    \r\n    setError(`Максимум ${maxLength} символов`);\r\n    return false\r\n  };\r\n\r\n  const validCharactersInTheChatName = (chatName) => {\r\n    const regExp = /^[0-9a-zа-яё_\\s(),.[\\]{}\\-@]+$/i;\r\n    if (regExp.test(chatName)) {\r\n      return true\r\n    }\r\n\r\n    setError('Только \"цифры, буквы, скобки, @, пробел, _, -, . и ,\"');\r\n    return false\r\n  };\r\n\r\n  const validStartOfString = (chatName) => {\r\n    const regExp = /^[0-9a-zа-яё\\-_]/i;\r\n    if (regExp.test(chatName)) {\r\n      return true\r\n    }\r\n\r\n    setError('Нельзя начинать со спец. символов');\r\n    return false\r\n  };\r\n\r\n  const validEndOfString = (chatName) => {\r\n    const regExp = /[^,]$/i;\r\n    if (regExp.test(chatName)) {\r\n      return true\r\n    }\r\n\r\n    setError('Запятая в конце');\r\n    return false\r\n  };\r\n\r\n  const removeSpacesAtTheBeginningAndAtTheEndOfTheString = (chatName) => {\r\n    return chatName.replace(/^\\s+|\\s+$/g, '')\r\n  };\r\n\r\n  const combineSameCharacters = (chatName) => {\r\n    chatName = chatName.replace(/\\s+/g, ' ');\r\n    chatName = chatName.replace(/,+/g, ',');\r\n    \r\n    return removeSpacesAtTheBeginningAndAtTheEndOfTheString(chatName)\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault(); //* Cancel page reload.\r\n    setError(false);\r\n    setSuccess(false);\r\n    if (valueName !== '') {\r\n      if (\r\n        validChatNameLength(valueName, MAXIMUM_NUMBER_OF_CHARACTERS_FOR_A_CHAT_NAME) \r\n        && \r\n        validCharactersInTheChatName(valueName) \r\n        && \r\n        validStartOfString(valueName) \r\n        && \r\n        validEndOfString(valueName)\r\n      ) {\r\n        const newValueName = combineSameCharacters(valueName);\r\n        if (!(chatsListRed.find((item) => item.name === newValueName))) {\r\n          const newContact = addContact(newValueName);\r\n          dispatch(addInChatsListWithThunkAction(newContact));\r\n          setSuccess(`Чат \"${newValueName}\" создан`);\r\n          resetValue();\r\n        } else {\r\n          setError('Чат уже существует');\r\n        }\r\n      }\r\n    } else {\r\n      setError('Введите название чата');\r\n    }\r\n  };\r\n\r\n  const deliteContact = () => {\r\n    setError(false);\r\n    setSuccess(false);\r\n    if (valueName !== '') {\r\n      const delChatsListRedKey = getKeyForTheChatByChatName(chatsListChatsKindOfDictRed, valueName);\r\n      if (delChatsListRedKey) {\r\n        if ((chatsListChatsKindOfDictRed[delChatsListRedKey]['chatAuthor'] && chatsListChatsKindOfDictRed[delChatsListRedKey]['chatAuthor'] === auth.currentUser.uid) || !chatsListChatsKindOfDictRed[delChatsListRedKey]['chatAuthor']) {\r\n          dispatch(removeFromChatsListWithThunkAction(delChatsListRedKey));\r\n          dispatch(removeAllMessagesInDeleteChatWithThunkAction(delChatsListRedKey));\r\n          dispatch(deleteSecretIntoAboutDeletedChatWithThunkAction(chatsListChatsKindOfDictRed[delChatsListRedKey]['id']));\r\n          const deleteChat = valueName;\r\n          setSuccess(`Чат \"${deleteChat}\" удален`);\r\n          resetValue();\r\n        } else {\r\n          setError('Чаты могут удалять только их авторы');\r\n        }\r\n      } else {\r\n        setError('Чат не найден');\r\n      }\r\n    } else {\r\n      setError('Введите название чата');\r\n    }\r\n  };\r\n\r\n  const openAquarium = () => {\r\n    dispatch({\r\n        type: aquariumStatus.type,\r\n        payload: true,\r\n    });\r\n  };\r\n\r\n  const changeStatusOnAllChatsOrOnlySelectedChats = () => {\r\n    dispatch({\r\n      type: onlySelectedChats.type,\r\n      payload: !onlySelectedChatsSel,\r\n    });\r\n  };\r\n\r\n  const focusOnInput = () => {\r\n    refInput.current.focus();\r\n  };\r\n\r\n  const changeChatsSearchMode = () => {\r\n    dispatch({\r\n      type: isStrictSearchAction.type,\r\n      payload: !isStrictSearchSel,\r\n    });\r\n\r\n    focusOnInput();\r\n  };\r\n\r\n  const isStrictSearchForProps = valueName ? <div onClick={() => changeChatsSearchMode()} className={`${classes.changeChatsSearchMode} ${success && !error && classes.changeChatsSearchMode_success} ${!success && error && classes.changeChatsSearchMode_attention}`}>{isStrictSearchSel ? 'Строгий поиск' : 'Не строгий поиск'}</div> : null;\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: valueInChatsListInput.type,\r\n      payload: valueName,\r\n    });\r\n  }, [dispatch, valueName]);\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      if (valueName === '') {\r\n        setError(false);\r\n        setSuccess(false);\r\n      }\r\n    }, 5000);\r\n\r\n    return () => {\r\n      clearTimeout(timerId)\r\n    }\r\n  }, [valueName]);\r\n\r\n  useEffect(() => {\r\n    if (valueName !== '') {\r\n      setError(false);\r\n      setSuccess(false);\r\n\r\n      showSimilarChatsCount();\r\n    }\r\n  }, [chatsCountSelectedSel, showSimilarChatsCount, valueName]);\r\n\r\n  return (\r\n    <ChangeChatsListUI classes={classes} onSubmit={onSubmit} onSaveNameFromInput={onSaveNameFromInput} valueName={valueName} deliteContact={deliteContact} errorForProps={errorForProps} successForProps={successForProps} openAquarium={openAquarium} isMobileDeviceBoolean={isMobileDeviceBoolean} appThemeSel={appThemeSel} APP_THEMES_NAMES={APP_THEMES_NAMES} onlySelectedChatsSel={onlySelectedChatsSel} changeStatusOnAllChatsOrOnlySelectedChats={changeStatusOnAllChatsOrOnlySelectedChats} isStrictSearchForProps={isStrictSearchForProps} refInput={refInput}></ChangeChatsListUI>\r\n  )\r\n};\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\n\r\nexport const ChatsListUI = (props) => {\r\n    return (\r\n        <List className={props.classes.chatsList} component=\"nav\">{props.newChatsListRed}</List>\r\n    )\r\n};\r\n","export const getBigChatRootSelector = (state) => state.bigChat;\r\nexport const getBigChatIsOpenSelector = (state) => getBigChatRootSelector(state).isBigChatOpen;\r\n","const BIG_CHAT_OPEN = 'BIG_CHAT_OPEN';\r\nconst BIG_CHAT_CLOSE = 'BIG_CHAT_CLOSE';\r\n\r\nexport const bigChatOpen = {\r\n    type: BIG_CHAT_OPEN,\r\n};\r\n\r\nexport const bigChatClose = {\r\n    type: BIG_CHAT_CLOSE,\r\n};\r\n","import React, { useEffect, useLayoutEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ChangeChatsList } from './ChangeChatsList/ChangeChatsList';\r\nimport { getChatsListChatsKindOfListSelector } from '../../store/ChatsList/Selectors';\r\nimport { Box, ListItem } from '@material-ui/core';\r\nimport { useStyles } from '../../styles/Style';\r\nimport { ChatsListUI } from '../../ui_components/ChatsListUI.jsx';\r\nimport { offTrackingChangeValueInChatsListWithThunkAction, onTrackingChangeValueInChatsListWithThunkAction } from '../../store/ChatsList/Action';\r\nimport { getBigChatIsOpenSelector } from '../../store/BigChatStatus/Selectors';\r\nimport { isMobileDevice, isNumberOrString, sortingConditions } from '../../helper/helper';\r\nimport { bigChatClose } from '../../store/BigChatStatus/Action';\r\nimport { getStatusesInTheAppappThemeIsSelector, getStatusesInTheAppIsStrictSearchSelector, getStatusesInTheAppOnlySelectedChatsBooleanSelector, getStatusesInTheAppValueInChatsListInputIsSelector } from '../../store/AppSwitches/Selectors';\r\nimport { auth } from '../../firebase/firebase';\r\nimport { APP_THEMES_NAMES } from '../../data/consts';\r\nimport { chatsCount } from '../../store/AppSwitches/Action';\r\n\r\nexport const ChatsList = () => {\r\n    const classes = useStyles();\r\n\r\n    const isMobileDeviceBoolean = isMobileDevice();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const myUID = auth.currentUser !== null ? auth.currentUser.uid : null;\r\n\r\n    const rulesForSortingTheChatsList = (a, b) => {\r\n        const chatNameA = isNumberOrString(a.name);\r\n        const chatNameB = isNumberOrString(b.name);\r\n\r\n        return sortingConditions(chatNameA, chatNameB)\r\n    };\r\n\r\n    const valueInChatsListInput = useSelector(getStatusesInTheAppValueInChatsListInputIsSelector);\r\n    const chatsListRed = useSelector(getChatsListChatsKindOfListSelector).sort(rulesForSortingTheChatsList);\r\n    const appThemeSel = useSelector(getStatusesInTheAppappThemeIsSelector);\r\n    const onlySelectedChatsSel = useSelector(getStatusesInTheAppOnlySelectedChatsBooleanSelector);\r\n    const isBigChatOpen = useSelector(getBigChatIsOpenSelector);\r\n    const isStrictSearchSel = useSelector(getStatusesInTheAppIsStrictSearchSelector);\r\n\r\n    const valueInChatsListInputLowerCase = valueInChatsListInput.toLowerCase();\r\n\r\n    const searchForEnteredValue = (chatName) => {\r\n        const chatNameLowerCase = chatName.toLowerCase(); //* - Проверяемое название чата в нижнем регистре.\r\n\r\n        if(isStrictSearchSel) { //* - Строгий ли поиск.\r\n            return chatNameLowerCase.includes(valueInChatsListInputLowerCase) //* Ищим подстроку в строке (введённое пользователем значение в названии чата).\r\n        } else {\r\n            let chatNameIndex = 0; //* - Индекс названия чата, с которого начинаем поиск очередной буквы из введённого пользователем значения.\r\n\r\n            for (let i=0; i < valueInChatsListInputLowerCase.length; i++) { //* - Проверяем по отдельности каждую введённую пользователем букву (символ).\r\n                const foundLetterIndex = chatNameLowerCase.indexOf(valueInChatsListInputLowerCase[i], chatNameIndex); //* - Поиск индекса названия чата, на котором найдена искомая буква (символ) из введённого пользователем значения. Первый аргумент в методе \".indexOf()\" - это искомая буква (символ) из введённого пользователем значения; второй аргумент - это индекс названия чата, с которого начинаем поиск буквы (символа).\r\n\r\n                if (foundLetterIndex > -1) { //* - Искомая буква найдена в названии чата.\r\n                    chatNameIndex = foundLetterIndex + 1; //* - Поиск следующеё буквы из введённого пользователем значения будет осуществляться с индекса названия чата, идущего следующим после индекса, на котором была найдена буква (символ).\r\n\r\n                    if (i === valueInChatsListInputLowerCase.length - 1) { //* - Последняя буква из введённого пользователем значения найдена.\r\n                        return true\r\n                    }\r\n                } else { //* - Искомая буква не найдена в названии чата.\r\n                    return false\r\n                }\r\n            }\r\n\r\n            return true //* - Пользователь ничего не вводил в поле поиска (ничего искать не надо).\r\n        }\r\n    };\r\n\r\n    const newChatsListRed = (\r\n        onlySelectedChatsSel \r\n        ? \r\n        chatsListRed.filter(chat => (\r\n            chat.theyLikeThisChat \r\n            && \r\n            chat.theyLikeThisChat[myUID]\r\n        )) \r\n        : \r\n        chatsListRed\r\n        ).filter(chat => searchForEnteredValue(chat.name)).map((item) => {\r\n        return (\r\n            <ListItem className={`${classes.allChatsListItem} ${isBigChatOpen && isBigChatOpen === item.id && classes.allChatsListItem_openChat} ${appThemeSel && appThemeSel.themeNameEn ? (appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_2.nameEn ? classes.allChatsListItem_darkTheme : appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_3.nameEn ? classes.allChatsListItem_greyTheme : appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_4.nameEn ? classes.allChatsListItem_sunnyTheme : null) : null}`} button to={`/messenger/${item.id}`} component={Link} key={item.id}>\r\n                <div className={classes.allChatsListItem_chatNameWrapper}>\r\n                    {\r\n                        item.name\r\n                    }\r\n                </div>\r\n                <div className={classes.allChatsListItem_wrapperSymbols}>\r\n                    {\r\n                        (\r\n                            item.chatIsPrivate \r\n                            && \r\n                            item.chatIsPrivate === true\r\n                        ) \r\n                        ? \r\n                        (\r\n                            item.theyCanReadThisChat \r\n                            ? \r\n                            (\r\n                                Object.values(item.theyCanReadThisChat).find((itemUID) => itemUID === myUID) \r\n                                ? \r\n                                <p className={classes.allChatsListItem_privatChatIcon}>&#128273;</p>\r\n                                : \r\n                                <p className={classes.allChatsListItem_privatChatIcon}>&#128274;</p>\r\n                            )\r\n                            : \r\n                            null\r\n                        ) \r\n                        : \r\n                        null\r\n                    }\r\n                    {\r\n                        item.theyLikeThisChat && item.theyLikeThisChat[myUID] \r\n                        ? \r\n                        <p className={`${classes.allChatsListItem_favoriteIcon} ${appThemeSel && appThemeSel.themeNameEn ? (appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_2.nameEn ? classes.allChatsListItem_favoriteIcon_darkTheme : appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_3.nameEn ? classes.allChatsListItem_favoriteIcon_greyTheme : appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_4.nameEn ? classes.allChatsListItem_favoriteIcon_sunnyTheme : null) : null}`}>&#9733;</p>\r\n                        : \r\n                        <p className={`${classes.allChatsListItem_favoriteIcon} ${appThemeSel && appThemeSel.themeNameEn ? (appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_2.nameEn ? classes.allChatsListItem_favoriteIcon_darkTheme : appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_3.nameEn ? classes.allChatsListItem_favoriteIcon_greyTheme : appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_4.nameEn ? classes.allChatsListItem_favoriteIcon_sunnyTheme : null) : null}`}>&#9734;</p>\r\n                    }\r\n                </div>\r\n            </ListItem>\r\n        )\r\n    });\r\n\r\n    useLayoutEffect(() => {\r\n        dispatch(onTrackingChangeValueInChatsListWithThunkAction);\r\n\r\n        return () => {\r\n            dispatch(offTrackingChangeValueInChatsListWithThunkAction);\r\n        }\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: bigChatClose.type,\r\n        });\r\n        return () => {\r\n            dispatch({\r\n                type: bigChatClose.type,\r\n            });\r\n        };\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: chatsCount.type,\r\n            payload: newChatsListRed.length,\r\n        });\r\n    }, [dispatch, newChatsListRed.length]);\r\n\r\n    return (\r\n        isBigChatOpen && isMobileDeviceBoolean \r\n        ? \r\n        null \r\n        : \r\n        <Box height='100%' width={isMobileDeviceBoolean ? '100%' : '19vw'} display={isBigChatOpen && isMobileDeviceBoolean ? 'none' : 'flex'} flexDirection='column'>\r\n            <ChangeChatsList></ChangeChatsList>\r\n            <ChatsListUI classes={classes} newChatsListRed={newChatsListRed}></ChatsListUI>\r\n        </Box>\r\n    )\r\n};\r\n","export const getChatListRootSelector = (state) => state.chatListReducer || {};\r\nexport const getChatListMessagesSelector = (state) => getChatListRootSelector(state).messages || {};\r\nexport const getChatListChatKindOfDictById = (chatId) => (state) => getChatListMessagesSelector(state)[chatId] || {};\r\nexport const getChatListChatKindOfListById = (chatId) => (state) => Object.values(getChatListChatKindOfDictById(chatId)(state));\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\n\r\nexport const ChatListUI = (props) => {\r\n    return (\r\n        <List className={props.classes.chatList} ref={props.refOpenChat}>{props.chatListRedForProps}</List>\r\n    )\r\n};\r\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getChatListChatKindOfListById } from '../../../store/ChatList/Selectors';\r\nimport { ListItem } from '@material-ui/core';\r\nimport { useStyles } from '../../../styles/Style';\r\nimport { ChatListUI } from '../../../ui_components/ChatListUI.jsx';\r\nimport { getChatsListChatsKindOfDictSelector } from '../../../store/ChatsList/Selectors';\r\nimport { auth } from '../../../firebase/firebase';\r\nimport { getKeyForTheChatByChatId, isMobileDevice } from '../../../helper/helper';\r\nimport { dropMessagesInStateAction, offTrackingChangeValueInMessagesListFromOpenChatWithThunkAction, onTrackingChangeValueInMessagesListFromOpenChatWithThunkAction } from '../../../store/ChatList/Action';\r\nimport { getStatusesInTheAppappThemeIsSelector } from '../../../store/AppSwitches/Selectors';\r\nimport { APP_THEMES_NAMES } from '../../../data/consts';\r\n\r\nexport const ChatList = () => {\r\n    const classes = useStyles();\r\n\r\n    const isMobileDeviceBoolean = isMobileDevice();\r\n\r\n    const { chatId } = useParams();\r\n\r\n    const refOpenChat = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const chatsListChatsKindOfDictRed = useSelector(getChatsListChatsKindOfDictSelector);\r\n    const openChatKey = getKeyForTheChatByChatId(chatsListChatsKindOfDictRed, chatId);\r\n\r\n    const chatListRed = useSelector(getChatListChatKindOfListById(openChatKey));\r\n    const appThemeSel = useSelector(getStatusesInTheAppappThemeIsSelector);\r\n\r\n    const scrollDown = () => {\r\n        if (refOpenChat.current) {\r\n            const scrollHeight = Math.max(\r\n                refOpenChat.current.scrollHeight,\r\n                refOpenChat.current.offsetHeight,\r\n                refOpenChat.current.clientHeight,\r\n            );\r\n        \r\n            refOpenChat.current.scrollTo(0, scrollHeight);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollDown();\r\n    }, [chatListRed]);\r\n\r\n    useLayoutEffect(() => {\r\n        dispatch(onTrackingChangeValueInMessagesListFromOpenChatWithThunkAction(openChatKey));\r\n\r\n        return () => {\r\n            dispatch({\r\n                type: dropMessagesInStateAction.type,\r\n            });\r\n            dispatch(offTrackingChangeValueInMessagesListFromOpenChatWithThunkAction(openChatKey));\r\n        }\r\n    }, [dispatch, openChatKey]);\r\n\r\n    if (chatListRed.length === 0) {\r\n        return null\r\n    }\r\n\r\n    const myEmail = (auth.currentUser !== null ? auth.currentUser.email : null);\r\n\r\n    const localTimezone = new Date().getTimezoneOffset() / -60;\r\n\r\n    const getMonth = (monthString) => {\r\n        if (monthString === 'Jan') {\r\n            return 0\r\n        } else if (monthString === 'Feb') {\r\n            return 1\r\n        } else if (monthString === 'Mar') {\r\n            return 2\r\n        } else if (monthString === 'Apr') {\r\n            return 3\r\n        } else if (monthString === 'May') {\r\n            return 4\r\n        } else if (monthString === 'Jun') {\r\n            return 5\r\n        } else if (monthString === 'Jul') {\r\n            return 6\r\n        } else if (monthString === 'Aug') {\r\n            return 7\r\n        } else if (monthString === 'Sep') {\r\n            return 8\r\n        } else if (monthString === 'Oct') {\r\n            return 9\r\n        } else if (monthString === 'Nov') {\r\n            return 10\r\n        } else if (monthString === 'Dec') {\r\n            return 11\r\n        } else {\r\n            return '??'\r\n        };\r\n    };\r\n\r\n    const parseUTCDataAndTimeString = (utcDateAndTime) => {\r\n        const utcDateAndTimeList = utcDateAndTime.split(' ');\r\n        const localYear = +utcDateAndTimeList[3];\r\n        const localMonth = getMonth(utcDateAndTimeList[2]);\r\n        const localNumber = +utcDateAndTimeList[1];\r\n        const localHour = +utcDateAndTimeList[4].split(':')[0] + localTimezone;\r\n        const localMinute = +utcDateAndTimeList[4].split(':')[1];\r\n        const localSecond = +utcDateAndTimeList[4].split(':')[2];\r\n\r\n        return {\r\n            localYear, \r\n            localMonth, \r\n            localNumber, \r\n            localHour, \r\n            localMinute, \r\n            localSecond\r\n        }\r\n    };\r\n\r\n    const getValidLocalDateAndTime = (\r\n        localYear, \r\n        localMonth, \r\n        localNumber, \r\n        localHour, \r\n        localMinute, \r\n        localSecond\r\n        ) => {//* - Example: \"Mon Dec 27 2021 18:14:41 GMT+0300 (Москва, стандартное время)\".\r\n        const localDateAndTime = new Date(localYear, localMonth, localNumber, localHour, localMinute, localSecond).toString();\r\n        return localDateAndTime\r\n    };\r\n\r\n    const parseLocalDataAndTimeString = (validDateAndTime) => {\r\n        const validDateAndTimeList = validDateAndTime.split(' ');\r\n        const validLocalYear = +validDateAndTimeList[3];\r\n        const validLocalMonth = validDateAndTimeList[1];\r\n        const validLocalNumber = +validDateAndTimeList[2];\r\n        const validLocalHour = +validDateAndTimeList[4].split(':')[0];\r\n        const validLocalMinute = validDateAndTimeList[4].split(':')[1];\r\n        const validLocalSecond = validDateAndTimeList[4].split(':')[2];\r\n\r\n        return {\r\n            validLocalNumber, \r\n            validLocalMonth, \r\n            validLocalYear, \r\n            validLocalHour, \r\n            validLocalMinute, \r\n            validLocalSecond\r\n        }\r\n    };\r\n\r\n    const getLocalDateAndTime = (utcDateAndTime) => { //* - Example: \"Mon, 27 Dec 2021 15:14:41 GMT\".\r\n        const {\r\n            localYear, \r\n            localMonth, \r\n            localNumber, \r\n            localHour, \r\n            localMinute, \r\n            localSecond\r\n        } = parseUTCDataAndTimeString(utcDateAndTime);\r\n\r\n        const validDateAndTime = getValidLocalDateAndTime(localYear, localMonth, localNumber, localHour, localMinute, localSecond);\r\n\r\n        const {\r\n            validLocalNumber, \r\n            validLocalMonth, \r\n            validLocalYear, \r\n            validLocalHour, \r\n            validLocalMinute, \r\n            validLocalSecond\r\n        } = parseLocalDataAndTimeString(validDateAndTime);\r\n\r\n        return `${validLocalNumber} ${validLocalMonth} ${validLocalYear} в ${validLocalHour}:${validLocalMinute}:${validLocalSecond}`\r\n    };\r\n    \r\n    const convertStringLinksToWorkingLinks = (text) => {\r\n        const regExp = /(?:(?:https?|ftp|file):\\/\\/|www\\.|ftp\\.)(?:\\([-A-Z0-9+&@#/%=~_|$?!:,.]*\\)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:\\([-A-Z0-9+&@#/%=~_|$?!:,.]*\\)|[A-Z0-9+&@#/%=~_|$])/i;\r\n        let newText;\r\n        const listWithStringLinks = text.match(regExp);\r\n        if (listWithStringLinks !== null) {\r\n            newText = text.split('\\n').map((textString) => textString.split(' ').map((e) => (regExp.test(e) ? `<a href=${e} target=\"_blank\">${e}</a>` : e)).join(' ')).join('\\n');\r\n        } else {\r\n            newText = text;\r\n        }\r\n\r\n        return newText\r\n    };\r\n    \r\n    const chatListRedForProps = chatListRed.map((item) => (\r\n        <ListItem className={`${classes.chatListItem} ${item.author === myEmail ? classes.chatListItemMe : classes.chatListItemSomebody}`} key={`${item.author} ${item.messageUTCDateAndTime}`}>\r\n            <div className={`${classes.chatListItemMessage} ${item.author === myEmail ? classes.chatListItemMessageMe : `${classes.chatListItemMessageSomebody} ${appThemeSel && appThemeSel.themeNameEn ? (appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_2.nameEn ? classes.chatListItemMessageSomebody_darkTheme : appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_3.nameEn ? classes.chatListItemMessageSomebody_greyTheme : appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_4.nameEn ? classes.chatListItemMessageSomebody_sunnyTheme : null) : null}`}`}>\r\n                <p className={`${classes.chatListItemMessageAuthor} ${isMobileDeviceBoolean ? classes.chatListItemMessageAuthorMobileDevice : null}`}>[{item.author}]:</p>\r\n                {\r\n                    item.imgSrc\r\n                    &&\r\n                    <div className={classes.chatListItemMessageImgWrapper}>\r\n                        <img className={classes.chatListItemMessageImg} src={item.imgSrc} alt='img'></img>\r\n                    </div>\r\n                }\r\n                <p className={`${classes.chatListItemMessageText} ${isMobileDeviceBoolean ? classes.chatListItemMessageTextMobileDevice : null}`} dangerouslySetInnerHTML={{__html: convertStringLinksToWorkingLinks(item.text)}}></p>\r\n                <p className={`${classes.chatListItemMessageDateAndTime} ${isMobileDeviceBoolean ? classes.chatListItemMessageDateAndTimeMobileDevice : null}`}>{item.messageUTCDateAndTime ? getLocalDateAndTime(item.messageUTCDateAndTime) : 'Нет данных'}</p>\r\n            </div>\r\n        </ListItem>\r\n    ));\r\n\r\n    return (\r\n        <ChatListUI classes={classes} chatListRedForProps={chatListRedForProps} refOpenChat={refOpenChat}></ChatListUI>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport { Box, IconButton } from '@material-ui/core';\r\nimport { Send } from '@material-ui/icons';\r\n\r\nexport const ChartFormUI = (props) => {\r\n    return (\r\n        <Box className={props.classes.form} component='form' onSubmit={props.onSubmit}>\r\n            <textarea className={`${props.classes.input} ${props.isMobileDeviceBoolean ? props.classes.input_mobileDevice : null}`} style={{height: (props.inputHeight)}} ref={props.refInput} placeholder=\"Сообщение\" label=\"Сообщение\" type=\"text\" onChange={props.onSaveValueFromInput} value={props.value} />\r\n            {\r\n                props.imgSrcForSendMessage\r\n                &&\r\n                <img className={props.classes.imgInInput} onClick={props.resetAttachPicture} src={props.imgSrcForSendMessage} alt='img'></img>\r\n            }\r\n            <div className={props.classes.imgBtnWrapper}>\r\n                <p className={props.classes.imgBtnText}>&#128206;</p>\r\n                {\r\n                    props.imgError\r\n                    &&\r\n                    <p className={props.classes.imgError} onClick={props.resetAttachPicture}>{props.imgError}</p>\r\n                }\r\n                <input className={props.classes.imgBtn} onChange={props.attachPictures} onClick={props.resetAttachPicture} type=\"file\" ref={props.refImgBtn}></input>\r\n            </div>\r\n            <IconButton type='submit' style={{height: `${props.inputMinHeight}px`, padding: `${(props.inputMinHeight - 24) / 2}px 1vw`, fontSize: '24px'}}>\r\n            <Send />\r\n            </IconButton>\r\n        </Box>\r\n    )\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addMessageInChatListWithThunkAction } from '../../../store/ChatList/Action';\r\nimport { getChatsListChatsKindOfDictSelector } from '../../../store/ChatsList/Selectors';\r\nimport { getChatListMessagesSelector } from '../../../store/ChatList/Selectors';\r\nimport { useStyles } from '../../../styles/Style';\r\nimport { ChartFormUI } from '../../../ui_components/ChatFormUI.jsx';\r\nimport { auth } from '../../../firebase/firebase';\r\nimport { autoEditInputText, getKeyForTheChatByChatId, isMobileDevice } from '../../../helper/helper';\r\n\r\nexport const ChartForm = () => {\r\n  const classes = useStyles();\r\n\r\n  const maxImgSizeForMessage = 1048576;\r\n\r\n  const isMobileDeviceBoolean = isMobileDevice();\r\n\r\n  const inputMinHeight = 32;\r\n  const inputMaxHeight = 90;\r\n\r\n  const [value, setValue] = useState('');\r\n  const [inputHeight, setInputHeight] = useState(inputMinHeight);\r\n  const [imgSrcForSendMessage, setImgSrcForSendMessage] = useState('');\r\n  const [imgError, setImgError] = useState('');\r\n\r\n  const refInput = useRef(null);\r\n  const refImgBtn = useRef(null);\r\n\r\n  const { chatId } = useParams();\r\n\r\n  const chatsListChatsKindOfDictRed = useSelector(getChatsListChatsKindOfDictSelector);\r\n  const openChatKey = getKeyForTheChatByChatId(chatsListChatsKindOfDictRed, chatId);\r\n  const openContact = chatsListChatsKindOfDictRed[openChatKey];\r\n\r\n  const chatListMessagesRed = useSelector(getChatListMessagesSelector);\r\n\r\n  const author = (auth.currentUser !== null ? auth.currentUser.email : null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const resetInputHeight = () => {\r\n    if (refInput) {\r\n      setInputHeight(`${inputMinHeight}px`);\r\n    }\r\n  };\r\n\r\n  const onSaveValueFromInput = (event) => {\r\n    setValue(event.target.value);\r\n\r\n    resetInputHeight();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refInput.current.scrollHeight < inputMaxHeight) {\r\n      setInputHeight(`${refInput.current.scrollHeight}px`);\r\n    } else {\r\n      setInputHeight(`${inputMaxHeight}px`)\r\n    }\r\n  }, [value]);\r\n\r\n  const resetValue = () => {\r\n    setValue('');\r\n\r\n    resetInputHeight();\r\n  };\r\n\r\n  const resetAttachPicture = () => {\r\n    setImgError('');\r\n    setImgSrcForSendMessage('');\r\n    refImgBtn.current.value = '';\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault(); //* Cancel page reload.\r\n    if (value !== '' || imgSrcForSendMessage !== '') {\r\n      const now = new Date();\r\n      const messageUTCDateAndTime = now.toUTCString();\r\n      const newMessage = autoEditInputText(value, classes);\r\n      dispatch(addMessageInChatListWithThunkAction(openChatKey, openContact.name, openContact.id, newMessage, imgSrcForSendMessage, author, messageUTCDateAndTime));\r\n      resetValue();\r\n      resetAttachPicture();\r\n    }\r\n  };\r\n\r\n  const focusOnInput = () => {\r\n    refInput.current.focus();\r\n  };\r\n\r\n  const attachPictures = (event) => {\r\n    const attachImages = event.target.files;\r\n\r\n    if (attachImages.length > 0) {\r\n      const attachImage = attachImages[0];\r\n\r\n      const fileType = attachImage.type.split('/')[0];\r\n\r\n      if (fileType === 'image' && attachImage.size <= maxImgSizeForMessage) {\r\n        const fileReader = new FileReader();\r\n\r\n        fileReader.onload = (e) => {\r\n          const imgSrc = e.target.result;\r\n  \r\n          setImgSrcForSendMessage(imgSrc);\r\n        }\r\n  \r\n        fileReader.readAsDataURL(attachImage);\r\n      } else {\r\n        resetAttachPicture();\r\n\r\n        if (fileType !== 'image') {\r\n          setImgError('Только картинки!');\r\n        }\r\n\r\n        if (attachImage.size > maxImgSizeForMessage) {\r\n          setImgError(`Не более ${maxImgSizeForMessage / 1024 / 1024}Мб.\\nТекущий размер: ${(attachImage.size / 1024 / 1024).toFixed(2)}Мб.`);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    focusOnInput();\r\n  }, [chatListMessagesRed]); \r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setImgSrcForSendMessage('');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ChartFormUI classes={classes} onSubmit={onSubmit} refInput={refInput} onSaveValueFromInput={onSaveValueFromInput} value={value} inputHeight={inputHeight} inputMinHeight={inputMinHeight} isMobileDeviceBoolean={isMobileDeviceBoolean} attachPictures={attachPictures} imgSrcForSendMessage={imgSrcForSendMessage} resetAttachPicture={resetAttachPicture} refImgBtn={refImgBtn} imgError={imgError}></ChartFormUI>\r\n  )\r\n};\r\n","import React from 'react';\r\n\r\nexport const ChatControlPanelUI = (props) => {\r\n    return (\r\n        <div className={props.classes.chatControlPanel}>\r\n            <div className={`${props.classes.chatControlPanelLeftPart} ${props.isMobileDeviceBoolean ? props.classes.chatControlPanelLeftPart_mobileDevice : null}`}>\r\n                {\r\n                    (\r\n                        props.openContact.chatIsPrivate \r\n                        && \r\n                        props.openContact.chatIsPrivate === true\r\n                    ) \r\n                    ? \r\n                    <div className={props.classes.chatControlPanelIconsWrapper}>\r\n                        <span className={props.classes.chatControlPanelIcon}>\r\n                            {\r\n                                Object.values(props.openContact.theyCanReadThisChat).find((itemUID) => itemUID === props.myUID) \r\n                                ? \r\n                                <span className={props.classes.chatControlPanelIPrivatChatIcon}>&#128273;</span>\r\n                                : \r\n                                <span className={props.classes.chatControlPanelIPrivatChatIcon}>&#128274;</span>\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    : \r\n                    null\r\n                }\r\n                <p className={`${props.classes.chatControlPanelName} ${props.isMobileDeviceBoolean ? props.classes.chatControlPanelName_mobileDevice : null}`}>{props.openContact.name}</p>\r\n            </div>\r\n            <div className={props.classes.chatControlPanelRightPart}>\r\n                {\r\n                    (\r\n                        props.myUID !== null \r\n                        && \r\n                        props.openContact.chatAuthor === props.myUID\r\n                    )\r\n                    ? \r\n                    <>\r\n                        <div className={props.classes.chatControlPanelMenu}>\r\n                            <button className={`${props.classes.chatControlPanelBtn} ${props.isMobileDeviceBoolean ? props.classes.chatControlPanelBtn_mobileDevice : null}`} onClick={props.openPopUpWindow}>&#128465;</button>\r\n                        </div>\r\n                        <div className={props.classes.chatControlPanelMenu}>\r\n                            <button className={`${props.classes.chatControlPanelBtn} ${props.isMobileDeviceBoolean ? props.classes.chatControlPanelBtn_mobileDevice : null} ${props.classes.chatControlPanelBtn__changeChatPassword}`} onClick={props.openPopUpWindowForChangeChatPassword}>&#9998;</button>\r\n                        </div>\r\n                    </>\r\n                    : \r\n                    null\r\n                }\r\n                <button className={`${props.classes.chatControlPanelBtn} ${props.isMobileDeviceBoolean ? props.classes.chatControlPanelBtn_mobileDevice : null}`} onClick={props.changeChatStatusAsFavorite}>\r\n                    {\r\n                        (\r\n                            props.openContact.theyLikeThisChat \r\n                            && \r\n                            props.openContact.theyLikeThisChat[props.myUID]\r\n                        )\r\n                        ? \r\n                        <span>&#9733;</span>\r\n                        : \r\n                        <span>&#9734;</span>\r\n                    }\r\n                </button>\r\n                <button className={`${props.classes.chatControlPanelBtn} ${props.isMobileDeviceBoolean ? props.classes.chatControlPanelBtn_mobileDevice : null}`} onClick={props.closeChat}>&#10060;</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport const PopUpWindowUI = (props) => {\r\n    return (\r\n        <div className={`${props.classes.popUpWindow} ${props.isMobileDeviceBoolean ? props.classes.popUpWindow_mobileDevice : null}`}>\r\n            <p className={`${props.classes.popUpWindowQuestion} ${props.isMobileDeviceBoolean ? props.classes.popUpWindowQuestion_mobileDevice : null}`}>Удалить безвозвратно чат \"{props.openContact.name}\" со всеми сообщениями?</p>\r\n            <div className={props.classes.popUpWindowAction}>\r\n                <button className={`${props.classes.popUpWindowBtn} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.popUpWindowBtn_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.popUpWindowBtn_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.popUpWindowBtn_sunnyTheme : null) : null} ${props.isMobileDeviceBoolean ? props.classes.popUpWindowBtn_mobileDevice : null}`} onClick={props.deleteChat}>Удалить</button>\r\n                <button className={`${props.classes.popUpWindowBtn} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.popUpWindowBtn_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.popUpWindowBtn_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.popUpWindowBtn_sunnyTheme : null) : null} ${props.isMobileDeviceBoolean ? props.classes.popUpWindowBtn_mobileDevice : null}`} onClick={props.closePopUpWindow}>Отмена</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport const PopUpWindowForChangeChatPasswordUI = (props) => {\r\n    return (\r\n        <div className={`${props.classes.popUpWindow} ${props.isMobileDeviceBoolean ? props.classes.popUpWindow_mobileDevice : null}`}>\r\n            <p className={`${props.classes.popUpWindowQuestion} ${props.isMobileDeviceBoolean ? props.classes.popUpWindowQuestion_mobileDevice : null}`}>Установить пароль для чата?{props.chatPassword ? ` Внимание! Всем пользователям этого чата придется вводить пароль заново. Прежний пароль: ${props.chatPassword}` : null}</p>\r\n            <input className={`${props.classes.popUpWindowInput} ${props.classes.popUpWindowForChangeChatPasswor_input} ${props.isMobileDeviceBoolean ? props.classes.popUpWindowForChangeChatPasswor_input_mobileDevice : null}`} inputref={props.refInput} placeholder=\"Пароль\" label=\"Пароль\" type=\"text\" onChange={props.onSavePasswordValueFromInput} value={props.passwordValue} />\r\n            {\r\n                props.errorPassword \r\n                ? \r\n                <div className={props.classes.popUpWindowForChangeChatPasswor_errorWrapper}>\r\n                    <p className={props.classes.popUpWindowForChangeChatPasswor_errorText}>{props.errorPassword}</p>\r\n                </div>\r\n                : \r\n                null\r\n            }\r\n            <div className={props.classes.popUpWindowAction}>\r\n                <button className={`${props.classes.popUpWindowBtn} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.popUpWindowBtn_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.popUpWindowBtn_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.popUpWindowBtn_sunnyTheme : null) : null} ${props.isMobileDeviceBoolean ? props.classes.popUpWindowBtn_mobileDevice : null}`} onClick={props.changeChatPassword}>Установить</button>\r\n                <button className={`${props.classes.popUpWindowBtn} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.popUpWindowBtn_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.popUpWindowBtn_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.popUpWindowBtn_sunnyTheme : null) : null} ${props.isMobileDeviceBoolean ? props.classes.popUpWindowBtn_mobileDevice : null}`} onClick={props.closePopUpWindowForChangeChatPassword}>Отмена</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useStyles } from '../../../styles/Style';\r\nimport { getChatsListChatsKindOfDictSelector } from '../../../store/ChatsList/Selectors';\r\nimport { getKeyForTheChatByChatId, isMobileDevice } from '../../../helper/helper';\r\nimport { ChatControlPanelUI } from '../../../ui_components/ChatControlPanelUI';\r\nimport { allAppComponentsWithPageTitle, APP_THEMES_NAMES } from '../../../data/consts';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { addTheUserWhoLikesThisChatWithThunkAction, changeChatPasswordWithThunkAction, deleteSecretIntoAboutDeletedChatWithThunkAction, deleteTheUserWhoDoesNotLikeThisChatWithThunkAction, makeTheChatPrivateWithThunkAction, makeTheChatPublicWithThunkAction, removeFromChatsListWithThunkAction } from '../../../store/ChatsList/Action';\r\nimport { removeAllMessagesInDeleteChatWithThunkAction } from '../../../store/ChatList/Action';\r\nimport { PopUpWindowUI } from '../../../ui_components/PopUpWindowUI';\r\nimport { auth, chatAccessRef } from '../../../firebase/firebase';\r\nimport { PopUpWindowForChangeChatPasswordUI } from '../../../ui_components/PopUpWindowForChangeChatPasswordUI';\r\nimport { getStatusesInTheAppappThemeIsSelector } from '../../../store/AppSwitches/Selectors';\r\n\r\nexport const ChatControlPanel = () => {\r\n    const classes = useStyles();\r\n\r\n    const [popUpWindowIsOpen, setPopUpWindowIsOpen] = useState(false);\r\n    const [popUpWindowForChangeChatPasswordIsOpen, setPopUpWindowForChangeChatPasswordIsOpen] = useState(false);\r\n    const [passwordValue, setPasswordValue] = useState('');\r\n    const [errorPassword, setErrorPassword] = useState(false);\r\n    const [chatPassword, setChatPassword] = useState(false);\r\n\r\n    const isMobileDeviceBoolean = isMobileDevice();\r\n\r\n    const {push} = useHistory();\r\n\r\n    const { chatId } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const refInput = useRef(null);\r\n\r\n    const appThemeSel = useSelector(getStatusesInTheAppappThemeIsSelector);\r\n    \r\n    const chatsListChatsKindOfDictRed = useSelector(getChatsListChatsKindOfDictSelector);\r\n    const openChatKey = getKeyForTheChatByChatId(chatsListChatsKindOfDictRed, chatId);\r\n    const openContact = chatsListChatsKindOfDictRed[openChatKey];\r\n    const myUID = auth.currentUser !== null ? auth.currentUser.uid : null;\r\n\r\n    const openPopUpWindow = () => {\r\n        setPopUpWindowIsOpen(true);\r\n    };\r\n\r\n    const closePopUpWindow = () => {\r\n        setPopUpWindowIsOpen(false);\r\n    };\r\n\r\n    const openPopUpWindowForChangeChatPassword = () => {\r\n        setErrorPassword(false);\r\n        setPasswordValue('');\r\n\r\n        chatAccessRef.get().then((snapshot) => {\r\n            if (snapshot.exists()) {\r\n                setChatPassword(snapshot.val()[chatId] && snapshot.val()[chatId].chatPassword ? snapshot.val()[chatId].chatPassword : null);\r\n            }\r\n        });\r\n\r\n        setPopUpWindowForChangeChatPasswordIsOpen(true);\r\n    };\r\n\r\n    const closePopUpWindowForChangeChatPassword = () => {\r\n        setChatPassword(false);\r\n        setPopUpWindowForChangeChatPasswordIsOpen(false);\r\n    };\r\n\r\n    const deleteChat = () => {\r\n        dispatch(removeFromChatsListWithThunkAction(openChatKey));\r\n        dispatch(removeAllMessagesInDeleteChatWithThunkAction(openChatKey));\r\n        dispatch(deleteSecretIntoAboutDeletedChatWithThunkAction(openContact.id));\r\n        push(allAppComponentsWithPageTitle.messenger.path);\r\n    };\r\n\r\n    const closeChat = () => {\r\n        push(allAppComponentsWithPageTitle.messenger.path);\r\n    };\r\n\r\n    const onSavePasswordValueFromInput = (event) => {\r\n        setErrorPassword(false);\r\n        setPasswordValue(event.target.value);\r\n    };\r\n\r\n    const newPasswordIsNot = (newPassword) => {\r\n        if (newPassword === '') {\r\n            return true\r\n        }\r\n\r\n        return false\r\n    };\r\n\r\n    const validLengthOfTheNewPassword = (newPassword) => {\r\n        const minLengthPassword = 4;\r\n        const maxLengthPassword = 20;\r\n\r\n        if (newPassword.length >= minLengthPassword && newPassword.length <= maxLengthPassword) {\r\n            return true\r\n        }\r\n\r\n        setErrorPassword(`Допустимая длина от ${minLengthPassword} до ${maxLengthPassword} символов`)\r\n        return false\r\n    };\r\n\r\n    const validCharactersInTheNewPassword = (newPassword) => {\r\n        const regExp = /^[0-9a-zа-яё_(),.[\\]{}\\-!@#$%^&+=?;:]+$/i;\r\n        if (regExp.test(newPassword)) {\r\n            return true\r\n        }\r\n    \r\n        setErrorPassword('Только \"цифры, буквы, скобки, !, @, #, $, %, ^, &, _, -, +, =, ?, ;, :, . и ,\"');\r\n        return false\r\n    };\r\n\r\n    const changeChatPassword = () => {\r\n        const chatIsPublic = newPasswordIsNot(passwordValue);\r\n        const validLength = validLengthOfTheNewPassword(passwordValue);\r\n        const validCharacters = validCharactersInTheNewPassword(passwordValue);\r\n\r\n        if (chatIsPublic || (validLength && validCharacters)) {\r\n            dispatch(changeChatPasswordWithThunkAction(openChatKey, openContact.id, passwordValue, myUID));\r\n            if (chatIsPublic) {\r\n                dispatch(makeTheChatPublicWithThunkAction(openChatKey));\r\n            } else {\r\n                dispatch(makeTheChatPrivateWithThunkAction(openChatKey));\r\n            }\r\n            closePopUpWindowForChangeChatPassword();\r\n        }\r\n    };\r\n\r\n    const changeChatStatusAsFavorite = () => {\r\n        if (openContact.theyLikeThisChat && openContact.theyLikeThisChat[myUID]) {\r\n            dispatch(deleteTheUserWhoDoesNotLikeThisChatWithThunkAction(openChatKey, myUID));\r\n        } else {\r\n            dispatch(addTheUserWhoLikesThisChatWithThunkAction(openChatKey, myUID));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPopUpWindowIsOpen(false);\r\n        setPopUpWindowForChangeChatPasswordIsOpen(false);\r\n        setErrorPassword(false);\r\n        setPasswordValue('');\r\n        setChatPassword(false);\r\n    }, [chatId]);\r\n\r\n    return (\r\n        <>\r\n            <ChatControlPanelUI classes={classes} isMobileDeviceBoolean={isMobileDeviceBoolean} closeChat={closeChat} openPopUpWindow={openPopUpWindow} openContact={openContact} myUID={myUID} openPopUpWindowForChangeChatPassword={openPopUpWindowForChangeChatPassword} changeChatStatusAsFavorite={changeChatStatusAsFavorite}></ChatControlPanelUI>\r\n            {popUpWindowIsOpen ? <PopUpWindowUI classes={classes} isMobileDeviceBoolean={isMobileDeviceBoolean} deleteChat={deleteChat} closePopUpWindow={closePopUpWindow} openContact={openContact} appThemeSel={appThemeSel} APP_THEMES_NAMES={APP_THEMES_NAMES}></PopUpWindowUI> : null}\r\n            {popUpWindowForChangeChatPasswordIsOpen ? <PopUpWindowForChangeChatPasswordUI classes={classes} isMobileDeviceBoolean={isMobileDeviceBoolean} closePopUpWindowForChangeChatPassword={closePopUpWindowForChangeChatPassword} openContact={openContact} refInput={refInput} onSavePasswordValueFromInput={onSavePasswordValueFromInput} changeChatPassword={changeChatPassword} chatPassword={chatPassword} errorPassword={errorPassword} appThemeSel={appThemeSel} APP_THEMES_NAMES={APP_THEMES_NAMES}></PopUpWindowForChangeChatPasswordUI> : null}\r\n        </>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport const YouAreDeniedAccessToTheChatUI = (props) => {\r\n    return (\r\n        <div className={props.classes.youAreDeniedAccessToTheChat_field}>\r\n            <div className={props.classes.youAreDeniedAccessToTheChat_wrapper}>\r\n                <div className={props.classes.youAreDeniedAccessToTheChat_wrapperInfo}>\r\n                    <p className={`${props.classes.youAreDeniedAccessToTheChat_textInfo} ${props.classes.youAreDeniedAccessToTheChat_textInfo__first} ${props.classes.popUpWindowQuestion} ${props.isMobileDeviceBoolean ? props.classes.popUpWindowQuestion_mobileDevice : null}`}>Это приватный чат!</p>\r\n                    <p className={`${props.classes.youAreDeniedAccessToTheChat_textInfo} ${props.classes.popUpWindowQuestion} ${props.isMobileDeviceBoolean ? props.classes.popUpWindowQuestion_mobileDevice : null}`}>Введите пароль:</p>\r\n                </div>\r\n                <input className={`${props.classes.youAreDeniedAccessToTheChat_input} ${props.isMobileDeviceBoolean ? props.classes.youAreDeniedAccessToTheChat_wrapper_input_mobileDevice : null}`} inputref={props.refInput} placeholder=\"Пароль\" label=\"Пароль\" type=\"text\" onChange={props.onSavePasswordValueFromInput} value={props.passwordValue} />\r\n                {\r\n                    props.error\r\n                    ? \r\n                    <div className={props.classes.youAreDeniedAccessToTheChat_errorWrapper}>\r\n                        <p className={props.classes.youAreDeniedAccessToTheChat_errorText}>{props.error}</p>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n                <div className={props.classes.popUpWindowAction}>\r\n                    <button className={`${props.classes.youAreDeniedAccessToTheChat_btn} ${props.classes.popUpWindowBtn} ${props.isMobileDeviceBoolean ? props.classes.popUpWindowBtn_mobileDevice : null}`} onClick={props.registerToChat}>Ввести пароль</button>\r\n                    <button className={`${props.classes.youAreDeniedAccessToTheChat_btn} ${props.classes.popUpWindowBtn} ${props.isMobileDeviceBoolean ? props.classes.popUpWindowBtn_mobileDevice : null}`} onClick={props.resetPasswordInInput}>Сбросить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { auth, chatAccessRef } from '../../../firebase/firebase';\r\nimport { isMobileDevice, getKeyForTheChatByChatId } from '../../../helper/helper';\r\nimport { addUserIntoChatWithThunkAction } from '../../../store/ChatsList/Action';\r\nimport { getChatsListChatsKindOfDictSelector } from '../../../store/ChatsList/Selectors';\r\nimport { useStyles } from '../../../styles/Style';\r\nimport { YouAreDeniedAccessToTheChatUI } from '../../../ui_components/YouAreDeniedAccessToTheChatUI';\r\n\r\nexport const YouAreDeniedAccessToTheChat = () => {\r\n    const classes = useStyles();\r\n\r\n    const [passwordValue, setPasswordValue] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n    const { chatId } = useParams();\r\n\r\n    const refInput = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const isMobileDeviceBoolean = isMobileDevice();\r\n    \r\n    const chatsListChatsKindOfDictRed = useSelector(getChatsListChatsKindOfDictSelector);\r\n    const openChatKey = getKeyForTheChatByChatId(chatsListChatsKindOfDictRed, chatId);\r\n    const myUID = auth.currentUser !== null ? auth.currentUser.uid : null;\r\n\r\n    const resetPasswordInInput = () => {\r\n        setError(false);\r\n        setPasswordValue('');\r\n    };\r\n\r\n    const onSavePasswordValueFromInput = (event) => {\r\n        setError(false);\r\n        setPasswordValue(event.target.value);\r\n    };\r\n\r\n    const registerToChat = () => {\r\n        chatAccessRef.get().then((snapshot) => {\r\n            if (snapshot.exists()) {\r\n                if (snapshot.val()[chatId] && snapshot.val()[chatId].chatPassword) {\r\n                    if (passwordValue === snapshot.val()[chatId].chatPassword) {\r\n                        dispatch(addUserIntoChatWithThunkAction(openChatKey, chatId, myUID));\r\n                    } else {\r\n                        setError('Неверный пароль');\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPasswordValue('');\r\n    }, [chatId]);\r\n\r\n    return (\r\n        <YouAreDeniedAccessToTheChatUI classes={classes} onSavePasswordValueFromInput={onSavePasswordValueFromInput} refInput={refInput} passwordValue={passwordValue} registerToChat={registerToChat} error={error} resetPasswordInInput={resetPasswordInInput} isMobileDeviceBoolean={isMobileDeviceBoolean}></YouAreDeniedAccessToTheChatUI>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport { ChatList } from '../routes/Chat/ChatList/ChatList';\r\nimport { ChartForm } from '../routes/Chat/ChatForm/ChatForm';\r\nimport { Box } from '@material-ui/core';\r\nimport { ChatControlPanel } from '../routes/Chat/ChatControlPanel/ChatControlPanel';\r\nimport { YouAreDeniedAccessToTheChat } from '../routes/Chat/YouAreDeniedAccessToTheChat/YouAreDeniedAccessToTheChat';\r\n\r\nexport const ChatUI = (props) => {\r\n    return (\r\n        <Box className={`${props.classes.chat} ${props.isMobileDeviceBoolean ? props.classes.chatMobileDevice : null} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.chat_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.chat_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.chat_sunnyTheme : null) : null}`}>\r\n            <div className={props.classes.chatUpPart}>\r\n                <ChatControlPanel></ChatControlPanel>\r\n            </div>\r\n            <div className={props.classes.chatDownPart}>\r\n                {\r\n                    (\r\n                        !props.privateChat \r\n                        || \r\n                        props.canIReadThisChatBoolean\r\n                    ) \r\n                    ? \r\n                    <>\r\n                        <ChatList></ChatList>\r\n                        <ChartForm></ChartForm>\r\n                    </>\r\n                    : \r\n                    <YouAreDeniedAccessToTheChat></YouAreDeniedAccessToTheChat>\r\n                }\r\n            </div>\r\n        </Box>\r\n    )\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getChatsListChatsKindOfDictSelector, getChatsListChatsKindOfListSelector } from '../../store/ChatsList/Selectors';\r\nimport { useStyles } from '../../styles/Style';\r\nimport { ChatUI } from '../../ui_components/ChatUI.jsx';\r\nimport { allAppComponentsWithPageTitle, APP_THEMES_NAMES } from '../../data/consts';\r\nimport { bigChatClose, bigChatOpen } from '../../store/BigChatStatus/Action';\r\nimport { getKeyForTheChatByChatId, isMobileDevice } from '../../helper/helper';\r\nimport { aquariumStatus } from '../../store/AppSwitches/Action';\r\nimport { auth } from '../../firebase/firebase';\r\nimport { getStatusesInTheAppappThemeIsSelector } from '../../store/AppSwitches/Selectors';\r\n\r\nexport const Chat = () => {\r\n    const classes = useStyles();\r\n\r\n    const isMobileDeviceBoolean = isMobileDevice();\r\n\r\n    const { chatId } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const appThemeSel = useSelector(getStatusesInTheAppappThemeIsSelector);\r\n\r\n    const chatsListChatsKindOfDictRed = useSelector(getChatsListChatsKindOfDictSelector);\r\n    const openChatKey = getKeyForTheChatByChatId(chatsListChatsKindOfDictRed, chatId);\r\n    const openContact = chatsListChatsKindOfDictRed[openChatKey];\r\n    const privateChat = (openContact && openContact.chatIsPrivate === true) ? true : false;\r\n    const myUID = auth.currentUser !== null ? auth.currentUser.uid : null;\r\n    const canIReadThisChatBoolean = openContact && (!openContact.theyCanReadThisChat || (openContact.chatAuthor && openContact.chatAuthor === myUID) || (openContact.theyCanReadThisChat && Object.values(openContact.theyCanReadThisChat).find((usersUID) => usersUID === myUID))) ? true : false;\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: aquariumStatus.type,\r\n            payload: false,\r\n        });\r\n\r\n        dispatch({\r\n            type: bigChatOpen.type,\r\n            payload: chatId,\r\n        });\r\n        return () => {\r\n            dispatch({\r\n                type: bigChatClose.type,\r\n            });\r\n        };\r\n    }, [dispatch, chatId]);\r\n\r\n    const chatsListRed = useSelector(getChatsListChatsKindOfListSelector);\r\n\r\n    if (!(chatsListRed.find((item) => String(item.id) === chatId))) {\r\n        return (\r\n            <Redirect to={allAppComponentsWithPageTitle.error404.path}></Redirect>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <ChatUI classes={classes} isMobileDeviceBoolean={isMobileDeviceBoolean} privateChat={privateChat} canIReadThisChatBoolean={canIReadThisChatBoolean} appThemeSel={appThemeSel} APP_THEMES_NAMES={APP_THEMES_NAMES}></ChatUI>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div>\r\n            <h1>Ошибка 404</h1>\r\n            <h2>Упс! Что-то пошло не так!</h2>\r\n            <h4>Страница не найдена.</h4>\r\n        </div>\r\n    )\r\n};\r\n","const initialState = {\r\n    isError: false,\r\n    isLoading: false,\r\n    data: [],\r\n};\r\n\r\nexport const usersApiFactory = (dataName, apiUrl) => {\r\n    //* action:\r\n    const actionTypes = {\r\n        SET_ERROS: `SET_ERROR_${dataName}`,\r\n        SET_LOADING: `SET_LOADING${dataName}`,\r\n        SET_DATA: `SET_DATA${dataName}`,\r\n    };\r\n\r\n    const actions = {\r\n        setError: (status) => ({\r\n            type: actionTypes.SET_ERROS,\r\n            payload: status,\r\n        }),\r\n        setLoading: (status) => ({\r\n            type: actionTypes.SET_LOADING,\r\n            payload: status,\r\n        }),\r\n        setData: (users) => ({\r\n            type: actionTypes.SET_DATA,\r\n            payload: users,\r\n        }),\r\n    };\r\n\r\n    actions.getDataWithThunk = async (dispatch) => {\r\n        dispatch(actions.setLoading(true));\r\n        dispatch(actions.setError(false));\r\n        dispatch(actions.setData([]));\r\n\r\n        try {\r\n            const response = await fetch(apiUrl);\r\n            if (!response.ok) {\r\n                throw new Error('Ошибка запроса данных по API!');\r\n            }\r\n            const result = await response.json();\r\n            dispatch(actions.setData(result));\r\n        } catch (err) {\r\n            console.error(err);\r\n            dispatch(actions.setError(true));\r\n        } finally {\r\n            dispatch(actions.setLoading(false));\r\n        };\r\n    }\r\n\r\n    //* reducer:\r\n    const reducer = (state = initialState, action) => {\r\n        switch(action.type) {\r\n            case actionTypes.SET_LOADING: {\r\n                return {\r\n                    ...state, isLoading: action.payload\r\n                }\r\n            }\r\n            case actionTypes.SET_ERROS: {\r\n                return {\r\n                    ...state, isError: action.payload\r\n                }\r\n            }\r\n            case actionTypes.SET_DATA: {\r\n                return {\r\n                    ...state, data: action.payload\r\n                }\r\n            }\r\n            default: {\r\n                return state\r\n            }\r\n        }\r\n    };\r\n\r\n    //* selectors:\r\n    const getRootSelector = (state) => state[dataName];\r\n    const getDataSelector = (state) => getRootSelector(state).data;\r\n    const getLoadingSelector = (state) => getRootSelector(state).isLoading;\r\n    const getErrorSelector = (state) => getRootSelector(state).isError;\r\n\r\n    return {\r\n        actionTypes,\r\n        actions,\r\n        reducer,\r\n        selectors: {\r\n            getFromStore: getRootSelector,\r\n            getData: getDataSelector,\r\n            getLoading: getLoadingSelector,\r\n            getError: getErrorSelector,\r\n        }\r\n    }\r\n}\r\n","import { usersApiFactory } from \"./AcRedSelFactory\";\r\n\r\nexport const newUsers = usersApiFactory('USERS', 'https://jsonplaceholder.typicode.com/users');\r\n","import React from 'react';\r\n\r\nexport const ApiUsersUI = (props) => {\r\n    return (\r\n        <div>\r\n            <h1 className={props.classes.api_users__title}>Юзеры по API</h1>\r\n            <button className={props.classes.api_users__btn} onClick={props.getData}>Перезагрузить</button>\r\n            {props.dataForProps}\r\n            {props.isLoadingForProps}\r\n            {props.isErrorForProps}\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport const UsersLoaderUI = (props) => {\r\n    return (\r\n        <div className={props.classes.users_loader__field}>\r\n            <div className={props.classes.users_loader__center}>\r\n                <h2 className={props.classes.users_loader__text}>Загрузка данных...</h2>\r\n                <img className={`${props.classes.users_loader__img} ${props.ismobileDeviceProps ? props.classes.users_loader__img__mobile_device : null}`} src={props.preloader} alt='preloader' width='200px' />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","export default __webpack_public_path__ + \"static/media/preloader.c8a899c0.gif\";","import React from 'react';\r\nimport { useStyles } from '../../../styles/Style.js';\r\nimport { UsersLoaderUI } from '../../../ui_components/UsersLoaderUI.jsx';\r\nimport preloader from '../../../img/preloader.gif';\r\n\r\nexport const UsersLoader = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <UsersLoaderUI classes={classes} preloader={preloader} ismobileDeviceProps={props.ismobileDeviceProps}></UsersLoaderUI>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport const UsersErrorUI = (props) => {\r\n    return (\r\n        <div className={props.classes.users_error__field}>\r\n            <div className={props.classes.users_error__wrapper_text}>\r\n                <h1 className={props.classes.users_error__text}>Упс, данные не найдены!</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport { useStyles } from '../../../styles/Style.js';\r\nimport { UsersErrorUI } from '../../../ui_components/UsersErrorUI.jsx';\r\n\r\nexport const UsersError = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <UsersErrorUI classes={classes}></UsersErrorUI>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport const UsersListUI = (props) => {\r\n    return (\r\n        <div className={props.classes.users_list__wrapper}>\r\n            <ul className={`${props.classes.users_list__items} ${props.screenHeightLessThan450 ? props.classes.users_list__items__screen_height_less_than_450 : null}`}>{props.dataUI}</ul>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { newUsers } from '../../../store/ApiUsers/NewUsersApi.js';\r\nimport { useStyles } from '../../../styles/Style.js';\r\nimport { UsersListUI } from '../../../ui_components/UsersListUI.jsx';\r\n\r\nexport const UsersList = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const data = useSelector(newUsers.selectors.getData);\r\n    const dataUI = data.map((item) => (\r\n        <li className={classes.users_list__item} key={item.id}>\r\n            <p className={`${classes.users_list__name} ${props.ismobileDeviceProps ? classes.users_list__name__mobile_device : null}`}>{item.name}</p>\r\n            <p className={`${classes.users_list__additionally} ${props.ismobileDeviceProps ? classes.users_list__additionally__mobile_device : null}`}>\r\n                <span className={classes.users_list__phone}>Телефон: {item.phone}</span>\r\n                <span className={classes.users_list__delimiter}> - </span>\r\n                <span className={classes.users_list__email}>Email: {item.email}</span>\r\n            </p>\r\n        </li>\r\n    ));\r\n\r\n    return (\r\n        <UsersListUI classes={classes} dataUI={dataUI} screenHeightLessThan450={props.screenHeightLessThan450}></UsersListUI>\r\n    )\r\n};\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useStyles } from '../../styles/Style';\r\nimport { newUsers } from '../../store/ApiUsers/NewUsersApi';\r\nimport { ApiUsersUI } from '../../ui_components/ApiUsersUI.jsx';\r\nimport { UsersLoader } from './UsersLoader/UsersLoader';\r\nimport { UsersError } from './UsersError/UsersError';\r\nimport { UsersList } from './UsersList/UsersList';\r\nimport { isMobileDevice, screenHeightLessThan } from '../../helper/helper';\r\n\r\nexport const ApiUsers = () => {\r\n    const classes = useStyles();\r\n\r\n    const isError = useSelector(newUsers.selectors.getError);\r\n    const isLoading = useSelector(newUsers.selectors.getLoading);\r\n    const data = useSelector(newUsers.selectors.getData);\r\n    const dispatch = useDispatch();\r\n    const ismobileDeviceProps = isMobileDevice();\r\n    const screenHeightLessThan450 = screenHeightLessThan(450);\r\n\r\n    const isLoadingForProps = isLoading ? <UsersLoader ismobileDeviceProps={ismobileDeviceProps} /> : null;\r\n    const isErrorForProps = isError ? <UsersError /> : null;\r\n    const dataForProps = (!isLoading && data.length > 0) ? <UsersList ismobileDeviceProps={ismobileDeviceProps} screenHeightLessThan450={screenHeightLessThan450} /> : null;\r\n\r\n    const getData = useCallback(() => {\r\n        dispatch(newUsers.actions.getDataWithThunk);\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [getData]);\r\n\r\n    return (\r\n        <ApiUsersUI classes={classes} getData={getData} dataForProps={dataForProps} isLoadingForProps={isLoadingForProps} isErrorForProps={isErrorForProps}></ApiUsersUI>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport const SignupUI = (props) => {\r\n    return (\r\n        <div className={props.classes.SigLogWrapper}>\r\n            <div className={props.classes.SigLogField}>\r\n                {props.iAmGoingToSignup}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { allAppComponentsWithPageTitle, startValueForTimer } from '../../data/consts';\r\nimport { auth } from '../../firebase/firebase';\r\nimport { functionsForMocks } from '../../helper/forMocks/functions';\r\nimport { useStyles } from '../../styles/Style';\r\nimport { SignupUI } from '../../ui_components/SignupUI';\r\nimport preloader from '../../img/preloader.gif';\r\nimport { Link } from 'react-router-dom';\r\nimport { countdownForLetterRequestWithLink, isMobileDevice, requestTheLetter, userVerificationWaiting } from '../../helper/helper';\r\nimport { useAutomaticStartOfTheCountdownTimer, useUserVerificationWaiting } from '../../hooks/hooks';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getStatusesInTheAppCountdownForLetterRequestIsNumberSelector, getStatusesInTheAppIsEmailVerificationConfirmationWaitingSelector } from '../../store/AppSwitches/Selectors';\r\nimport { emailVerificationConfirmationWaitingIsFalse, emailVerificationConfirmationWaitingIsTrue, lastAuthorization } from '../../store/AppSwitches/Action';\r\n\r\nexport const Signup = () => {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [infoMessage, setInfoMessage] = useState(\"\");\r\n\r\n  const isMobileDeviceBoolean = isMobileDevice();\r\n\r\n  const dispatch = useDispatch();\r\n  const verificationWaitingBoolean = useSelector(getStatusesInTheAppIsEmailVerificationConfirmationWaitingSelector);\r\n  const timeLeftBeforeRequesting = useSelector(getStatusesInTheAppCountdownForLetterRequestIsNumberSelector);\r\n\r\n  const userLanguage = (\r\n    window.navigator ? (\r\n      window.navigator.languages[window.navigator.languages.length - 1] //* - for Chrome, FireFox, Safari.\r\n      || window.navigator.languages[2] //* - for Chrome, FireFox, Safari.\r\n      || window.navigator.languages[1] //* - for Chrome, FireFox, Safari.\r\n      || window.navigator.language //* - for Chrome, FireFox, Safari (the same as \"window.navigator.languages[0]\").\r\n      || window.navigator.systemLanguage \r\n      || window.navigator.userLanguage //* - for IE.\r\n    ) : \"en\").substr(0, 2).toLowerCase();\r\n\r\n  const myEmail = (email ? email : (auth.currentUser !== null ? auth.currentUser.email : null));\r\n\r\n  const {push} = useHistory();\r\n\r\n  const handlePassChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setInfoMessage('');\r\n\r\n    const now = new Date().getTime();\r\n    dispatch({\r\n      type: lastAuthorization.type,\r\n      payload: now,\r\n    });\r\n\r\n    try {\r\n      await functionsForMocks.registration(email, password);\r\n      dispatch({\r\n        type: emailVerificationConfirmationWaitingIsTrue.type,\r\n      });\r\n      auth.languageCode = userLanguage;\r\n\r\n      countdownForLetterRequestWithLink(dispatch, startValueForTimer);\r\n\r\n      const text = await requestTheLetter(myEmail);\r\n      if (text) {\r\n        setInfoMessage(text);\r\n      }\r\n\r\n      const isLoading = userVerificationWaiting(verificationWaitingBoolean, push);\r\n      const waiting = (isLoading && isLoading.waiting ? isLoading.waiting : null);\r\n      if (isLoading && isLoading.clear) {\r\n        isLoading.clear();\r\n      }\r\n      \r\n      if (waiting === false) {\r\n        dispatch({\r\n          type: emailVerificationConfirmationWaitingIsFalse.type,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const logoutUser = async () => {\r\n    auth.signOut();\r\n    dispatch({\r\n      type: emailVerificationConfirmationWaitingIsFalse.type,\r\n    });\r\n  };\r\n\r\n  const changeInfoMessage = async () => {\r\n    setError('');\r\n    setInfoMessage('');\r\n\r\n    countdownForLetterRequestWithLink(dispatch, startValueForTimer);\r\n\r\n    try {\r\n      const text = await requestTheLetter(myEmail);\r\n      if (text) {\r\n        setInfoMessage(text);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  useUserVerificationWaiting(verificationWaitingBoolean, push);\r\n  useAutomaticStartOfTheCountdownTimer();\r\n\r\n  const iAmGoingToSignup = (\r\n    verificationWaitingBoolean \r\n    ? \r\n    <div className={classes.SigLogActionWaiting}>\r\n      <h1 className={classes.SigLogTitle}>Верификация</h1>\r\n      <p className={classes.SigLogActionWaitingText}>Ожидание подтверждения электронной почты{infoMessage ? null : (myEmail ? ' ' + myEmail : null)}</p>\r\n      <img className={classes.SigLogActionPreloader} src={preloader} alt='preloader' width='5vw' />\r\n      {\r\n        infoMessage \r\n        && \r\n        <p className={classes.SigLogActionWaitingText}>{infoMessage}</p>\r\n      }\r\n      {\r\n        error \r\n        && \r\n        <div className={classes.SigLogActionErrorArea}>\r\n            <p className={classes.SigLogActionErrorText}>{error}</p>\r\n        </div>\r\n      }\r\n      <div className={classes.SigLogActionButtons}>\r\n        {\r\n          timeLeftBeforeRequesting === 0 || timeLeftBeforeRequesting === null || timeLeftBeforeRequesting === startValueForTimer\r\n          ? \r\n          <button className={classes.SigLogActionBtn} type=\"submit\" onClick={changeInfoMessage}>Запросить письмо</button>\r\n          : \r\n          <p className={`${classes.SigLogActionWaitingText} ${classes.SigLogActionWaitingText_countdown}`}>Запросить письмо: {timeLeftBeforeRequesting}с</p>\r\n        }\r\n        <button className={classes.SigLogActionBtn} type=\"submit\" onClick={logoutUser}>Выход</button>\r\n      </div>\r\n    </div>\r\n    : \r\n    <form className={classes.SigLogForm} onSubmit={handleSubmit}>\r\n      <h1 className={classes.SigLogTitle}>Регистрация</h1>\r\n      <p className={classes.SigLogDescription}>Заполните форму для регистрации. На указанный адрес будет отправлено письмо для подтверждения электронной почты!</p>\r\n      <div className={`${classes.SigLogEmailArea} ${classes.SigLogArea}`}>\r\n          <input\r\n          className={`${classes.SigLogEmailInput} ${classes.SigLogInput} ${isMobileDeviceBoolean ? classes.SigLogInputMobileDevice : null}`}\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          onChange={handleEmailChange}\r\n          value={email}\r\n          data-testid=\"idEmail\"\r\n          />\r\n      </div>\r\n      <div className={`${classes.SigLogPasswordArea} ${classes.SigLogArea}`}>\r\n          <input\r\n          className={`${classes.SigLogPasswordInput} ${classes.SigLogInput} ${isMobileDeviceBoolean ? classes.SigLogInputMobileDevice : null}`}\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          onChange={handlePassChange}\r\n          value={password}\r\n          data-testid=\"idPassword\"\r\n          />\r\n      </div>\r\n      <div className={`${classes.SigLogActionArea} ${classes.SigLogArea}`}>\r\n          {\r\n            error && !verificationWaitingBoolean \r\n            && \r\n            <div className={classes.SigLogActionErrorArea}>\r\n              <p className={classes.SigLogActionErrorText} data-testid=\"idError\">{error}</p>\r\n            </div>\r\n          }\r\n          <button className={classes.SigLogActionBtn} type=\"submit\" data-testid=\"idBtnSubmit\">Зарегистрироваться</button>\r\n      </div>\r\n      <p className={classes.SigLogInfoDescription}>\r\n          <span className={classes.SigLogInfoText}>Уже есть аккаунт? </span>\r\n          <Link className={classes.SigLogInfoLink} to={allAppComponentsWithPageTitle.login.path}>Войти</Link>\r\n      </p>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <SignupUI classes={classes} iAmGoingToSignup={iAmGoingToSignup}></SignupUI>\r\n  )\r\n};\r\n","import React from 'react';\r\n\r\nexport const LoginUI = (props) => {\r\n    return (\r\n        <div className={props.classes.SigLogWrapper}>\r\n            <div className={props.classes.SigLogField}>\r\n                {props.iAmGoingToSignup}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { allAppComponentsWithPageTitle, startValueForTimer } from '../../data/consts';\r\nimport { functionsForMocks } from '../../helper/forMocks/functions';\r\nimport { useStyles } from '../../styles/Style';\r\nimport { LoginUI } from '../../ui_components/LoginUI';\r\nimport preloader from '../../img/preloader.gif';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../firebase/firebase';\r\nimport { countdownForLetterRequestWithLink, instantUserVerificationChecking, isMobileDevice, requestTheLetter } from '../../helper/helper';\r\nimport { useAutomaticStartOfTheCountdownTimer, useUserVerificationWaiting } from '../../hooks/hooks';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { emailVerificationConfirmationWaitingIsFalse, emailVerificationConfirmationWaitingIsTrue, lastAuthorization } from '../../store/AppSwitches/Action';\r\nimport { getStatusesInTheAppCountdownForLetterRequestIsNumberSelector, getStatusesInTheAppIsEmailVerificationConfirmationWaitingSelector } from '../../store/AppSwitches/Selectors';\r\n\r\nexport const Login = () => {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [infoMessage, setInfoMessage] = useState(\"\");\r\n\r\n  const isMobileDeviceBoolean = isMobileDevice();\r\n\r\n  const dispatch = useDispatch();\r\n  const verificationWaitingBoolean = useSelector(getStatusesInTheAppIsEmailVerificationConfirmationWaitingSelector);\r\n  const timeLeftBeforeRequesting = useSelector(getStatusesInTheAppCountdownForLetterRequestIsNumberSelector);\r\n\r\n  const myEmail = (email ? email : (auth.currentUser !== null ? auth.currentUser.email : null));\r\n\r\n  const {push} = useHistory();\r\n\r\n  const handlePassChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setInfoMessage('');\r\n\r\n    const now = new Date().getTime();\r\n    dispatch({\r\n      type: lastAuthorization.type,\r\n      payload: now,\r\n    });\r\n\r\n    try {\r\n      await functionsForMocks.login(email, password);\r\n      dispatch({\r\n        type: emailVerificationConfirmationWaitingIsTrue.type,\r\n      });\r\n\r\n      const isLoading = instantUserVerificationChecking(verificationWaitingBoolean, push);\r\n      if (isLoading === true) {\r\n        dispatch({\r\n          type: emailVerificationConfirmationWaitingIsTrue.type,\r\n        });\r\n      } else if (isLoading === false) {\r\n        dispatch({\r\n          type: emailVerificationConfirmationWaitingIsFalse.type,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const logoutUser = async () => {\r\n    auth.signOut();\r\n    dispatch({\r\n      type: emailVerificationConfirmationWaitingIsFalse.type,\r\n    });\r\n  };\r\n\r\n  const changeInfoMessage = async () => {\r\n    setError('');\r\n    setInfoMessage('');\r\n\r\n    countdownForLetterRequestWithLink(dispatch, startValueForTimer);\r\n\r\n    try {\r\n      const text = await requestTheLetter(myEmail);\r\n      if (text) {\r\n        setInfoMessage(text);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  useUserVerificationWaiting(verificationWaitingBoolean, push);\r\n  useAutomaticStartOfTheCountdownTimer();\r\n\r\n  const iAmGoingToSignup = (\r\n    verificationWaitingBoolean \r\n    ? \r\n    <div className={classes.SigLogActionWaiting}>\r\n      <h1 className={classes.SigLogTitle}>Верификация</h1>\r\n      <p className={classes.SigLogActionWaitingText}>Ожидание подтверждения электронной почты{infoMessage ? null : (myEmail ? ' ' + myEmail : null)}</p>\r\n      <img className={classes.SigLogActionPreloader} src={preloader} alt='preloader' width='5vw' />\r\n      {\r\n        infoMessage \r\n        && \r\n        <p className={classes.SigLogActionWaitingText}>{infoMessage}</p>\r\n      }\r\n      {\r\n        error \r\n        && \r\n        <div className={classes.SigLogActionErrorArea}>\r\n            <p className={classes.SigLogActionErrorText}>{error}</p>\r\n        </div>\r\n      }\r\n      <div className={classes.SigLogActionButtons}>\r\n        {\r\n          timeLeftBeforeRequesting === 0 || timeLeftBeforeRequesting === null || timeLeftBeforeRequesting === startValueForTimer\r\n          ? \r\n          <button className={classes.SigLogActionBtn} type=\"submit\" onClick={changeInfoMessage}>Запросить письмо</button>\r\n          : \r\n          <p className={`${classes.SigLogActionWaitingText} ${classes.SigLogActionWaitingText_countdown}`}>Запросить письмо: {timeLeftBeforeRequesting}с</p>\r\n        }\r\n        <button className={classes.SigLogActionBtn} type=\"submit\" onClick={logoutUser}>Выход</button>\r\n      </div>\r\n    </div>\r\n    : \r\n    <form className={classes.SigLogForm} onSubmit={handleSubmit}>\r\n      <h1 className={classes.SigLogTitle}>Вход</h1>\r\n      <p className={classes.SigLogDescription}>Заполните форму для входа в свою учетную запись.</p>\r\n      <div className={`${classes.SigLogEmailArea} ${classes.SigLogArea}`}>\r\n          <input\r\n          className={`${classes.SigLogEmailInput} ${classes.SigLogInput} ${isMobileDeviceBoolean ? classes.SigLogInputMobileDevice : null}`}\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          onChange={handleEmailChange}\r\n          value={email}\r\n          data-testid=\"idEmailLogin\"\r\n          />\r\n      </div>\r\n      <div className={`${classes.SigLogPasswordArea} ${classes.SigLogArea}`}>\r\n          <input\r\n          className={`${classes.SigLogPasswordInput} ${classes.SigLogInput} ${isMobileDeviceBoolean ? classes.SigLogInputMobileDevice : null}`}\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          onChange={handlePassChange}\r\n          value={password}\r\n          data-testid=\"idPasswordLogin\"\r\n          />\r\n      </div>\r\n      <div className={`${classes.SigLogActionArea} ${classes.SigLogArea}`}>\r\n          {\r\n            error && !verificationWaitingBoolean\r\n            && \r\n            <div className={classes.SigLogActionErrorArea}>\r\n              <p className={classes.SigLogActionErrorText} data-testid=\"idErrorLogin\">{error}</p>\r\n            </div>\r\n          }\r\n          <button className={classes.SigLogActionBtn} type=\"submit\" data-testid=\"idBtnSubmitLogin\">Войти</button>\r\n      </div>\r\n      <p className={classes.SigLogInfoDescription}>\r\n          <span className={classes.SigLogInfoText}>Нет аккаунта? </span>\r\n          <Link className={classes.SigLogInfoLink} to={allAppComponentsWithPageTitle.signup.path}>Регистрация</Link>\r\n      </p>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <LoginUI classes={classes} iAmGoingToSignup={iAmGoingToSignup}></LoginUI>\r\n  )\r\n};\r\n","import { toggleCheckedProfile } from './Action';\r\n\r\nconst initialState = {\r\n    checked: false,\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case toggleCheckedProfile.type: {\r\n            return {\r\n                ...state,\r\n                checked: !state.checked,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n","import { CHANGE_MESSAGES_LIST, DROP_MESSAGES_IN_STATE } from './Action';\r\n\r\nconst initialState = {\r\n    messages: {},\r\n};\r\n\r\nexport const chatListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case CHANGE_MESSAGES_LIST: {\r\n            return {\r\n                messages: {\r\n                    [action.payload.openChatKey]: action.payload.snapshotVal\r\n                }\r\n            }\r\n        }\r\n        case DROP_MESSAGES_IN_STATE: {\r\n            return {\r\n                messages: {}\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n","import { CHANGE_CHATS_LIST, DROP_CHATS_LIST_IN_STATE } from './Action';\r\nimport { CHAT_LIST  } from '../../data/chat list';\r\n\r\nexport const initialState = CHAT_LIST;\r\n\r\nexport const chatsListReducer = (state = initialState, action) => {\r\n    switch(action?.type) {\r\n        case CHANGE_CHATS_LIST: {\r\n            return {\r\n                ...state,\r\n                chats: action.payload,\r\n            }\r\n        }\r\n        case DROP_CHATS_LIST_IN_STATE: {\r\n            return {\r\n                chats: {}\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n","// export const CHAT_LIST = [\r\n//     {\r\n//         id: '@vasya111',\r\n//         name: 'Василий',\r\n//     },\r\n//     {\r\n//         id: '@pet_ersov',\r\n//         name: 'Пётр',\r\n//     },\r\n//     {\r\n//         id: '@alex_123',\r\n//         name: 'Александр',\r\n//     },\r\n//     {\r\n//         id: '@seriy',\r\n//         name: 'Сергей',\r\n//     },\r\n//     {\r\n//         id: '@dima2',\r\n//         name: 'Дмитрий',\r\n//     },\r\n// ];\r\n\r\nexport const CHAT_LIST = {\r\n    chats: {},\r\n};\r\n","import { closeMobileMenuStatus, toggleMobileMenuStatus } from './Action';\r\n\r\nconst initialState = {\r\n    isMobileMenuOpen: false,\r\n};\r\n\r\nexport const mobileMenuReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case toggleMobileMenuStatus.type: {\r\n            return {\r\n                ...state,\r\n                isMobileMenuOpen: !state.isMobileMenuOpen,\r\n            }\r\n        }\r\n        case closeMobileMenuStatus.type: {\r\n            return {\r\n                ...state,\r\n                isMobileMenuOpen: false,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n","import { bigChatClose, bigChatOpen } from './Action';\r\n\r\nconst initialState = {\r\n    isBigChatOpen: false,\r\n};\r\n\r\nexport const bigChatReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case bigChatOpen.type: {\r\n            return {\r\n                ...state,\r\n                isBigChatOpen: action.payload,\r\n            }\r\n        }\r\n        case bigChatClose.type: {\r\n            return {\r\n                ...state,\r\n                isBigChatOpen: false,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n","import { \r\n    appTheme,\r\n    aquariumStatus,\r\n    chatsCount,\r\n    countdownForLetterRequest, \r\n    deviceOnTheNetworkAction, \r\n    emailVerificationConfirmationWaitingIsFalse, \r\n    emailVerificationConfirmationWaitingIsTrue, \r\n    eventForPWAInstallation, \r\n    isStrictSearchAction, \r\n    lastAuthorization,\r\n    onlySelectedChats,\r\n    valueInChatsListInput\r\n} from './Action';\r\n\r\nconst initialState = {};\r\n\r\nexport const statusesInTheAppReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case emailVerificationConfirmationWaitingIsTrue.type: {\r\n            return {\r\n                ...state, \r\n                isEmailVerificationConfirmationWaiting: true,\r\n            }\r\n        }\r\n        case emailVerificationConfirmationWaitingIsFalse.type: {\r\n            return {\r\n                ...state, \r\n                isEmailVerificationConfirmationWaiting: false,\r\n            }\r\n        }\r\n        case countdownForLetterRequest.type: {\r\n            return {\r\n                ...state, \r\n                countdownForLetterRequestIsNumber: action.payload,\r\n            }\r\n        }\r\n        case lastAuthorization.type: {\r\n            return {\r\n                ...state,\r\n                lastAuthorizationDateAndTime: action.payload,\r\n            }\r\n        }\r\n        case valueInChatsListInput.type: {\r\n            return {\r\n                ...state,\r\n                valueInChatsListInputIs: action.payload,\r\n            }\r\n        }\r\n        case aquariumStatus.type: {\r\n            return {\r\n                ...state,\r\n                isAquariumOpen: action.payload,\r\n            }\r\n        }\r\n        case appTheme.type: {\r\n            return {\r\n                ...state,\r\n                appThemeIs: action.payload,\r\n            }\r\n        }\r\n        case onlySelectedChats.type: {\r\n            return {\r\n                ...state,\r\n                onlySelectedChatsBoolean: action.payload,\r\n            }\r\n        }\r\n        case chatsCount.type: {\r\n            return {\r\n                ...state,\r\n                chatsCountSelected: action.payload,\r\n            }\r\n        }\r\n        case eventForPWAInstallation.type: {\r\n            return {\r\n                ...state,\r\n                eventForPWAInstallationCase: action.payload,\r\n            }\r\n        }\r\n        case deviceOnTheNetworkAction.type: {\r\n            return {\r\n                ...state,\r\n                deviceOnTheNetworkCase: action.payload,\r\n            }\r\n        }\r\n        case isStrictSearchAction.type: {\r\n            return {\r\n                ...state,\r\n                isStrictSearchCase: action.payload,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { profileReducer } from './Profile/Reducer';\r\nimport { chatListReducer } from './ChatList/Reducer';\r\nimport { chatsListReducer } from './ChatsList/Reducer';\r\nimport { newUsers } from './ApiUsers/NewUsersApi';\r\nimport { mobileMenuReducer } from './MobileMenuStatus/Reducer';\r\nimport { bigChatReducer } from './BigChatStatus/Reducer';\r\nimport { statusesInTheAppReducer } from './AppSwitches/Reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    chatListReducer: chatListReducer,\r\n    chatsListReducer: chatsListReducer,\r\n    USERS: newUsers.reducer,\r\n    mobileMenu: mobileMenuReducer,\r\n    bigChat: bigChatReducer,\r\n    statusesInTheApp: statusesInTheAppReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    blacklist: ['chatListReducer'] //* - This blacklist lists, in quotes as strings, reducers that should not be stored in the browser's \"local store\" because it has a size limit of about 5Mb.\r\n};\r\n\r\nconst persistedReduser = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(\r\n    persistedReduser, \r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { allAppComponentsWithPageTitle } from \"../data/consts\";\r\n\r\nexport const PrivateRoute = ({ authenticated, ...rest }) => {\r\n    return (\r\n        (\r\n            authenticated\r\n        ) ? (\r\n            <Route {...rest} />\r\n        ) : (\r\n            <Redirect to={allAppComponentsWithPageTitle.login.path} />\r\n        )\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { allAppComponentsWithPageTitle } from \"../data/consts\";\r\n\r\nexport const PublicRoute = ({ authenticated, ...rest }) => {\r\n    return (\r\n        (\r\n            !authenticated\r\n        ) ? (\r\n            <Route {...rest} />\r\n        ) : (\r\n            <Redirect to={allAppComponentsWithPageTitle.messenger.path} />\r\n        )\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport const PreloaderUI = (props) => {\r\n    return (\r\n        <div className={props.classes.preloader__field}>\r\n            <div className={props.classes.preloader__center}>\r\n                <h1 className={props.classes.preloader__title}>Загрузка сайта...</h1>\r\n                <h2 className={props.classes.preloader__description}>Это может занять некоторое время</h2>\r\n                <img className={props.classes.users_loader__img} src={props.preloader} alt='preloader' width='200px' />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport { PreloaderUI } from '../ui_components/PreloaderUI.jsx';\r\nimport preloader from '../img/preloader.gif';\r\nimport { useStyles } from '../styles/Style';\r\n\r\nexport const Preloader = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <PreloaderUI classes={classes} preloader={preloader}></PreloaderUI>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport const AquariumUI = (props) => {\r\n    return (\r\n        props.isMobileDeviceBoolean && !props.isAquariumStatus \r\n        ?\r\n        null \r\n        : \r\n        <div className={`${props.classes.aquarium} ${props.isAquariumStatus ? props.classes.aquariumIsOpen : props.classes.aquariumIsClose} ${props.isMobileDeviceBoolean ? props.classes.aquarium_mobileDevice : null} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_2.nameEn ? props.classes.aquariumIsOpen_darkTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.aquariumIsOpen_greyTheme : props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_4.nameEn ? props.classes.aquariumIsOpen_sunnyTheme : null) : null}`} ref={props.refAquariumField} onClick={props.changeAquariumStatus}>\r\n            {\r\n                props.isAquariumStatus \r\n                ? \r\n                <div className={props.classes.aquariumField}>\r\n                    {\r\n                        props.isPreloader \r\n                        ? \r\n                        <div className={props.classes.universalPreloaderCenter}>\r\n                            <img className={props.classes.universalPreloaderImg} src={props.preloader} alt='Загрузка...' width={`${props.preloaderDimensions}px`}></img>\r\n                        </div>\r\n                        : \r\n                        <img className={`${props.classes.aquariumFish} ${props.appThemeSel && props.appThemeSel.themeNameEn ? (props.appThemeSel.themeNameEn === props.APP_THEMES_NAMES.theme_3.nameEn ? props.classes.aquariumFish_greyTheme : null) : null}`} style={{ top: `${props.moveOy}%`, left: `${props.moveOx}%`, transition: `top ${props.fishDuration}s ${props.fishTimingFunction} ${props.fishDelay}s, left ${props.fishDuration}s ${props.fishTimingFunction} ${props.fishDelay}s, transform 0s linear ${props.fishDelay}s`, transform: `rotateY(${props.rotateImg}deg) rotateZ(12deg)` }} src={props.goldFish} alt='Рыбка' width={`${props.fishWidth}%`}></img>\r\n                    }\r\n                </div>\r\n                : \r\n                null\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","export default __webpack_public_path__ + \"static/media/goldFish.a1f598ff.gif\";","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBigChatIsOpenSelector } from '../../../store/BigChatStatus/Selectors';\r\nimport { useStyles } from '../../../styles/Style';\r\nimport { AquariumUI } from '../../../ui_components/AquariumUI';\r\nimport goldFish from '../../../img/fish/goldFish.gif';\r\nimport preloader from '../../../img/preloader.gif';\r\nimport { getElementHeight, getElementWidth, isMobileDevice } from '../../../helper/helper';\r\nimport { getStatusesInTheAppappThemeIsSelector, getStatusesInTheAppIsAquariumOpenSelector } from '../../../store/AppSwitches/Selectors';\r\nimport { aquariumStatus } from '../../../store/AppSwitches/Action';\r\nimport { APP_THEMES_NAMES } from '../../../data/consts';\r\n\r\nexport const Aquarium = () => {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const refAquariumField = useRef(null);\r\n\r\n    const transitionTimingFunctionRef = useRef(['ease', 'ease-out', 'ease-in-out']);\r\n    const fishWidthRef = useRef(15 + Math.floor(Math.random() * 11));\r\n    const moveOxBeginRef = useRef(Math.floor(Math.random() * (100 - fishWidthRef.current)));\r\n\r\n    const [isPreloader, setIsPreloader] = useState(false);\r\n    const [preloaderDimensions, setPreloaderDimensions] = useState(25);\r\n    const [moveOx, setMoveOx] = useState(moveOxBeginRef.current);\r\n    const [moveOy, setMoveOy] = useState(0);\r\n    const [rotateImg, setRotateImg] = useState(0);\r\n    const [fishDuration, setFishDuration] = useState(3 + Math.floor(Math.random() * 10));\r\n    const [fishTimingFunction, setFishTimingFunction] = useState(transitionTimingFunctionRef.current[Math.floor(Math.random() * transitionTimingFunctionRef.current.length)]);\r\n    const [fishDelay, setFishDelay] = useState(1 + Math.floor(Math.random() * 2));\r\n\r\n    const isBigChatOpen = useSelector(getBigChatIsOpenSelector);\r\n    const isAquariumStatus = useSelector(getStatusesInTheAppIsAquariumOpenSelector);\r\n    const appThemeSel = useSelector(getStatusesInTheAppappThemeIsSelector);\r\n\r\n    const isMobileDeviceBoolean = isMobileDevice();\r\n\r\n    const changeAquariumStatus = () => {\r\n        dispatch({\r\n            type: aquariumStatus.type,\r\n            payload: !isAquariumStatus,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isMobileDeviceBoolean) {\r\n            dispatch({\r\n                type: aquariumStatus.type,\r\n                payload: false,\r\n            });\r\n        }\r\n    }, [dispatch, isMobileDeviceBoolean]);\r\n\r\n    useEffect(() => {\r\n        if (isAquariumStatus && !isBigChatOpen) {\r\n            const getPreloaderDimensions = () => {\r\n                const AquariumFieldWidth = getElementWidth(refAquariumField);\r\n                const AquariumFieldHeight = getElementHeight(refAquariumField);\r\n                if (AquariumFieldHeight > AquariumFieldWidth) {\r\n                    setPreloaderDimensions(AquariumFieldWidth * 0.3);\r\n                } else {\r\n                    setPreloaderDimensions(AquariumFieldHeight * 0.3);\r\n                }\r\n            };\r\n    \r\n            const openPreloader = () => {\r\n                getPreloaderDimensions();\r\n                setIsPreloader(true);\r\n            };\r\n    \r\n            openPreloader();\r\n    \r\n            //* Метод addEventListener() присоединяет обработчик события к определенному DOM-элементу:\r\n            if (window.addEventListener) { //* - для всех основных браузеров.\r\n                window.addEventListener('resize', openPreloader);\r\n            } else if (window.attachEvent) { //* - для IE 8 и более ранних версий, а также Opera 6.0 и более ранних версий.\r\n                window.attachEvent('resize', openPreloader);\r\n            }\r\n    \r\n            const fishHeight = fishWidthRef.current / 1.38;\r\n    \r\n            let intervalId;\r\n            const timerId = setTimeout(() => {\r\n                let moveOxLast = moveOxBeginRef.current;\r\n    \r\n                const fishMoving = () => {\r\n                    const AquariumFieldWidth = getElementWidth(refAquariumField);\r\n                    const AquariumFieldHeight = getElementHeight(refAquariumField);\r\n                    const ratioOfWidthToHeight = AquariumFieldWidth / AquariumFieldHeight;\r\n    \r\n                    let moveOxNext = Math.floor(Math.random() * (100 - fishWidthRef.current));\r\n                    setMoveOx(moveOxNext);\r\n                    setMoveOy(Math.floor(Math.random() * (100 - fishHeight * ratioOfWidthToHeight - 1)));\r\n                    if (moveOxNext > moveOxLast) {\r\n                        setRotateImg(0)\r\n                    } else if (moveOxNext < moveOxLast) {\r\n                        setRotateImg(180)\r\n                    }\r\n                    setFishDuration(3 + Math.floor(Math.random() * 10));\r\n                    setFishTimingFunction(transitionTimingFunctionRef.current[Math.floor(Math.random() * transitionTimingFunctionRef.current.length)]);\r\n                    setFishDelay(1 + Math.floor(Math.random() * 2));\r\n    \r\n                    moveOxLast = moveOxNext;\r\n    \r\n                    setIsPreloader(false);\r\n                };\r\n        \r\n                fishMoving();\r\n        \r\n                intervalId = setInterval(() => {\r\n                    fishMoving();\r\n                }, 10000);\r\n            }, 3000);\r\n    \r\n            return () => {\r\n                clearInterval(intervalId)\r\n                clearTimeout(timerId)\r\n                if (window.removeEventListener) {\r\n                    window.removeEventListener('resize', openPreloader)\r\n                }\r\n                if (window.detachEvent) {\r\n                    window.detachEvent('resize', openPreloader)\r\n                }\r\n            }\r\n        }\r\n    }, [isAquariumStatus, isBigChatOpen]);\r\n\r\n    return (\r\n        isBigChatOpen ? null : <AquariumUI classes={classes} goldFish={goldFish} moveOx={moveOx} moveOy={moveOy} rotateImg={rotateImg} fishDuration={fishDuration} fishTimingFunction={fishTimingFunction} fishDelay={fishDelay} fishWidth={fishWidthRef.current} refAquariumField={refAquariumField} isAquariumStatus={isAquariumStatus} changeAquariumStatus={changeAquariumStatus} isMobileDeviceBoolean={isMobileDeviceBoolean} isPreloader={isPreloader} preloader={preloader} preloaderDimensions={preloaderDimensions} appThemeSel={appThemeSel} APP_THEMES_NAMES={APP_THEMES_NAMES}></AquariumUI>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport const StartingScreensaverUI = () => {\r\n    return (\r\n        <div style={{height: '100vh', width: '100vw', display: 'flex', alignItems: 'center', backgroundColor: '#ccccff'}}>\r\n            <div style={{width: '80vw', margin: '20px auto'}}>\r\n                <h1 style={{margin: '0 0 25px', textAlign: 'center', color: '#4b44b4'}}>&#8497;i&#769;r&#949;ss &#8499;&#949;ss&#949;ng&#949;r</h1>\r\n                <h2 style={{margin: '0 0 25px', textAlign: 'center', color: '#111111'}}>Подключение к сайту</h2>\r\n                <h3 style={{textAlign: 'center', color: '#444444', margin: '0'}}>Это может занять некоторое время</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport { StartingScreensaverUI } from '../../ui_components/StartingScreensaverUI';\r\n\r\nexport const StartingScreensaver = () => {\r\n    return (\r\n        <StartingScreensaverUI></StartingScreensaverUI>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\nexport const DeviceOnTheNetworkUI = (props) => {\r\n    return (\r\n        <div className={props.classes.deviceOnTheNetwork__wrapper} title={props.deviceOnTheNetworkSel ? 'В сети' : 'Не в сети'}>\r\n            <div className={`${props.classes.deviceOnTheNetwork__lamp} ${props.deviceOnTheNetworkSel ? props.classes.deviceOnTheNetwork__lamp_connectNetwork_1 : props.classes.deviceOnTheNetwork__lamp_disconnectNetwork}`}></div>\r\n            <div className={`${props.classes.deviceOnTheNetwork__lamp} ${props.deviceOnTheNetworkSel ? props.classes.deviceOnTheNetwork__lamp_connectNetwork_2 : props.classes.deviceOnTheNetwork__lamp_disconnectNetwork}`}></div>\r\n            <div className={`${props.classes.deviceOnTheNetwork__lamp} ${props.deviceOnTheNetworkSel ? props.classes.deviceOnTheNetwork__lamp_connectNetwork_3 : props.classes.deviceOnTheNetwork__lamp_disconnectNetwork}`}></div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getAppSwitchesDeviceOnTheNetworkSelector } from '../../store/AppSwitches/Selectors';\r\nimport { useStyles } from '../../styles/Style';\r\nimport { DeviceOnTheNetworkUI } from '../../ui_components/DeviceOnTheNetworkUI';\r\n\r\nexport const DeviceOnTheNetwork = () => {\r\n    const classes = useStyles();\r\n\r\n    const deviceOnTheNetworkSel = useSelector(getAppSwitchesDeviceOnTheNetworkSelector);\r\n\r\n    return (\r\n        <DeviceOnTheNetworkUI classes={classes} deviceOnTheNetworkSel={deviceOnTheNetworkSel}></DeviceOnTheNetworkUI>\r\n    )\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useLocation } from \"react-router\";\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Header } from './routes/Header/Header';\r\nimport { Home } from './routes/Home/Home';\r\nimport { Profile } from './routes/Profile/Profile';\r\nimport { ChatsList } from './routes/ChatsList/ChatsList';\r\nimport { Chat } from './routes/Chat/Chat';\r\nimport { Error404 } from './routes/Error404/Error404';\r\nimport { ApiUsers } from './routes/ApiUsers/ApiUsers';\r\nimport { Signup } from './routes/Signup/Signup';\r\nimport { Login } from './routes/Login/Login';\r\nimport { persistor } from './store/Store';\r\nimport { PrivateRoute } from './hocs/PrivateRoute';\r\nimport { PublicRoute } from './hocs/PublicRoute';\r\nimport { Box } from '@material-ui/core';\r\nimport { Preloader } from './components/Preloader';\r\nimport { allAppComponentsWithPageTitle, appThemesSchedule, APP_THEMES_NAMES } from './data/consts';\r\nimport { allowedPeriodInsideTheApp, getPageTitle, giveTitleForPage, isMobileDevice, makeFullPageTitle } from './helper/helper';\r\nimport { useChangeEmailVerificationStatus, useWindowDimensions } from './hooks/hooks';\r\nimport { getMobileMenuIsOpenSelector } from './store/MobileMenuStatus/Selectors';\r\nimport { bigChatClose } from './store/BigChatStatus/Action';\r\nimport { useStyles } from './styles/Style';\r\nimport { getStatusesInTheAppappThemeIsSelector, getStatusesInTheAppIsAquariumOpenSelector, getStatusesInTheAppLastAuthorizationDateAndTimeSelector } from './store/AppSwitches/Selectors';\r\nimport { auth, connectedRef } from './firebase/firebase';\r\nimport { Aquarium } from './routes/ChatsList/Aquarium/Aquarium';\r\nimport { getBigChatIsOpenSelector } from '../src/store/BigChatStatus/Selectors';\r\nimport { appTheme, deviceOnTheNetworkAction, eventForPWAInstallation } from './store/AppSwitches/Action';\r\nimport { styleConsts } from './styles/StyleConsts';\r\nimport { StartingScreensaver } from './routes/StartingScreensaver/StartingScreensaver';\r\nimport { DeviceOnTheNetwork } from './routes/DeviceOnTheNetwork/DeviceOnTheNetwork';\r\n\r\nexport const App = () => {\r\n  const classes = useStyles();\r\n\r\n  useWindowDimensions();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const location = useLocation();\r\n\r\n  const pageTitle = getPageTitle(location);\r\n  const fullPageTitle = makeFullPageTitle(pageTitle);\r\n  giveTitleForPage(fullPageTitle);\r\n\r\n  const [booleanForChangeTheme, setBooleanForChangeTheme] = useState(false);\r\n\r\n  const isMobileDeviceBoolean = isMobileDevice();\r\n  const mobileMenuOpen = useSelector(getMobileMenuIsOpenSelector);\r\n  const lastAuthorizationDateAndTime = useSelector(getStatusesInTheAppLastAuthorizationDateAndTimeSelector)\r\n  const isAquariumStatus = useSelector(getStatusesInTheAppIsAquariumOpenSelector);\r\n  const isBigChatOpen = useSelector(getBigChatIsOpenSelector);\r\n  const appThemeSel = useSelector(getStatusesInTheAppappThemeIsSelector);\r\n\r\n  const emailVerificationStatus = useChangeEmailVerificationStatus(location);\r\n\r\n  const getTimeBeforeThemeChanging = (themeStartAt, timeLocal) => {\r\n    if (themeStartAt < timeLocal) {\r\n      return (24 * 60 * 60 * 1000 - (timeLocal - themeStartAt))\r\n    } else {\r\n      return (themeStartAt - timeLocal)\r\n    }\r\n  };\r\n\r\n  const changeThemeInApp = useCallback(() => {\r\n    const newDate = new Date();\r\n\r\n    const hourLocal = newDate.getHours();\r\n    const minuteLocal = newDate.getMinutes();\r\n    const secondLocal = newDate.getSeconds();\r\n    const millisecundLocal = newDate.getMilliseconds();\r\n\r\n    const timeLocal = hourLocal * 60 * 60 * 1000 + minuteLocal * 60 * 1000 + secondLocal * 1000 + millisecundLocal;\r\n\r\n    const appThemesScheduleSort = appThemesSchedule.sort((a, b) => +a.themeStartAt > +b.themeStartAt ? 1 : -1);\r\n\r\n    const appThemesWere = appThemesScheduleSort.filter((theme) => +theme.themeStartAt <= timeLocal);\r\n    const appThemesWill = appThemesScheduleSort.filter((theme) => +theme.themeStartAt > timeLocal);\r\n\r\n    const appThemeNow = (\r\n      appThemesWere.length === 0 \r\n      ? \r\n      appThemesScheduleSort[appThemesScheduleSort.length - 1] \r\n      : \r\n      appThemesWere[appThemesWere.length - 1]\r\n    ) \r\n\r\n    const meta = document.querySelector('meta[name=theme-color]');\r\n\r\n    if (appThemeNow.themeNameEn === APP_THEMES_NAMES.theme_1.nameEn) {\r\n      meta.setAttribute(\"content\", styleConsts.backgroundColor.mainColor1);\r\n    } else if (appThemeNow.themeNameEn === APP_THEMES_NAMES.theme_2.nameEn) {\r\n      meta.setAttribute(\"content\", styleConsts.backgroundColor.mainColor1DarkTheme);\r\n    } else if (appThemeNow.themeNameEn === APP_THEMES_NAMES.theme_3.nameEn) {\r\n      meta.setAttribute(\"content\", styleConsts.backgroundColor.mainColor1GreyTheme);\r\n    } else if (appThemeNow.themeNameEn === APP_THEMES_NAMES.theme_4.nameEn) {\r\n      meta.setAttribute(\"content\", styleConsts.backgroundColor.mainColor1SunnyTheme);\r\n    }\r\n\r\n    dispatch({\r\n      type: appTheme.type,\r\n      payload: appThemeNow,\r\n    });\r\n\r\n    const appThemeNext = (\r\n      appThemesWill.length === 0 \r\n      ? \r\n      appThemesScheduleSort[0] \r\n      : \r\n      appThemesWill[0]\r\n    ) \r\n\r\n    const timeUntilNextThemeChanging = getTimeBeforeThemeChanging(appThemeNext.themeStartAt, timeLocal);\r\n\r\n    const timerId = setTimeout(() => {\r\n      setBooleanForChangeTheme(booleanForChangeTheme => !booleanForChangeTheme);\r\n\r\n      return clearTimeout(timerId)\r\n      }, timeUntilNextThemeChanging);\r\n  }, [dispatch]);\r\n\r\n  //* The listener function will fire if the application can be installed on the desktop:\r\n  useEffect(() => {\r\n    const saveEventForfurtherPWAInstallation = (e) => {\r\n      //* Prevent the mini-infobar from appearing on mobile:\r\n      e.preventDefault();\r\n      //* 1. Stash the event so it can be triggered later; 2. update UI notify the user they can install the PWA:\r\n      dispatch({\r\n        type: eventForPWAInstallation.type,\r\n        payload: e,\r\n      });\r\n    };\r\n\r\n    if (window.addEventListener) {\r\n      window.addEventListener('beforeinstallprompt', saveEventForfurtherPWAInstallation);\r\n      return () => window.removeEventListener('beforeinstallprompt', saveEventForfurtherPWAInstallation);\r\n    } else if (window.attachEvent) {\r\n      window.attachEvent('beforeinstallprompt', saveEventForfurtherPWAInstallation);\r\n      return () => window.detachEvent('beforeinstallprompt', saveEventForfurtherPWAInstallation);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  //* The listener function will fire when the application is installed on the desktop:\r\n  useEffect(() => {\r\n    const reportAboutPWAInstallationSuccess = () => {\r\n      //* 1. Hide the app-provided install prompt; 2. Clear the instalation event:\r\n      dispatch({\r\n        type: eventForPWAInstallation.type,\r\n        payload: null,\r\n      });\r\n    };\r\n\r\n    if (window.addEventListener) {\r\n      window.addEventListener('appinstalled', reportAboutPWAInstallationSuccess);\r\n      return () => window.removeEventListener('appinstalled', reportAboutPWAInstallationSuccess);\r\n    } else if (window.attachEvent) {\r\n      window.attachEvent('appinstalled', reportAboutPWAInstallationSuccess);\r\n      return () => window.detachEvent('appinstalled', reportAboutPWAInstallationSuccess);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n        type: bigChatClose.type,\r\n    });\r\n    return () => {\r\n        dispatch({\r\n            type: bigChatClose.type,\r\n        });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onIdTokenChanged((user) => {\r\n      if (user) {\r\n        const now = new Date().getTime();\r\n        const period = allowedPeriodInsideTheApp(0, 1, 0, 0, 0, 0, 0);\r\n        if (lastAuthorizationDateAndTime === null || now - lastAuthorizationDateAndTime > period) {\r\n          auth.signOut();\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe()\r\n  }, [lastAuthorizationDateAndTime]);\r\n\r\n  useEffect(() => {\r\n    changeThemeInApp();\r\n  }, [changeThemeInApp, booleanForChangeTheme]);\r\n\r\n  useEffect(() => {\r\n    connectedRef.on(\"value\", (snapshot) => {\r\n      if (snapshot.val() === true) {\r\n        dispatch({\r\n          type: deviceOnTheNetworkAction.type,\r\n          payload: true,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: deviceOnTheNetworkAction.type,\r\n          payload: false,\r\n        });\r\n      }\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <PersistGate loading={<Preloader />} persistor={persistor}>\r\n    <div className={`${classes.main} ${appThemeSel && appThemeSel.themeNameEn ? (appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_2.nameEn ? classes.main_darkTheme : appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_3.nameEn ? classes.main_greyTheme : appThemeSel.themeNameEn === APP_THEMES_NAMES.theme_4.nameEn ? classes.main_sunnyTheme : null) : null}`}>\r\n      {\r\n        emailVerificationStatus !== null\r\n        ? \r\n        <Switch>\r\n        <>\r\n          <DeviceOnTheNetwork></DeviceOnTheNetwork>\r\n          <Header></Header>\r\n          <Box className={`${classes.field} ${mobileMenuOpen ? classes.field_mobileMenuOpen : null} ${isMobileDeviceBoolean ? classes.field_mobileDevice : null}`}>\r\n            <Route exact path={allAppComponentsWithPageTitle.home.path}>\r\n              <Home></Home>\r\n            </Route>\r\n            <PrivateRoute path={allAppComponentsWithPageTitle.profile.path} authenticated={emailVerificationStatus}>\r\n              <Profile></Profile>\r\n            </PrivateRoute>\r\n            <PrivateRoute path={allAppComponentsWithPageTitle.messenger.path} authenticated={emailVerificationStatus}>\r\n              <Box display=\"flex\" justifyContent=\"space-between\" bgcolor=\"trancend\" color=\"white\" height='100%'>\r\n                {isMobileDeviceBoolean && isAquariumStatus ? null : <ChatsList></ChatsList>}\r\n                {isBigChatOpen ? null : <Aquarium></Aquarium>}\r\n                <Route path={allAppComponentsWithPageTitle.error404.path}>\r\n                  <Error404></Error404>\r\n                </Route>\r\n                <Route path={allAppComponentsWithPageTitle.openChat.path}>\r\n                  <Chat></Chat>\r\n                </Route>\r\n              </Box>\r\n            </PrivateRoute>\r\n            <Route path={allAppComponentsWithPageTitle.usersApi.path}>\r\n              <ApiUsers></ApiUsers>\r\n            </Route>\r\n            <PublicRoute path={allAppComponentsWithPageTitle.signup.path} authenticated={emailVerificationStatus}>\r\n              <Signup></Signup>\r\n            </PublicRoute>\r\n            <PublicRoute path={allAppComponentsWithPageTitle.login.path} authenticated={emailVerificationStatus}>\r\n              <Login></Login>\r\n            </PublicRoute>\r\n          </Box>\r\n        </>\r\n        </Switch>\r\n        :\r\n        <StartingScreensaver></StartingScreensaver>\r\n      }\r\n    </div>\r\n    </PersistGate>\r\n  );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (\r\n    process.env.NODE_ENV === 'production' \r\n    && \r\n    'serviceWorker' in navigator\r\n  ) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './styles/index.css';\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/Store';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}